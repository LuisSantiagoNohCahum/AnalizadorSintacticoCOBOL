Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ACCESS
    ADDRESS
    AFTER
    ALL
    ALPHABET
    ALPHABETIC
    ALPHABETIC_LOWER
    ALPHABETIC_UPPER
    ALPHANUMERIC_EDITED
    ALSO
    ALTER
    ALTERNATE
    AND_LOGICO
    ANY
    APHANUMERIC
    APOSTROFE
    APPLY
    ARE
    AREA
    AREAS
    ASCENDING
    ASIGNACION_DIVISION
    ASIGNACION_MULTI
    ASIGNACION_RESIDUO
    ASIGNACION_RESTA
    ASIGNACION_SUMA
    ASSIGN
    AT
    AUTO
    AUTOMATIC
    AUTOTERMINATE
    AUTO_SKIP
    BACKGROUND
    BACKGROUND_COLOR
    BACKGROUND_HIGH
    BACKGROUND_LOW
    BACKWARD
    BEEP
    BEFORE
    BELL
    BINARY
    BIND
    BLANK
    BLINK
    BLINKING
    BLOCK
    BOLD
    BOTTOM
    CALL
    CANCEL
    CD
    CF
    CH
    CHARACTER
    CHARACTERS
    CLASS
    CLOSE
    COBOL
    CODE
    CODE_SET
    COL
    COLLATING
    COLUMN
    COMA
    COMILLAS
    COMMA
    COMMENTS
    COMMENTS_C99
    COMMUNICATION
    COMP
    COMPUTATIONAL
    COMPUTATIONAL_1
    COMPUTATIONAL_2
    COMPUTATIONAL_3
    COMPUTATIONAL_4
    COMPUTE
    COMP_1
    COMP_2
    COMP_3
    COMP_4
    COMP_6
    CONSOLE
    CONTAINS
    CONTENT
    CONTINUE
    CONTROL
    CONTROLS
    CONVERSION
    CONVERT
    CONVERTING
    COPY
    CORCHETE_DER
    CORCHETE_IZQ
    CORR
    CORRESPONDING
    COUNT
    CRT
    CURRENCY
    CURSOR
    DATE
    DAY
    DAY_OF_WEEK
    DE
    DEBUG
    DEBUGGING
    DECIMAL_POINT
    DECLARATIVES
    DECREMENTO
    DEFAULT
    DELETE
    DELIMITED
    DELIMITER
    DEPENDING
    DESCENDING
    DESIGUAL
    DESIGUALDAD_ESTRICTA
    DESTINATION
    DETAIL
    DISABLE
    DISTINTO
    DOS_PUNTOS
    DRAWN
    DUPLICATES
    DYNAMIC
    ECHO
    EGI
    EMI
    EMPTY_CHECK
    ENABLED
    END_ACCEPT
    END_ADD
    END_CALL
    END_COMPUTE
    END_DELETE
    END_DIVIDE
    END_EVALUATEQ
    END_MULTIPLY
    END_OF_PAGE
    END_PERFORM
    END_READ
    END_RECEIVE
    END_RETURN
    END_REWRITE
    END_SEARCH
    END_START
    END_STRING
    END_SUBTRACT
    END_UNSTRING
    END_WRITE
    ENTER
    EOL
    EOP
    EOS
    EQUAL
    ERASE
    ERROR
    ESCAPE
    ESI
    ET
    EVALUATE
    EVERY
    EXCEPTION
    EXCLUSIVE
    EXIT
    EXPONENTE
    EXTEND
    EXTERNAL
    FALSE
    FD
    FILE_CONTROL
    FILE_ID
    FILE_PREFIX
    FILLER
    FINAL
    FIRST
    FOOTING
    FOR
    FOREGROUND_COLOR
    FOREGROUND_COLOUR
    FULL
    GENERATE
    GLOBAL
    GO
    GOBACK
    GREATER
    GRID
    GROUP
    HASHTAG
    HEADING
    HIGH
    HIGHLIGHT
    HIGH_BALUE
    HIGH_VALUES
    IDENTIFICADOR
    IGUAL
    IGUALDAD_ESTRICTA
    IN
    INCREMENTO
    INDEX
    INDEXED
    INDICATE
    INITIAL
    INITIALIZE
    INPUT
    INPUT_OUTPUT
    INSPECT
    INVALID
    IS
    I_O
    JUST
    JUSTIFIED
    KEY
    LABEL
    LAST
    LEADING
    LEFT
    LEFTLINE
    LENGTH_CHECK
    LESS
    LIMIT
    LIMITS
    LINAGE
    LINES
    LINGAKE_COUNTER
    LINKAGE
    LLAVE_DER
    LLAVE_IZQ
    LOCK
    LOCK_HOLDING
    LOW
    LOWLIGHT
    LOW_VALUE
    LOW_VALUES
    MAS_IGUAL
    MEMORY
    MENOS_IGUAL
    MERGE
    MODE
    MODULES
    MOVE
    MULTIPLE
    MULTIPLICACION
    NATIVE
    NEGATIVE
    NOT_LOGICO
    NO_ECHO
    NUMBER
    NUMERIC
    NUMERIC_EDITED
    OCCURS
    OF
    OFF
    OMITTED
    ON
    OPEN
    OPTIONAL
    OP_DIVISION
    ORDER
    ORGANIZATION
    OR_LOGICO
    OTHER
    OTHERS
    OUTPUT
    OVERFLOW
    OVERLINE
    PACKED_DECIMAL
    PADDING
    PAGE_COUNTER
    PERFORM
    PGE
    PLUS
    POINTER
    POS
    POSITION
    POSITIVE
    PREVIOUS
    PRINTING
    PRINT_CONTROL
    PROCEDURES
    PROCEED
    PROMPT
    PROTECTED
    PUNTOYCOMA
    PURGE
    QUEUE
    QUOTE
    QUOTES
    RANDOM
    RD
    READ
    READERS
    RECEIVE
    RECORD
    RECORDING
    RECORDS
    REDEFINES
    REEL
    REFERENCE
    REFERENCES
    RELATIVE
    RELEASE
    REMAINDER
    REMOVAL
    RENAMES
    REPLACE
    REPLACING
    REPORT
    REPORTING
    REPORTS
    REQUIRED
    RERUN
    RESERVE
    RESIDUO
    RESTA
    RETUNRNIN
    RETURN
    RETURN_CODE
    RETURN_UNSIGNED
    REVERSE
    REVERSED
    REVERSE_VIDEO
    REWIND
    REWRITE
    RF
    RH
    RIGHT
    ROLLBACK
    SAME
    SCREEN
    SD
    SEARCH
    SECURE
    SEGMENT
    SEGMENT_LIMIT
    SELECT
    SEND
    SEPARATE
    SEQUENCE
    SEQUENTIAL
    SET
    SIGN
    SIZE
    SORT
    SORT_MERGE
    SOURCE
    SPACE
    SPACES
    STANDARD
    START
    STATUS
    SUMA
    SUPPRESS
    SYCHRONIZED
    SYMBOLIC
    SYNC
    TAB
    TALLYNG
    TAPE
    TERMINAL
    TERMINATE
    TEST
    TEXT
    THAN
    THROUGH
    THRU
    TIME
    TIMES
    TOP
    TRAILING
    TRUE
    UNDERLINE
    UNDERLINED
    UNIT
    UNLOCK
    UNSTRING
    UNTIL
    UP
    UPDATE
    UPDATES
    UPON
    USAGE
    USE
    USING
    VALUES
    VARYING
    WHEN
    WORDS
    WRITE
    WRITERS
    ZERO
    ZEROES
    ZEROS

Grammar

Rule 0     S' -> program
Rule 1     program -> cobol_source_program
Rule 2     cobol_source_program -> cobol_identification_division cobol_source_program
Rule 3     cobol_source_program -> cobol_source_program cobol_enviroment_division cobol_source_program
Rule 4     cobol_source_program -> cobol_source_program cobol_data_division cobol_source_program
Rule 5     cobol_source_program -> cobol_source_program cobol_procedure_division nested_cobol_source_program cobol_source_program
Rule 6     cobol_source_program -> cobol_end_program
Rule 7     cobol_identification_division -> IDENTIFICATION DIVISION PUNTO program_id_cobol_source_program identification_division_content
Rule 8     cobol_identification_division -> ID DIVISION PUNTO program_id_cobol_source_program identification_division_content
Rule 9     cobol_enviroment_division -> ENVIRONMENT DIVISION PUNTO enviroment_division_content
Rule 10    cobol_enviroment_division -> empty
Rule 11    cobol_data_division -> DATA DIVISION PUNTO data_division_content
Rule 12    cobol_data_division -> empty
Rule 13    cobol_procedure_division -> procedure_division
Rule 14    cobol_end_program -> END PROGRAM VARIABLE PUNTO
Rule 15    cobol_end_program -> empty
Rule 16    program_id_cobol_source_program -> PROGRAM_ID PUNTO VARIABLE PUNTO
Rule 17    nested_cobol_source_program -> IDENTIFICATION DIVISION PUNTO program_id_nested_cobol_source_program identification_division_content ENVIRONMENT DIVISION PUNTO enviroment_division_content DATA DIVISION PUNTO data_division_content procedure_division nested_cobol_source_program END PROGRAM VARIABLE PUNTO
Rule 18    nested_cobol_source_program -> empty
Rule 19    program_id_nested_cobol_source_program -> PROGRAM_ID PUNTO VARIABLE PUNTO
Rule 20    identification_division_content -> AUTHOR PUNTO VARIABLE PUNTO identification_division_content
Rule 21    identification_division_content -> identification_division_content INSTALLATION PUNTO VARIABLE PUNTO
Rule 22    identification_division_content -> identification_division_content DATE_WRITTEN PUNTO VARIABLE PUNTO
Rule 23    identification_division_content -> identification_division_content DATE_COMPILED PUNTO VARIABLE PUNTO
Rule 24    identification_division_content -> identification_division_content SECURITY PUNTO VARIABLE PUNTO
Rule 25    identification_division_content -> empty
Rule 26    enviroment_division_content -> configuration_section
Rule 27    configuration_section -> CONFIGURATION SECTION PUNTO
Rule 28    configuration_section -> CONFIGURATION SECTION PUNTO configuration_section_paragrahs
Rule 29    configuration_section -> empty
Rule 30    configuration_section_paragrahs -> source_computer_paragraph object_computer_paragraph special_names_paragraph
Rule 31    source_computer_paragraph -> SOURCE_COMPUTER PUNTO VARIABLE PUNTO
Rule 32    source_computer_paragraph -> empty
Rule 33    object_computer_paragraph -> OBJECT_COMPUTER PUNTO VARIABLE PUNTO
Rule 34    object_computer_paragraph -> empty
Rule 35    special_names_paragraph -> SPECIAL_NAMES PUNTO VARIABLE PUNTO
Rule 36    special_names_paragraph -> empty
Rule 37    data_division_content -> WORKING_STORAGE SECTION PUNTO data_item_entry
Rule 38    data_division_content -> FILE SECTION PUNTO data_file_entry
Rule 39    data_division_content -> FILE SECTION PUNTO WORKING_STORAGE SECTION PUNTO data_item_entry
Rule 40    data_division_content -> empty
Rule 41    data_item_entry -> stament_declaration_var
Rule 42    data_item_entry -> data_item_entry stament_declaration_var
Rule 43    data_item_entry -> empty
Rule 44    data_file_entry -> empty
Rule 45    stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO
Rule 46    stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
Rule 47    stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
Rule 48    stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING
Rule 49    stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PUNTO
Rule 50    stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC NUMERO PUNTO
Rule 51    stament_declaration_var -> NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO
Rule 52    stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
Rule 53    stament_declaration_var -> NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
Rule 54    stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING
Rule 55    stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PUNTO
Rule 56    stament_declaration_var -> NUMERO VARIABLE PIC NUMERO PUNTO
Rule 57    procedure_division -> PROCEDURE DIVISION PUNTO paragrahps
Rule 58    procedure_division -> PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps
Rule 59    procedure_division -> PROCEDURE DIVISION PUNTO paragrahps STOP RUN PUNTO
Rule 60    procedure_division -> PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps STOP RUN PUNTO
Rule 61    paragrahps -> paragrahps statements
Rule 62    paragrahps -> statements
Rule 63    paragrahps -> empty
Rule 64    statements -> stm_display
Rule 65    statements -> stm_acept
Rule 66    statements -> stm_add
Rule 67    statements -> stm_divide
Rule 68    statements -> stm_multiply
Rule 69    statements -> stm_minus
Rule 70    statements -> if_statement
Rule 71    stm_display -> DISPLAY STRING PUNTO
Rule 72    stm_display -> DISPLAY STRING VARIABLE PUNTO
Rule 73    stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO
Rule 74    stm_display -> DISPLAY VARIABLE STRING PUNTO
Rule 75    stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO
Rule 76    stm_display -> DISPLAY STRING PUNTO stm_display
Rule 77    stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO stm_display
Rule 78    stm_display -> DISPLAY STRING VARIABLE PUNTO stm_display
Rule 79    stm_display -> DISPLAY VARIABLE STRING PUNTO stm_display
Rule 80    stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display
Rule 81    stm_acept -> ACCEPT VARIABLE PUNTO
Rule 82    stm_acept -> ACCEPT VARIABLE PUNTO stm_acept
Rule 83    stm_add -> ADD VARIABLE TO VARIABLE GIVING VARIABLE PUNTO
Rule 84    stm_add -> ADD VARIABLE TO VARIABLE PUNTO
Rule 85    stm_divide -> DIVIDE VARIABLE INTO VARIABLE GIVING VARIABLE PUNTO
Rule 86    stm_divide -> DIVIDE VARIABLE INTO VARIABLE PUNTO
Rule 87    stm_multiply -> MULTIPLY VARIABLE BY VARIABLE GIVING VARIABLE PUNTO
Rule 88    stm_multiply -> MULTIPLY VARIABLE BY VARIABLE PUNTO
Rule 89    stm_minus -> SUBTRACT VARIABLE FROM VARIABLE GIVING VARIABLE PUNTO
Rule 90    stm_minus -> SUBTRACT VARIABLE FROM VARIABLE PUNTO
Rule 91    if_statement -> IF conditional ifthen ifelse END_IF
Rule 92    if_statement -> IF conditional ifthen
Rule 93    if_statement -> IF conditional ifthen ifelse
Rule 94    if_statement -> IF conditional ifthen END_IF
Rule 95    ifthen -> THEN NEXT SENTENCE
Rule 96    ifthen -> THEN statements
Rule 97    ifthen -> statements
Rule 98    ifthen -> NEXT SENTENCE
Rule 99    ifelse -> ELSE NEXT SENTENCE
Rule 100   ifelse -> ELSE statements
Rule 101   conditional -> PARENT_IZQ aritmeticExpresion PARENT_DER
Rule 102   conditional -> PARENT_IZQ logicExpresion PARENT_DER
Rule 103   conditional -> aritmeticExpresion
Rule 104   conditional -> logicExpresion
Rule 105   aritmeticExpresion -> VARIABLE MENOR_IGUAL VARIABLE
Rule 106   aritmeticExpresion -> VARIABLE MAYOR_IGUAL VARIABLE
Rule 107   aritmeticExpresion -> VARIABLE ES_IGUAL VARIABLE
Rule 108   aritmeticExpresion -> VARIABLE MENOR_QUE VARIABLE
Rule 109   aritmeticExpresion -> VARIABLE MAYOR_QUE VARIABLE
Rule 110   aritmeticExpresion -> VARIABLE MENOR_IGUAL NUMERO
Rule 111   aritmeticExpresion -> VARIABLE MAYOR_IGUAL NUMERO
Rule 112   aritmeticExpresion -> VARIABLE ES_IGUAL NUMERO
Rule 113   aritmeticExpresion -> VARIABLE MENOR_QUE NUMERO
Rule 114   aritmeticExpresion -> VARIABLE MAYOR_QUE NUMERO
Rule 115   aritmeticExpresion -> NUMERO MENOR_IGUAL VARIABLE
Rule 116   aritmeticExpresion -> NUMERO MAYOR_IGUAL VARIABLE
Rule 117   aritmeticExpresion -> NUMERO ES_IGUAL VARIABLE
Rule 118   aritmeticExpresion -> NUMERO MENOR_QUE VARIABLE
Rule 119   aritmeticExpresion -> NUMERO MAYOR_QUE VARIABLE
Rule 120   logicExpresion -> aritmeticExpresion AND aritmeticExpresion
Rule 121   logicExpresion -> aritmeticExpresion OR aritmeticExpresion
Rule 122   logicExpresion -> logicExpresion OR logicExpresion
Rule 123   logicExpresion -> logicExpresion AND logicExpresion
Rule 124   logicExpresion -> NOT VARIABLE
Rule 125   empty -> <empty>

Terminals, with rules where they appear

ACCEPT               : 81 82
ACCESS               : 
ADD                  : 83 84
ADDRESS              : 
ADVANCING            : 73 77
AFTER                : 
ALL                  : 
ALPHABET             : 
ALPHABETIC           : 
ALPHABETIC_LOWER     : 
ALPHABETIC_UPPER     : 
ALPHANUMERIC_EDITED  : 
ALSO                 : 
ALTER                : 
ALTERNATE            : 
AND                  : 120 123
AND_LOGICO           : 
ANY                  : 
APHANUMERIC          : 
APOSTROFE            : 
APPLY                : 
ARE                  : 
AREA                 : 
AREAS                : 
ASCENDING            : 
ASIGNACION_DIVISION  : 
ASIGNACION_MULTI     : 
ASIGNACION_RESIDUO   : 
ASIGNACION_RESTA     : 
ASIGNACION_SUMA      : 
ASSIGN               : 
AT                   : 
AUTHOR               : 20
AUTO                 : 
AUTOMATIC            : 
AUTOTERMINATE        : 
AUTO_SKIP            : 
BACKGROUND           : 
BACKGROUND_COLOR     : 
BACKGROUND_HIGH      : 
BACKGROUND_LOW       : 
BACKWARD             : 
BEEP                 : 
BEFORE               : 
BELL                 : 
BINARY               : 
BIND                 : 
BLANK                : 
BLINK                : 
BLINKING             : 
BLOCK                : 
BOLD                 : 
BOTTOM               : 
BY                   : 87 88
CALL                 : 
CANCEL               : 
CD                   : 
CF                   : 
CH                   : 
CHARACTER            : 
CHARACTERS           : 
CLASS                : 
CLOSE                : 
COBOL                : 
CODE                 : 
CODE_SET             : 
COL                  : 
COLLATING            : 
COLUMN               : 
COMA                 : 
COMILLAS             : 
COMMA                : 
COMMENTS             : 
COMMENTS_C99         : 
COMMUNICATION        : 
COMP                 : 
COMPUTATIONAL        : 
COMPUTATIONAL_1      : 
COMPUTATIONAL_2      : 
COMPUTATIONAL_3      : 
COMPUTATIONAL_4      : 
COMPUTE              : 
COMP_1               : 
COMP_2               : 
COMP_3               : 
COMP_4               : 
COMP_6               : 
CONFIGURATION        : 27 28
CONSOLE              : 
CONTAINS             : 
CONTENT              : 
CONTINUE             : 
CONTROL              : 
CONTROLS             : 
CONVERSION           : 
CONVERT              : 
CONVERTING           : 
COPY                 : 
CORCHETE_DER         : 
CORCHETE_IZQ         : 
CORR                 : 
CORRESPONDING        : 
COUNT                : 
CRT                  : 
CURRENCY             : 
CURSOR               : 
DATA                 : 11 17
DATE                 : 
DATE_COMPILED        : 23
DATE_WRITTEN         : 22
DAY                  : 
DAY_OF_WEEK          : 
DE                   : 
DEBUG                : 
DEBUGGING            : 
DECIMAL_POINT        : 
DECLARATIVES         : 
DECREMENTO           : 
DEFAULT              : 
DELETE               : 
DELIMITED            : 
DELIMITER            : 
DEPENDING            : 
DESCENDING           : 
DESIGUAL             : 
DESIGUALDAD_ESTRICTA : 
DESTINATION          : 
DETAIL               : 
DISABLE              : 
DISPLAY              : 71 72 73 74 75 76 77 78 79 80
DISTINTO             : 
DIVIDE               : 85 86
DIVISION             : 7 8 9 11 17 17 17 57 58 59 60
DOS_PUNTOS           : 
DRAWN                : 
DUPLICATES           : 
DYNAMIC              : 
ECHO                 : 
EGI                  : 
ELSE                 : 99 100
EMI                  : 
EMPTY_CHECK          : 
ENABLED              : 
END                  : 14 17
END_ACCEPT           : 
END_ADD              : 
END_CALL             : 
END_COMPUTE          : 
END_DELETE           : 
END_DIVIDE           : 
END_EVALUATEQ        : 
END_IF               : 91 94
END_MULTIPLY         : 
END_OF_PAGE          : 
END_PERFORM          : 
END_READ             : 
END_RECEIVE          : 
END_RETURN           : 
END_REWRITE          : 
END_SEARCH           : 
END_START            : 
END_STRING           : 
END_SUBTRACT         : 
END_UNSTRING         : 
END_WRITE            : 
ENTER                : 
ENVIRONMENT          : 9 17
EOL                  : 
EOP                  : 
EOS                  : 
EQUAL                : 
ERASE                : 
ERROR                : 
ESCAPE               : 
ESI                  : 
ES_IGUAL             : 107 112 117
ET                   : 
EVALUATE             : 
EVERY                : 
EXCEPTION            : 
EXCLUSIVE            : 
EXIT                 : 
EXPONENTE            : 
EXTEND               : 
EXTERNAL             : 
FALSE                : 
FD                   : 
FILE                 : 38 39
FILE_CONTROL         : 
FILE_ID              : 
FILE_PREFIX          : 
FILLER               : 
FINAL                : 
FIRST                : 
FOOTING              : 
FOR                  : 
FOREGROUND_COLOR     : 
FOREGROUND_COLOUR    : 
FROM                 : 89 90
FULL                 : 
FUNCTION             : 75 80
GENERATE             : 
GIVING               : 83 85 87 89
GLOBAL               : 
GO                   : 
GOBACK               : 
GREATER              : 
GRID                 : 
GROUP                : 
HASHTAG              : 
HEADING              : 
HIGH                 : 
HIGHLIGHT            : 
HIGH_BALUE           : 
HIGH_VALUES          : 
ID                   : 8
IDENTIFICADOR        : 
IDENTIFICATION       : 7 17
IF                   : 91 92 93 94
IGUAL                : 
IGUALDAD_ESTRICTA    : 
IN                   : 
INCREMENTO           : 
INDEX                : 
INDEXED              : 
INDICATE             : 
INITIAL              : 
INITIALIZE           : 
INPUT                : 
INPUT_OUTPUT         : 
INSPECT              : 
INSTALLATION         : 21
INTO                 : 85 86
INVALID              : 
IS                   : 
I_O                  : 
JUST                 : 
JUSTIFIED            : 
KEY                  : 
LABEL                : 
LAST                 : 
LEADING              : 
LEFT                 : 
LEFTLINE             : 
LENGTH               : 75 80
LENGTH_CHECK         : 
LESS                 : 
LIMIT                : 
LIMITS               : 
LINAGE               : 
LINES                : 
LINGAKE_COUNTER      : 
LINKAGE              : 
LLAVE_DER            : 
LLAVE_IZQ            : 
LOCK                 : 
LOCK_HOLDING         : 
LOW                  : 
LOWLIGHT             : 
LOW_VALUE            : 
LOW_VALUES           : 
MAIN_PROCEDURE       : 58 60
MAS_IGUAL            : 
MAYOR_IGUAL          : 106 111 116
MAYOR_QUE            : 109 114 119
MEMORY               : 
MENOR_IGUAL          : 105 110 115
MENOR_QUE            : 108 113 118
MENOS_IGUAL          : 
MERGE                : 
MODE                 : 
MODULES              : 
MOVE                 : 
MULTIPLE             : 
MULTIPLICACION       : 
MULTIPLY             : 87 88
NATIVE               : 
NEGATIVE             : 
NEXT                 : 95 98 99
NO                   : 73 77
NOT                  : 124
NOT_LOGICO           : 
NO_ECHO              : 
NUMBER               : 
NUMERIC              : 
NUMERIC_EDITED       : 
NUMERO               : 45 45 45 46 46 47 47 48 48 49 50 50 51 51 51 52 52 53 53 54 54 55 56 56 110 111 112 113 114 115 116 117 118 119
OBJECT_COMPUTER      : 33
OCCURS               : 
OF                   : 
OFF                  : 
OMITTED              : 
ON                   : 
OPEN                 : 
OPTIONAL             : 
OP_DIVISION          : 
OR                   : 121 122
ORDER                : 
ORGANIZATION         : 
OR_LOGICO            : 
OTHER                : 
OTHERS               : 
OUTPUT               : 
OVERFLOW             : 
OVERLINE             : 
PACKED_DECIMAL       : 
PADDING              : 
PAGE_COUNTER         : 
PARENT_DER           : 45 46 47 48 51 52 53 54 75 80 101 102
PARENT_IZQ           : 45 46 47 48 51 52 53 54 75 80 101 102
PERFORM              : 
PGE                  : 
PIC                  : 45 46 48 49 50 51 52 54 55 56
PICTURE              : 47 53
PLUS                 : 
POINTER              : 
POS                  : 
POSITION             : 
POSITIVE             : 
PREVIOUS             : 
PRINTING             : 
PRINT_CONTROL        : 
PROCEDURE            : 57 58 59 60
PROCEDURES           : 
PROCEED              : 
PROGRAM              : 14 17
PROGRAM_ID           : 16 19
PROMPT               : 
PROTECTED            : 
PUNTO                : 7 8 9 11 14 16 16 17 17 17 17 19 19 20 20 21 21 22 22 23 23 24 24 27 28 31 31 33 33 35 35 37 38 39 39 45 46 47 48 49 50 51 52 53 54 55 56 57 58 58 59 59 60 60 60 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90
PUNTOYCOMA           : 
PURGE                : 
QUEUE                : 
QUOTE                : 
QUOTES               : 
RANDOM               : 
RD                   : 
READ                 : 
READERS              : 
RECEIVE              : 
RECORD               : 
RECORDING            : 
RECORDS              : 
REDEFINES            : 
REEL                 : 
REFERENCE            : 
REFERENCES           : 
RELATIVE             : 
RELEASE              : 
REMAINDER            : 
REMOVAL              : 
RENAMES              : 
REPLACE              : 
REPLACING            : 
REPORT               : 
REPORTING            : 
REPORTS              : 
REQUIRED             : 
RERUN                : 
RESERVE              : 
RESIDUO              : 
RESTA                : 
RETUNRNIN            : 
RETURN               : 
RETURN_CODE          : 
RETURN_UNSIGNED      : 
REVERSE              : 
REVERSED             : 
REVERSE_VIDEO        : 
REWIND               : 
REWRITE              : 
RF                   : 
RH                   : 
RIGHT                : 
ROLLBACK             : 
RUN                  : 59 60
SAME                 : 
SCREEN               : 
SD                   : 
SEARCH               : 
SECTION              : 27 28 37 38 39 39
SECURE               : 
SECURITY             : 24
SEGMENT              : 
SEGMENT_LIMIT        : 
SELECT               : 
SEND                 : 
SENTENCE             : 95 98 99
SEPARATE             : 
SEQUENCE             : 
SEQUENTIAL           : 
SET                  : 
SIGN                 : 
SIZE                 : 
SORT                 : 
SORT_MERGE           : 
SOURCE               : 
SOURCE_COMPUTER      : 31
SPACE                : 
SPACES               : 
SPECIAL_NAMES        : 35
STANDARD             : 
START                : 
STATUS               : 
STOP                 : 59 60
STRING               : 48 54 71 72 73 74 75 76 77 78 79 80
SUBTRACT             : 89 90
SUMA                 : 
SUPPRESS             : 
SYCHRONIZED          : 
SYMBOLIC             : 
SYNC                 : 
TAB                  : 
TALLYNG              : 
TAPE                 : 
TERMINAL             : 
TERMINATE            : 
TEST                 : 
TEXT                 : 
THAN                 : 
THEN                 : 95 96
THROUGH              : 
THRU                 : 
TIME                 : 
TIMES                : 
TO                   : 83 84
TOP                  : 
TRAILING             : 
TRUE                 : 
UNDERLINE            : 
UNDERLINED           : 
UNIT                 : 
UNLOCK               : 
UNSTRING             : 
UNTIL                : 
UP                   : 
UPDATE               : 
UPDATES              : 
UPON                 : 
USAGE                : 
USE                  : 
USING                : 
VALUE                : 48 54
VALUES               : 
VARIABLE             : 14 16 17 19 20 21 22 23 24 31 33 35 45 46 46 47 47 48 48 49 49 50 51 52 52 53 53 54 54 55 55 56 72 74 75 78 79 80 81 82 83 83 83 84 84 85 85 85 86 86 87 87 87 88 88 89 89 89 90 90 105 105 106 106 107 107 108 108 109 109 110 111 112 113 114 115 116 117 118 119 124
VARYING              : 
WHEN                 : 
WITH                 : 73 77
WORDS                : 
WORKING_STORAGE      : 37 39
WRITE                : 
WRITERS              : 
ZERO                 : 
ZEROES               : 
ZEROS                : 
error                : 

Nonterminals, with rules where they appear

aritmeticExpresion   : 101 103 120 120 121 121
cobol_data_division  : 4
cobol_end_program    : 6
cobol_enviroment_division : 3
cobol_identification_division : 2
cobol_procedure_division : 5
cobol_source_program : 1 2 3 3 4 4 5 5
conditional          : 91 92 93 94
configuration_section : 26
configuration_section_paragrahs : 28
data_division_content : 11 17
data_file_entry      : 38
data_item_entry      : 37 39 42
empty                : 10 12 15 18 25 29 32 34 36 40 43 44 63
enviroment_division_content : 9 17
identification_division_content : 7 8 17 20 21 22 23 24
if_statement         : 70
ifelse               : 91 93
ifthen               : 91 92 93 94
logicExpresion       : 102 104 122 122 123 123
nested_cobol_source_program : 5 17
object_computer_paragraph : 30
paragrahps           : 57 58 59 60 61
procedure_division   : 13 17
program              : 0
program_id_cobol_source_program : 7 8
program_id_nested_cobol_source_program : 17
source_computer_paragraph : 30
special_names_paragraph : 30
stament_declaration_var : 41 42 45 46 47 48 49 50
statements           : 61 62 96 97 100
stm_acept            : 65 82
stm_add              : 66
stm_display          : 64 76 77 78 79 80
stm_divide           : 67
stm_minus            : 69
stm_multiply         : 68

Parsing method: SLR

state 0

    (0) S' -> . program
    (1) program -> . cobol_source_program
    (2) cobol_source_program -> . cobol_identification_division cobol_source_program
    (3) cobol_source_program -> . cobol_source_program cobol_enviroment_division cobol_source_program
    (4) cobol_source_program -> . cobol_source_program cobol_data_division cobol_source_program
    (5) cobol_source_program -> . cobol_source_program cobol_procedure_division nested_cobol_source_program cobol_source_program
    (6) cobol_source_program -> . cobol_end_program
    (7) cobol_identification_division -> . IDENTIFICATION DIVISION PUNTO program_id_cobol_source_program identification_division_content
    (8) cobol_identification_division -> . ID DIVISION PUNTO program_id_cobol_source_program identification_division_content
    (14) cobol_end_program -> . END PROGRAM VARIABLE PUNTO
    (15) cobol_end_program -> . empty
    (125) empty -> .

  ! shift/reduce conflict for IDENTIFICATION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for END resolved as shift
    IDENTIFICATION  shift and go to state 5
    ID              shift and go to state 6
    END             shift and go to state 7
    ENVIRONMENT     reduce using rule 125 (empty -> .)
    DATA            reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    $end            reduce using rule 125 (empty -> .)
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    OBJECT_COMPUTER reduce using rule 125 (empty -> .)
    SPECIAL_NAMES   reduce using rule 125 (empty -> .)
    NUMERO          reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         reduce using rule 125 (empty -> .)
    ACCEPT          reduce using rule 125 (empty -> .)
    ADD             reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    MULTIPLY        reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)

  ! IDENTIFICATION  [ reduce using rule 125 (empty -> .) ]
  ! ID              [ reduce using rule 125 (empty -> .) ]
  ! END             [ reduce using rule 125 (empty -> .) ]

    program                        shift and go to state 1
    cobol_source_program           shift and go to state 2
    cobol_identification_division  shift and go to state 3
    cobol_end_program              shift and go to state 4
    empty                          shift and go to state 8

state 1

    (0) S' -> program .



state 2

    (1) program -> cobol_source_program .
    (3) cobol_source_program -> cobol_source_program . cobol_enviroment_division cobol_source_program
    (4) cobol_source_program -> cobol_source_program . cobol_data_division cobol_source_program
    (5) cobol_source_program -> cobol_source_program . cobol_procedure_division nested_cobol_source_program cobol_source_program
    (9) cobol_enviroment_division -> . ENVIRONMENT DIVISION PUNTO enviroment_division_content
    (10) cobol_enviroment_division -> . empty
    (11) cobol_data_division -> . DATA DIVISION PUNTO data_division_content
    (12) cobol_data_division -> . empty
    (13) cobol_procedure_division -> . procedure_division
    (125) empty -> .
    (57) procedure_division -> . PROCEDURE DIVISION PUNTO paragrahps
    (58) procedure_division -> . PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps
    (59) procedure_division -> . PROCEDURE DIVISION PUNTO paragrahps STOP RUN PUNTO
    (60) procedure_division -> . PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps STOP RUN PUNTO

  ! shift/reduce conflict for ENVIRONMENT resolved as shift
  ! shift/reduce conflict for DATA resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 1 (program -> cobol_source_program .)
  ! shift/reduce conflict for PROCEDURE resolved as shift
    $end            reduce using rule 1 (program -> cobol_source_program .)
    ENVIRONMENT     shift and go to state 12
    DATA            shift and go to state 14
    IDENTIFICATION  reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    END             reduce using rule 125 (empty -> .)
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    OBJECT_COMPUTER reduce using rule 125 (empty -> .)
    SPECIAL_NAMES   reduce using rule 125 (empty -> .)
    NUMERO          reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         reduce using rule 125 (empty -> .)
    ACCEPT          reduce using rule 125 (empty -> .)
    ADD             reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    MULTIPLY        reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    PROCEDURE       shift and go to state 16

  ! ENVIRONMENT     [ reduce using rule 125 (empty -> .) ]
  ! DATA            [ reduce using rule 125 (empty -> .) ]
  ! PROCEDURE       [ reduce using rule 125 (empty -> .) ]
  ! $end            [ reduce using rule 125 (empty -> .) ]

    cobol_enviroment_division      shift and go to state 9
    cobol_data_division            shift and go to state 10
    cobol_procedure_division       shift and go to state 11
    empty                          shift and go to state 13
    procedure_division             shift and go to state 15

state 3

    (2) cobol_source_program -> cobol_identification_division . cobol_source_program
    (2) cobol_source_program -> . cobol_identification_division cobol_source_program
    (3) cobol_source_program -> . cobol_source_program cobol_enviroment_division cobol_source_program
    (4) cobol_source_program -> . cobol_source_program cobol_data_division cobol_source_program
    (5) cobol_source_program -> . cobol_source_program cobol_procedure_division nested_cobol_source_program cobol_source_program
    (6) cobol_source_program -> . cobol_end_program
    (7) cobol_identification_division -> . IDENTIFICATION DIVISION PUNTO program_id_cobol_source_program identification_division_content
    (8) cobol_identification_division -> . ID DIVISION PUNTO program_id_cobol_source_program identification_division_content
    (14) cobol_end_program -> . END PROGRAM VARIABLE PUNTO
    (15) cobol_end_program -> . empty
    (125) empty -> .

  ! shift/reduce conflict for IDENTIFICATION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for END resolved as shift
    IDENTIFICATION  shift and go to state 5
    ID              shift and go to state 6
    END             shift and go to state 7
    ENVIRONMENT     reduce using rule 125 (empty -> .)
    DATA            reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    $end            reduce using rule 125 (empty -> .)
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    OBJECT_COMPUTER reduce using rule 125 (empty -> .)
    SPECIAL_NAMES   reduce using rule 125 (empty -> .)
    NUMERO          reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         reduce using rule 125 (empty -> .)
    ACCEPT          reduce using rule 125 (empty -> .)
    ADD             reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    MULTIPLY        reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)

  ! IDENTIFICATION  [ reduce using rule 125 (empty -> .) ]
  ! ID              [ reduce using rule 125 (empty -> .) ]
  ! END             [ reduce using rule 125 (empty -> .) ]

    cobol_identification_division  shift and go to state 3
    cobol_source_program           shift and go to state 17
    cobol_end_program              shift and go to state 4
    empty                          shift and go to state 8

state 4

    (6) cobol_source_program -> cobol_end_program .

    $end            reduce using rule 6 (cobol_source_program -> cobol_end_program .)
    ENVIRONMENT     reduce using rule 6 (cobol_source_program -> cobol_end_program .)
    IDENTIFICATION  reduce using rule 6 (cobol_source_program -> cobol_end_program .)
    ID              reduce using rule 6 (cobol_source_program -> cobol_end_program .)
    END             reduce using rule 6 (cobol_source_program -> cobol_end_program .)
    DATA            reduce using rule 6 (cobol_source_program -> cobol_end_program .)
    PROCEDURE       reduce using rule 6 (cobol_source_program -> cobol_end_program .)


state 5

    (7) cobol_identification_division -> IDENTIFICATION . DIVISION PUNTO program_id_cobol_source_program identification_division_content

    DIVISION        shift and go to state 18


state 6

    (8) cobol_identification_division -> ID . DIVISION PUNTO program_id_cobol_source_program identification_division_content

    DIVISION        shift and go to state 19


state 7

    (14) cobol_end_program -> END . PROGRAM VARIABLE PUNTO

    PROGRAM         shift and go to state 20


state 8

    (15) cobol_end_program -> empty .

    $end            reduce using rule 15 (cobol_end_program -> empty .)
    ENVIRONMENT     reduce using rule 15 (cobol_end_program -> empty .)
    IDENTIFICATION  reduce using rule 15 (cobol_end_program -> empty .)
    ID              reduce using rule 15 (cobol_end_program -> empty .)
    END             reduce using rule 15 (cobol_end_program -> empty .)
    DATA            reduce using rule 15 (cobol_end_program -> empty .)
    PROCEDURE       reduce using rule 15 (cobol_end_program -> empty .)


state 9

    (3) cobol_source_program -> cobol_source_program cobol_enviroment_division . cobol_source_program
    (2) cobol_source_program -> . cobol_identification_division cobol_source_program
    (3) cobol_source_program -> . cobol_source_program cobol_enviroment_division cobol_source_program
    (4) cobol_source_program -> . cobol_source_program cobol_data_division cobol_source_program
    (5) cobol_source_program -> . cobol_source_program cobol_procedure_division nested_cobol_source_program cobol_source_program
    (6) cobol_source_program -> . cobol_end_program
    (7) cobol_identification_division -> . IDENTIFICATION DIVISION PUNTO program_id_cobol_source_program identification_division_content
    (8) cobol_identification_division -> . ID DIVISION PUNTO program_id_cobol_source_program identification_division_content
    (14) cobol_end_program -> . END PROGRAM VARIABLE PUNTO
    (15) cobol_end_program -> . empty
    (125) empty -> .

  ! shift/reduce conflict for IDENTIFICATION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for END resolved as shift
    IDENTIFICATION  shift and go to state 5
    ID              shift and go to state 6
    END             shift and go to state 7
    ENVIRONMENT     reduce using rule 125 (empty -> .)
    DATA            reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    $end            reduce using rule 125 (empty -> .)
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    OBJECT_COMPUTER reduce using rule 125 (empty -> .)
    SPECIAL_NAMES   reduce using rule 125 (empty -> .)
    NUMERO          reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         reduce using rule 125 (empty -> .)
    ACCEPT          reduce using rule 125 (empty -> .)
    ADD             reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    MULTIPLY        reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)

  ! IDENTIFICATION  [ reduce using rule 125 (empty -> .) ]
  ! ID              [ reduce using rule 125 (empty -> .) ]
  ! END             [ reduce using rule 125 (empty -> .) ]

    cobol_source_program           shift and go to state 21
    cobol_identification_division  shift and go to state 3
    cobol_end_program              shift and go to state 4
    empty                          shift and go to state 8

state 10

    (4) cobol_source_program -> cobol_source_program cobol_data_division . cobol_source_program
    (2) cobol_source_program -> . cobol_identification_division cobol_source_program
    (3) cobol_source_program -> . cobol_source_program cobol_enviroment_division cobol_source_program
    (4) cobol_source_program -> . cobol_source_program cobol_data_division cobol_source_program
    (5) cobol_source_program -> . cobol_source_program cobol_procedure_division nested_cobol_source_program cobol_source_program
    (6) cobol_source_program -> . cobol_end_program
    (7) cobol_identification_division -> . IDENTIFICATION DIVISION PUNTO program_id_cobol_source_program identification_division_content
    (8) cobol_identification_division -> . ID DIVISION PUNTO program_id_cobol_source_program identification_division_content
    (14) cobol_end_program -> . END PROGRAM VARIABLE PUNTO
    (15) cobol_end_program -> . empty
    (125) empty -> .

  ! shift/reduce conflict for IDENTIFICATION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for END resolved as shift
    IDENTIFICATION  shift and go to state 5
    ID              shift and go to state 6
    END             shift and go to state 7
    ENVIRONMENT     reduce using rule 125 (empty -> .)
    DATA            reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    $end            reduce using rule 125 (empty -> .)
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    OBJECT_COMPUTER reduce using rule 125 (empty -> .)
    SPECIAL_NAMES   reduce using rule 125 (empty -> .)
    NUMERO          reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         reduce using rule 125 (empty -> .)
    ACCEPT          reduce using rule 125 (empty -> .)
    ADD             reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    MULTIPLY        reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)

  ! IDENTIFICATION  [ reduce using rule 125 (empty -> .) ]
  ! ID              [ reduce using rule 125 (empty -> .) ]
  ! END             [ reduce using rule 125 (empty -> .) ]

    cobol_source_program           shift and go to state 22
    cobol_identification_division  shift and go to state 3
    cobol_end_program              shift and go to state 4
    empty                          shift and go to state 8

state 11

    (5) cobol_source_program -> cobol_source_program cobol_procedure_division . nested_cobol_source_program cobol_source_program
    (17) nested_cobol_source_program -> . IDENTIFICATION DIVISION PUNTO program_id_nested_cobol_source_program identification_division_content ENVIRONMENT DIVISION PUNTO enviroment_division_content DATA DIVISION PUNTO data_division_content procedure_division nested_cobol_source_program END PROGRAM VARIABLE PUNTO
    (18) nested_cobol_source_program -> . empty
    (125) empty -> .

  ! shift/reduce conflict for IDENTIFICATION resolved as shift
    IDENTIFICATION  shift and go to state 24
    ID              reduce using rule 125 (empty -> .)
    END             reduce using rule 125 (empty -> .)
    ENVIRONMENT     reduce using rule 125 (empty -> .)
    DATA            reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    $end            reduce using rule 125 (empty -> .)
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    OBJECT_COMPUTER reduce using rule 125 (empty -> .)
    SPECIAL_NAMES   reduce using rule 125 (empty -> .)
    NUMERO          reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         reduce using rule 125 (empty -> .)
    ACCEPT          reduce using rule 125 (empty -> .)
    ADD             reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    MULTIPLY        reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)

  ! IDENTIFICATION  [ reduce using rule 125 (empty -> .) ]

    nested_cobol_source_program    shift and go to state 23
    empty                          shift and go to state 25

state 12

    (9) cobol_enviroment_division -> ENVIRONMENT . DIVISION PUNTO enviroment_division_content

    DIVISION        shift and go to state 26


state 13

    (10) cobol_enviroment_division -> empty .
    (12) cobol_data_division -> empty .

  ! reduce/reduce conflict for IDENTIFICATION resolved using rule 10 (cobol_enviroment_division -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 10 (cobol_enviroment_division -> empty .)
  ! reduce/reduce conflict for END resolved using rule 10 (cobol_enviroment_division -> empty .)
  ! reduce/reduce conflict for ENVIRONMENT resolved using rule 10 (cobol_enviroment_division -> empty .)
  ! reduce/reduce conflict for DATA resolved using rule 10 (cobol_enviroment_division -> empty .)
  ! reduce/reduce conflict for PROCEDURE resolved using rule 10 (cobol_enviroment_division -> empty .)
  ! reduce/reduce conflict for $end resolved using rule 10 (cobol_enviroment_division -> empty .)
    IDENTIFICATION  reduce using rule 10 (cobol_enviroment_division -> empty .)
    ID              reduce using rule 10 (cobol_enviroment_division -> empty .)
    END             reduce using rule 10 (cobol_enviroment_division -> empty .)
    ENVIRONMENT     reduce using rule 10 (cobol_enviroment_division -> empty .)
    DATA            reduce using rule 10 (cobol_enviroment_division -> empty .)
    PROCEDURE       reduce using rule 10 (cobol_enviroment_division -> empty .)
    $end            reduce using rule 10 (cobol_enviroment_division -> empty .)

  ! IDENTIFICATION  [ reduce using rule 12 (cobol_data_division -> empty .) ]
  ! ID              [ reduce using rule 12 (cobol_data_division -> empty .) ]
  ! END             [ reduce using rule 12 (cobol_data_division -> empty .) ]
  ! ENVIRONMENT     [ reduce using rule 12 (cobol_data_division -> empty .) ]
  ! DATA            [ reduce using rule 12 (cobol_data_division -> empty .) ]
  ! PROCEDURE       [ reduce using rule 12 (cobol_data_division -> empty .) ]
  ! $end            [ reduce using rule 12 (cobol_data_division -> empty .) ]


state 14

    (11) cobol_data_division -> DATA . DIVISION PUNTO data_division_content

    DIVISION        shift and go to state 27


state 15

    (13) cobol_procedure_division -> procedure_division .

    IDENTIFICATION  reduce using rule 13 (cobol_procedure_division -> procedure_division .)
    ID              reduce using rule 13 (cobol_procedure_division -> procedure_division .)
    END             reduce using rule 13 (cobol_procedure_division -> procedure_division .)
    ENVIRONMENT     reduce using rule 13 (cobol_procedure_division -> procedure_division .)
    DATA            reduce using rule 13 (cobol_procedure_division -> procedure_division .)
    PROCEDURE       reduce using rule 13 (cobol_procedure_division -> procedure_division .)
    $end            reduce using rule 13 (cobol_procedure_division -> procedure_division .)


state 16

    (57) procedure_division -> PROCEDURE . DIVISION PUNTO paragrahps
    (58) procedure_division -> PROCEDURE . DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps
    (59) procedure_division -> PROCEDURE . DIVISION PUNTO paragrahps STOP RUN PUNTO
    (60) procedure_division -> PROCEDURE . DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps STOP RUN PUNTO

    DIVISION        shift and go to state 28


state 17

    (2) cobol_source_program -> cobol_identification_division cobol_source_program .
    (3) cobol_source_program -> cobol_source_program . cobol_enviroment_division cobol_source_program
    (4) cobol_source_program -> cobol_source_program . cobol_data_division cobol_source_program
    (5) cobol_source_program -> cobol_source_program . cobol_procedure_division nested_cobol_source_program cobol_source_program
    (9) cobol_enviroment_division -> . ENVIRONMENT DIVISION PUNTO enviroment_division_content
    (10) cobol_enviroment_division -> . empty
    (11) cobol_data_division -> . DATA DIVISION PUNTO data_division_content
    (12) cobol_data_division -> . empty
    (13) cobol_procedure_division -> . procedure_division
    (125) empty -> .
    (57) procedure_division -> . PROCEDURE DIVISION PUNTO paragrahps
    (58) procedure_division -> . PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps
    (59) procedure_division -> . PROCEDURE DIVISION PUNTO paragrahps STOP RUN PUNTO
    (60) procedure_division -> . PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps STOP RUN PUNTO

  ! shift/reduce conflict for ENVIRONMENT resolved as shift
  ! shift/reduce conflict for DATA resolved as shift
  ! reduce/reduce conflict for IDENTIFICATION resolved using rule 2 (cobol_source_program -> cobol_identification_division cobol_source_program .)
  ! reduce/reduce conflict for ID resolved using rule 2 (cobol_source_program -> cobol_identification_division cobol_source_program .)
  ! reduce/reduce conflict for END resolved using rule 2 (cobol_source_program -> cobol_identification_division cobol_source_program .)
  ! shift/reduce conflict for ENVIRONMENT resolved as shift
  ! shift/reduce conflict for DATA resolved as shift
  ! reduce/reduce conflict for PROCEDURE resolved using rule 2 (cobol_source_program -> cobol_identification_division cobol_source_program .)
  ! reduce/reduce conflict for $end resolved using rule 2 (cobol_source_program -> cobol_identification_division cobol_source_program .)
  ! shift/reduce conflict for PROCEDURE resolved as shift
    $end            reduce using rule 2 (cobol_source_program -> cobol_identification_division cobol_source_program .)
    IDENTIFICATION  reduce using rule 2 (cobol_source_program -> cobol_identification_division cobol_source_program .)
    ID              reduce using rule 2 (cobol_source_program -> cobol_identification_division cobol_source_program .)
    END             reduce using rule 2 (cobol_source_program -> cobol_identification_division cobol_source_program .)
    ENVIRONMENT     shift and go to state 12
    DATA            shift and go to state 14
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    OBJECT_COMPUTER reduce using rule 125 (empty -> .)
    SPECIAL_NAMES   reduce using rule 125 (empty -> .)
    NUMERO          reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         reduce using rule 125 (empty -> .)
    ACCEPT          reduce using rule 125 (empty -> .)
    ADD             reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    MULTIPLY        reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    PROCEDURE       shift and go to state 16

  ! ENVIRONMENT     [ reduce using rule 2 (cobol_source_program -> cobol_identification_division cobol_source_program .) ]
  ! DATA            [ reduce using rule 2 (cobol_source_program -> cobol_identification_division cobol_source_program .) ]
  ! PROCEDURE       [ reduce using rule 2 (cobol_source_program -> cobol_identification_division cobol_source_program .) ]
  ! IDENTIFICATION  [ reduce using rule 125 (empty -> .) ]
  ! ID              [ reduce using rule 125 (empty -> .) ]
  ! END             [ reduce using rule 125 (empty -> .) ]
  ! ENVIRONMENT     [ reduce using rule 125 (empty -> .) ]
  ! DATA            [ reduce using rule 125 (empty -> .) ]
  ! PROCEDURE       [ reduce using rule 125 (empty -> .) ]
  ! $end            [ reduce using rule 125 (empty -> .) ]

    cobol_enviroment_division      shift and go to state 9
    cobol_data_division            shift and go to state 10
    cobol_procedure_division       shift and go to state 11
    empty                          shift and go to state 13
    procedure_division             shift and go to state 15

state 18

    (7) cobol_identification_division -> IDENTIFICATION DIVISION . PUNTO program_id_cobol_source_program identification_division_content

    PUNTO           shift and go to state 29


state 19

    (8) cobol_identification_division -> ID DIVISION . PUNTO program_id_cobol_source_program identification_division_content

    PUNTO           shift and go to state 30


state 20

    (14) cobol_end_program -> END PROGRAM . VARIABLE PUNTO

    VARIABLE        shift and go to state 31


state 21

    (3) cobol_source_program -> cobol_source_program cobol_enviroment_division cobol_source_program .
    (3) cobol_source_program -> cobol_source_program . cobol_enviroment_division cobol_source_program
    (4) cobol_source_program -> cobol_source_program . cobol_data_division cobol_source_program
    (5) cobol_source_program -> cobol_source_program . cobol_procedure_division nested_cobol_source_program cobol_source_program
    (9) cobol_enviroment_division -> . ENVIRONMENT DIVISION PUNTO enviroment_division_content
    (10) cobol_enviroment_division -> . empty
    (11) cobol_data_division -> . DATA DIVISION PUNTO data_division_content
    (12) cobol_data_division -> . empty
    (13) cobol_procedure_division -> . procedure_division
    (125) empty -> .
    (57) procedure_division -> . PROCEDURE DIVISION PUNTO paragrahps
    (58) procedure_division -> . PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps
    (59) procedure_division -> . PROCEDURE DIVISION PUNTO paragrahps STOP RUN PUNTO
    (60) procedure_division -> . PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps STOP RUN PUNTO

  ! shift/reduce conflict for ENVIRONMENT resolved as shift
  ! shift/reduce conflict for DATA resolved as shift
  ! reduce/reduce conflict for IDENTIFICATION resolved using rule 3 (cobol_source_program -> cobol_source_program cobol_enviroment_division cobol_source_program .)
  ! reduce/reduce conflict for ID resolved using rule 3 (cobol_source_program -> cobol_source_program cobol_enviroment_division cobol_source_program .)
  ! reduce/reduce conflict for END resolved using rule 3 (cobol_source_program -> cobol_source_program cobol_enviroment_division cobol_source_program .)
  ! shift/reduce conflict for ENVIRONMENT resolved as shift
  ! shift/reduce conflict for DATA resolved as shift
  ! reduce/reduce conflict for PROCEDURE resolved using rule 3 (cobol_source_program -> cobol_source_program cobol_enviroment_division cobol_source_program .)
  ! reduce/reduce conflict for $end resolved using rule 3 (cobol_source_program -> cobol_source_program cobol_enviroment_division cobol_source_program .)
  ! shift/reduce conflict for PROCEDURE resolved as shift
    $end            reduce using rule 3 (cobol_source_program -> cobol_source_program cobol_enviroment_division cobol_source_program .)
    IDENTIFICATION  reduce using rule 3 (cobol_source_program -> cobol_source_program cobol_enviroment_division cobol_source_program .)
    ID              reduce using rule 3 (cobol_source_program -> cobol_source_program cobol_enviroment_division cobol_source_program .)
    END             reduce using rule 3 (cobol_source_program -> cobol_source_program cobol_enviroment_division cobol_source_program .)
    ENVIRONMENT     shift and go to state 12
    DATA            shift and go to state 14
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    OBJECT_COMPUTER reduce using rule 125 (empty -> .)
    SPECIAL_NAMES   reduce using rule 125 (empty -> .)
    NUMERO          reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         reduce using rule 125 (empty -> .)
    ACCEPT          reduce using rule 125 (empty -> .)
    ADD             reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    MULTIPLY        reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    PROCEDURE       shift and go to state 16

  ! ENVIRONMENT     [ reduce using rule 3 (cobol_source_program -> cobol_source_program cobol_enviroment_division cobol_source_program .) ]
  ! DATA            [ reduce using rule 3 (cobol_source_program -> cobol_source_program cobol_enviroment_division cobol_source_program .) ]
  ! PROCEDURE       [ reduce using rule 3 (cobol_source_program -> cobol_source_program cobol_enviroment_division cobol_source_program .) ]
  ! IDENTIFICATION  [ reduce using rule 125 (empty -> .) ]
  ! ID              [ reduce using rule 125 (empty -> .) ]
  ! END             [ reduce using rule 125 (empty -> .) ]
  ! ENVIRONMENT     [ reduce using rule 125 (empty -> .) ]
  ! DATA            [ reduce using rule 125 (empty -> .) ]
  ! PROCEDURE       [ reduce using rule 125 (empty -> .) ]
  ! $end            [ reduce using rule 125 (empty -> .) ]

    cobol_enviroment_division      shift and go to state 9
    cobol_data_division            shift and go to state 10
    cobol_procedure_division       shift and go to state 11
    empty                          shift and go to state 13
    procedure_division             shift and go to state 15

state 22

    (4) cobol_source_program -> cobol_source_program cobol_data_division cobol_source_program .
    (3) cobol_source_program -> cobol_source_program . cobol_enviroment_division cobol_source_program
    (4) cobol_source_program -> cobol_source_program . cobol_data_division cobol_source_program
    (5) cobol_source_program -> cobol_source_program . cobol_procedure_division nested_cobol_source_program cobol_source_program
    (9) cobol_enviroment_division -> . ENVIRONMENT DIVISION PUNTO enviroment_division_content
    (10) cobol_enviroment_division -> . empty
    (11) cobol_data_division -> . DATA DIVISION PUNTO data_division_content
    (12) cobol_data_division -> . empty
    (13) cobol_procedure_division -> . procedure_division
    (125) empty -> .
    (57) procedure_division -> . PROCEDURE DIVISION PUNTO paragrahps
    (58) procedure_division -> . PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps
    (59) procedure_division -> . PROCEDURE DIVISION PUNTO paragrahps STOP RUN PUNTO
    (60) procedure_division -> . PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps STOP RUN PUNTO

  ! shift/reduce conflict for ENVIRONMENT resolved as shift
  ! shift/reduce conflict for DATA resolved as shift
  ! reduce/reduce conflict for IDENTIFICATION resolved using rule 4 (cobol_source_program -> cobol_source_program cobol_data_division cobol_source_program .)
  ! reduce/reduce conflict for ID resolved using rule 4 (cobol_source_program -> cobol_source_program cobol_data_division cobol_source_program .)
  ! reduce/reduce conflict for END resolved using rule 4 (cobol_source_program -> cobol_source_program cobol_data_division cobol_source_program .)
  ! shift/reduce conflict for ENVIRONMENT resolved as shift
  ! shift/reduce conflict for DATA resolved as shift
  ! reduce/reduce conflict for PROCEDURE resolved using rule 4 (cobol_source_program -> cobol_source_program cobol_data_division cobol_source_program .)
  ! reduce/reduce conflict for $end resolved using rule 4 (cobol_source_program -> cobol_source_program cobol_data_division cobol_source_program .)
  ! shift/reduce conflict for PROCEDURE resolved as shift
    $end            reduce using rule 4 (cobol_source_program -> cobol_source_program cobol_data_division cobol_source_program .)
    IDENTIFICATION  reduce using rule 4 (cobol_source_program -> cobol_source_program cobol_data_division cobol_source_program .)
    ID              reduce using rule 4 (cobol_source_program -> cobol_source_program cobol_data_division cobol_source_program .)
    END             reduce using rule 4 (cobol_source_program -> cobol_source_program cobol_data_division cobol_source_program .)
    ENVIRONMENT     shift and go to state 12
    DATA            shift and go to state 14
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    OBJECT_COMPUTER reduce using rule 125 (empty -> .)
    SPECIAL_NAMES   reduce using rule 125 (empty -> .)
    NUMERO          reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         reduce using rule 125 (empty -> .)
    ACCEPT          reduce using rule 125 (empty -> .)
    ADD             reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    MULTIPLY        reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    PROCEDURE       shift and go to state 16

  ! ENVIRONMENT     [ reduce using rule 4 (cobol_source_program -> cobol_source_program cobol_data_division cobol_source_program .) ]
  ! DATA            [ reduce using rule 4 (cobol_source_program -> cobol_source_program cobol_data_division cobol_source_program .) ]
  ! PROCEDURE       [ reduce using rule 4 (cobol_source_program -> cobol_source_program cobol_data_division cobol_source_program .) ]
  ! IDENTIFICATION  [ reduce using rule 125 (empty -> .) ]
  ! ID              [ reduce using rule 125 (empty -> .) ]
  ! END             [ reduce using rule 125 (empty -> .) ]
  ! ENVIRONMENT     [ reduce using rule 125 (empty -> .) ]
  ! DATA            [ reduce using rule 125 (empty -> .) ]
  ! PROCEDURE       [ reduce using rule 125 (empty -> .) ]
  ! $end            [ reduce using rule 125 (empty -> .) ]

    cobol_data_division            shift and go to state 10
    cobol_enviroment_division      shift and go to state 9
    cobol_procedure_division       shift and go to state 11
    empty                          shift and go to state 13
    procedure_division             shift and go to state 15

state 23

    (5) cobol_source_program -> cobol_source_program cobol_procedure_division nested_cobol_source_program . cobol_source_program
    (2) cobol_source_program -> . cobol_identification_division cobol_source_program
    (3) cobol_source_program -> . cobol_source_program cobol_enviroment_division cobol_source_program
    (4) cobol_source_program -> . cobol_source_program cobol_data_division cobol_source_program
    (5) cobol_source_program -> . cobol_source_program cobol_procedure_division nested_cobol_source_program cobol_source_program
    (6) cobol_source_program -> . cobol_end_program
    (7) cobol_identification_division -> . IDENTIFICATION DIVISION PUNTO program_id_cobol_source_program identification_division_content
    (8) cobol_identification_division -> . ID DIVISION PUNTO program_id_cobol_source_program identification_division_content
    (14) cobol_end_program -> . END PROGRAM VARIABLE PUNTO
    (15) cobol_end_program -> . empty
    (125) empty -> .

  ! shift/reduce conflict for IDENTIFICATION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for END resolved as shift
    IDENTIFICATION  shift and go to state 5
    ID              shift and go to state 6
    END             shift and go to state 7
    ENVIRONMENT     reduce using rule 125 (empty -> .)
    DATA            reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    $end            reduce using rule 125 (empty -> .)
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    OBJECT_COMPUTER reduce using rule 125 (empty -> .)
    SPECIAL_NAMES   reduce using rule 125 (empty -> .)
    NUMERO          reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         reduce using rule 125 (empty -> .)
    ACCEPT          reduce using rule 125 (empty -> .)
    ADD             reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    MULTIPLY        reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)

  ! IDENTIFICATION  [ reduce using rule 125 (empty -> .) ]
  ! ID              [ reduce using rule 125 (empty -> .) ]
  ! END             [ reduce using rule 125 (empty -> .) ]

    cobol_source_program           shift and go to state 32
    cobol_identification_division  shift and go to state 3
    cobol_end_program              shift and go to state 4
    empty                          shift and go to state 8

state 24

    (17) nested_cobol_source_program -> IDENTIFICATION . DIVISION PUNTO program_id_nested_cobol_source_program identification_division_content ENVIRONMENT DIVISION PUNTO enviroment_division_content DATA DIVISION PUNTO data_division_content procedure_division nested_cobol_source_program END PROGRAM VARIABLE PUNTO

    DIVISION        shift and go to state 33


state 25

    (18) nested_cobol_source_program -> empty .

    IDENTIFICATION  reduce using rule 18 (nested_cobol_source_program -> empty .)
    ID              reduce using rule 18 (nested_cobol_source_program -> empty .)
    END             reduce using rule 18 (nested_cobol_source_program -> empty .)
    ENVIRONMENT     reduce using rule 18 (nested_cobol_source_program -> empty .)
    DATA            reduce using rule 18 (nested_cobol_source_program -> empty .)
    PROCEDURE       reduce using rule 18 (nested_cobol_source_program -> empty .)
    $end            reduce using rule 18 (nested_cobol_source_program -> empty .)


state 26

    (9) cobol_enviroment_division -> ENVIRONMENT DIVISION . PUNTO enviroment_division_content

    PUNTO           shift and go to state 34


state 27

    (11) cobol_data_division -> DATA DIVISION . PUNTO data_division_content

    PUNTO           shift and go to state 35


state 28

    (57) procedure_division -> PROCEDURE DIVISION . PUNTO paragrahps
    (58) procedure_division -> PROCEDURE DIVISION . PUNTO MAIN_PROCEDURE PUNTO paragrahps
    (59) procedure_division -> PROCEDURE DIVISION . PUNTO paragrahps STOP RUN PUNTO
    (60) procedure_division -> PROCEDURE DIVISION . PUNTO MAIN_PROCEDURE PUNTO paragrahps STOP RUN PUNTO

    PUNTO           shift and go to state 36


state 29

    (7) cobol_identification_division -> IDENTIFICATION DIVISION PUNTO . program_id_cobol_source_program identification_division_content
    (16) program_id_cobol_source_program -> . PROGRAM_ID PUNTO VARIABLE PUNTO

    PROGRAM_ID      shift and go to state 38

    program_id_cobol_source_program shift and go to state 37

state 30

    (8) cobol_identification_division -> ID DIVISION PUNTO . program_id_cobol_source_program identification_division_content
    (16) program_id_cobol_source_program -> . PROGRAM_ID PUNTO VARIABLE PUNTO

    PROGRAM_ID      shift and go to state 38

    program_id_cobol_source_program shift and go to state 39

state 31

    (14) cobol_end_program -> END PROGRAM VARIABLE . PUNTO

    PUNTO           shift and go to state 40


state 32

    (5) cobol_source_program -> cobol_source_program cobol_procedure_division nested_cobol_source_program cobol_source_program .
    (3) cobol_source_program -> cobol_source_program . cobol_enviroment_division cobol_source_program
    (4) cobol_source_program -> cobol_source_program . cobol_data_division cobol_source_program
    (5) cobol_source_program -> cobol_source_program . cobol_procedure_division nested_cobol_source_program cobol_source_program
    (9) cobol_enviroment_division -> . ENVIRONMENT DIVISION PUNTO enviroment_division_content
    (10) cobol_enviroment_division -> . empty
    (11) cobol_data_division -> . DATA DIVISION PUNTO data_division_content
    (12) cobol_data_division -> . empty
    (13) cobol_procedure_division -> . procedure_division
    (125) empty -> .
    (57) procedure_division -> . PROCEDURE DIVISION PUNTO paragrahps
    (58) procedure_division -> . PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps
    (59) procedure_division -> . PROCEDURE DIVISION PUNTO paragrahps STOP RUN PUNTO
    (60) procedure_division -> . PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps STOP RUN PUNTO

  ! shift/reduce conflict for ENVIRONMENT resolved as shift
  ! shift/reduce conflict for DATA resolved as shift
  ! reduce/reduce conflict for IDENTIFICATION resolved using rule 5 (cobol_source_program -> cobol_source_program cobol_procedure_division nested_cobol_source_program cobol_source_program .)
  ! reduce/reduce conflict for ID resolved using rule 5 (cobol_source_program -> cobol_source_program cobol_procedure_division nested_cobol_source_program cobol_source_program .)
  ! reduce/reduce conflict for END resolved using rule 5 (cobol_source_program -> cobol_source_program cobol_procedure_division nested_cobol_source_program cobol_source_program .)
  ! shift/reduce conflict for ENVIRONMENT resolved as shift
  ! shift/reduce conflict for DATA resolved as shift
  ! reduce/reduce conflict for PROCEDURE resolved using rule 5 (cobol_source_program -> cobol_source_program cobol_procedure_division nested_cobol_source_program cobol_source_program .)
  ! reduce/reduce conflict for $end resolved using rule 5 (cobol_source_program -> cobol_source_program cobol_procedure_division nested_cobol_source_program cobol_source_program .)
  ! shift/reduce conflict for PROCEDURE resolved as shift
    $end            reduce using rule 5 (cobol_source_program -> cobol_source_program cobol_procedure_division nested_cobol_source_program cobol_source_program .)
    IDENTIFICATION  reduce using rule 5 (cobol_source_program -> cobol_source_program cobol_procedure_division nested_cobol_source_program cobol_source_program .)
    ID              reduce using rule 5 (cobol_source_program -> cobol_source_program cobol_procedure_division nested_cobol_source_program cobol_source_program .)
    END             reduce using rule 5 (cobol_source_program -> cobol_source_program cobol_procedure_division nested_cobol_source_program cobol_source_program .)
    ENVIRONMENT     shift and go to state 12
    DATA            shift and go to state 14
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    OBJECT_COMPUTER reduce using rule 125 (empty -> .)
    SPECIAL_NAMES   reduce using rule 125 (empty -> .)
    NUMERO          reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         reduce using rule 125 (empty -> .)
    ACCEPT          reduce using rule 125 (empty -> .)
    ADD             reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    MULTIPLY        reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    PROCEDURE       shift and go to state 16

  ! ENVIRONMENT     [ reduce using rule 5 (cobol_source_program -> cobol_source_program cobol_procedure_division nested_cobol_source_program cobol_source_program .) ]
  ! DATA            [ reduce using rule 5 (cobol_source_program -> cobol_source_program cobol_procedure_division nested_cobol_source_program cobol_source_program .) ]
  ! PROCEDURE       [ reduce using rule 5 (cobol_source_program -> cobol_source_program cobol_procedure_division nested_cobol_source_program cobol_source_program .) ]
  ! IDENTIFICATION  [ reduce using rule 125 (empty -> .) ]
  ! ID              [ reduce using rule 125 (empty -> .) ]
  ! END             [ reduce using rule 125 (empty -> .) ]
  ! ENVIRONMENT     [ reduce using rule 125 (empty -> .) ]
  ! DATA            [ reduce using rule 125 (empty -> .) ]
  ! PROCEDURE       [ reduce using rule 125 (empty -> .) ]
  ! $end            [ reduce using rule 125 (empty -> .) ]

    cobol_procedure_division       shift and go to state 11
    cobol_enviroment_division      shift and go to state 9
    cobol_data_division            shift and go to state 10
    empty                          shift and go to state 13
    procedure_division             shift and go to state 15

state 33

    (17) nested_cobol_source_program -> IDENTIFICATION DIVISION . PUNTO program_id_nested_cobol_source_program identification_division_content ENVIRONMENT DIVISION PUNTO enviroment_division_content DATA DIVISION PUNTO data_division_content procedure_division nested_cobol_source_program END PROGRAM VARIABLE PUNTO

    PUNTO           shift and go to state 41


state 34

    (9) cobol_enviroment_division -> ENVIRONMENT DIVISION PUNTO . enviroment_division_content
    (26) enviroment_division_content -> . configuration_section
    (27) configuration_section -> . CONFIGURATION SECTION PUNTO
    (28) configuration_section -> . CONFIGURATION SECTION PUNTO configuration_section_paragrahs
    (29) configuration_section -> . empty
    (125) empty -> .

    CONFIGURATION   shift and go to state 44
    IDENTIFICATION  reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    END             reduce using rule 125 (empty -> .)
    ENVIRONMENT     reduce using rule 125 (empty -> .)
    DATA            reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    $end            reduce using rule 125 (empty -> .)
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    OBJECT_COMPUTER reduce using rule 125 (empty -> .)
    SPECIAL_NAMES   reduce using rule 125 (empty -> .)
    NUMERO          reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         reduce using rule 125 (empty -> .)
    ACCEPT          reduce using rule 125 (empty -> .)
    ADD             reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    MULTIPLY        reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)

    enviroment_division_content    shift and go to state 42
    configuration_section          shift and go to state 43
    empty                          shift and go to state 45

state 35

    (11) cobol_data_division -> DATA DIVISION PUNTO . data_division_content
    (37) data_division_content -> . WORKING_STORAGE SECTION PUNTO data_item_entry
    (38) data_division_content -> . FILE SECTION PUNTO data_file_entry
    (39) data_division_content -> . FILE SECTION PUNTO WORKING_STORAGE SECTION PUNTO data_item_entry
    (40) data_division_content -> . empty
    (125) empty -> .

    WORKING_STORAGE shift and go to state 47
    FILE            shift and go to state 48
    IDENTIFICATION  reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    END             reduce using rule 125 (empty -> .)
    ENVIRONMENT     reduce using rule 125 (empty -> .)
    DATA            reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    $end            reduce using rule 125 (empty -> .)
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    OBJECT_COMPUTER reduce using rule 125 (empty -> .)
    SPECIAL_NAMES   reduce using rule 125 (empty -> .)
    NUMERO          reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         reduce using rule 125 (empty -> .)
    ACCEPT          reduce using rule 125 (empty -> .)
    ADD             reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    MULTIPLY        reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)

    data_division_content          shift and go to state 46
    empty                          shift and go to state 49

state 36

    (57) procedure_division -> PROCEDURE DIVISION PUNTO . paragrahps
    (58) procedure_division -> PROCEDURE DIVISION PUNTO . MAIN_PROCEDURE PUNTO paragrahps
    (59) procedure_division -> PROCEDURE DIVISION PUNTO . paragrahps STOP RUN PUNTO
    (60) procedure_division -> PROCEDURE DIVISION PUNTO . MAIN_PROCEDURE PUNTO paragrahps STOP RUN PUNTO
    (61) paragrahps -> . paragrahps statements
    (62) paragrahps -> . statements
    (63) paragrahps -> . empty
    (64) statements -> . stm_display
    (65) statements -> . stm_acept
    (66) statements -> . stm_add
    (67) statements -> . stm_divide
    (68) statements -> . stm_multiply
    (69) statements -> . stm_minus
    (70) statements -> . if_statement
    (125) empty -> .
    (71) stm_display -> . DISPLAY STRING PUNTO
    (72) stm_display -> . DISPLAY STRING VARIABLE PUNTO
    (73) stm_display -> . DISPLAY STRING WITH NO ADVANCING PUNTO
    (74) stm_display -> . DISPLAY VARIABLE STRING PUNTO
    (75) stm_display -> . DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO
    (76) stm_display -> . DISPLAY STRING PUNTO stm_display
    (77) stm_display -> . DISPLAY STRING WITH NO ADVANCING PUNTO stm_display
    (78) stm_display -> . DISPLAY STRING VARIABLE PUNTO stm_display
    (79) stm_display -> . DISPLAY VARIABLE STRING PUNTO stm_display
    (80) stm_display -> . DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display
    (81) stm_acept -> . ACCEPT VARIABLE PUNTO
    (82) stm_acept -> . ACCEPT VARIABLE PUNTO stm_acept
    (83) stm_add -> . ADD VARIABLE TO VARIABLE GIVING VARIABLE PUNTO
    (84) stm_add -> . ADD VARIABLE TO VARIABLE PUNTO
    (85) stm_divide -> . DIVIDE VARIABLE INTO VARIABLE GIVING VARIABLE PUNTO
    (86) stm_divide -> . DIVIDE VARIABLE INTO VARIABLE PUNTO
    (87) stm_multiply -> . MULTIPLY VARIABLE BY VARIABLE GIVING VARIABLE PUNTO
    (88) stm_multiply -> . MULTIPLY VARIABLE BY VARIABLE PUNTO
    (89) stm_minus -> . SUBTRACT VARIABLE FROM VARIABLE GIVING VARIABLE PUNTO
    (90) stm_minus -> . SUBTRACT VARIABLE FROM VARIABLE PUNTO
    (91) if_statement -> . IF conditional ifthen ifelse END_IF
    (92) if_statement -> . IF conditional ifthen
    (93) if_statement -> . IF conditional ifthen ifelse
    (94) if_statement -> . IF conditional ifthen END_IF

  ! shift/reduce conflict for DISPLAY resolved as shift
  ! shift/reduce conflict for ACCEPT resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    MAIN_PROCEDURE  shift and go to state 51
    IDENTIFICATION  reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    END             reduce using rule 125 (empty -> .)
    ENVIRONMENT     reduce using rule 125 (empty -> .)
    DATA            reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    $end            reduce using rule 125 (empty -> .)
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    OBJECT_COMPUTER reduce using rule 125 (empty -> .)
    SPECIAL_NAMES   reduce using rule 125 (empty -> .)
    NUMERO          reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         shift and go to state 61
    ACCEPT          shift and go to state 62
    ADD             shift and go to state 63
    DIVIDE          shift and go to state 64
    MULTIPLY        shift and go to state 65
    SUBTRACT        shift and go to state 66
    IF              shift and go to state 67

  ! DISPLAY         [ reduce using rule 125 (empty -> .) ]
  ! ACCEPT          [ reduce using rule 125 (empty -> .) ]
  ! ADD             [ reduce using rule 125 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 125 (empty -> .) ]
  ! MULTIPLY        [ reduce using rule 125 (empty -> .) ]
  ! SUBTRACT        [ reduce using rule 125 (empty -> .) ]
  ! IF              [ reduce using rule 125 (empty -> .) ]

    paragrahps                     shift and go to state 50
    statements                     shift and go to state 52
    empty                          shift and go to state 53
    stm_display                    shift and go to state 54
    stm_acept                      shift and go to state 55
    stm_add                        shift and go to state 56
    stm_divide                     shift and go to state 57
    stm_multiply                   shift and go to state 58
    stm_minus                      shift and go to state 59
    if_statement                   shift and go to state 60

state 37

    (7) cobol_identification_division -> IDENTIFICATION DIVISION PUNTO program_id_cobol_source_program . identification_division_content
    (20) identification_division_content -> . AUTHOR PUNTO VARIABLE PUNTO identification_division_content
    (21) identification_division_content -> . identification_division_content INSTALLATION PUNTO VARIABLE PUNTO
    (22) identification_division_content -> . identification_division_content DATE_WRITTEN PUNTO VARIABLE PUNTO
    (23) identification_division_content -> . identification_division_content DATE_COMPILED PUNTO VARIABLE PUNTO
    (24) identification_division_content -> . identification_division_content SECURITY PUNTO VARIABLE PUNTO
    (25) identification_division_content -> . empty
    (125) empty -> .

    AUTHOR          shift and go to state 69
    IDENTIFICATION  reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    END             reduce using rule 125 (empty -> .)
    ENVIRONMENT     reduce using rule 125 (empty -> .)
    DATA            reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    $end            reduce using rule 125 (empty -> .)
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    OBJECT_COMPUTER reduce using rule 125 (empty -> .)
    SPECIAL_NAMES   reduce using rule 125 (empty -> .)
    NUMERO          reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         reduce using rule 125 (empty -> .)
    ACCEPT          reduce using rule 125 (empty -> .)
    ADD             reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    MULTIPLY        reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)

    identification_division_content shift and go to state 68
    empty                          shift and go to state 70

state 38

    (16) program_id_cobol_source_program -> PROGRAM_ID . PUNTO VARIABLE PUNTO

    PUNTO           shift and go to state 71


state 39

    (8) cobol_identification_division -> ID DIVISION PUNTO program_id_cobol_source_program . identification_division_content
    (20) identification_division_content -> . AUTHOR PUNTO VARIABLE PUNTO identification_division_content
    (21) identification_division_content -> . identification_division_content INSTALLATION PUNTO VARIABLE PUNTO
    (22) identification_division_content -> . identification_division_content DATE_WRITTEN PUNTO VARIABLE PUNTO
    (23) identification_division_content -> . identification_division_content DATE_COMPILED PUNTO VARIABLE PUNTO
    (24) identification_division_content -> . identification_division_content SECURITY PUNTO VARIABLE PUNTO
    (25) identification_division_content -> . empty
    (125) empty -> .

    AUTHOR          shift and go to state 69
    IDENTIFICATION  reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    END             reduce using rule 125 (empty -> .)
    ENVIRONMENT     reduce using rule 125 (empty -> .)
    DATA            reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    $end            reduce using rule 125 (empty -> .)
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    OBJECT_COMPUTER reduce using rule 125 (empty -> .)
    SPECIAL_NAMES   reduce using rule 125 (empty -> .)
    NUMERO          reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         reduce using rule 125 (empty -> .)
    ACCEPT          reduce using rule 125 (empty -> .)
    ADD             reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    MULTIPLY        reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)

    identification_division_content shift and go to state 72
    empty                          shift and go to state 70

state 40

    (14) cobol_end_program -> END PROGRAM VARIABLE PUNTO .

    $end            reduce using rule 14 (cobol_end_program -> END PROGRAM VARIABLE PUNTO .)
    ENVIRONMENT     reduce using rule 14 (cobol_end_program -> END PROGRAM VARIABLE PUNTO .)
    IDENTIFICATION  reduce using rule 14 (cobol_end_program -> END PROGRAM VARIABLE PUNTO .)
    ID              reduce using rule 14 (cobol_end_program -> END PROGRAM VARIABLE PUNTO .)
    END             reduce using rule 14 (cobol_end_program -> END PROGRAM VARIABLE PUNTO .)
    DATA            reduce using rule 14 (cobol_end_program -> END PROGRAM VARIABLE PUNTO .)
    PROCEDURE       reduce using rule 14 (cobol_end_program -> END PROGRAM VARIABLE PUNTO .)


state 41

    (17) nested_cobol_source_program -> IDENTIFICATION DIVISION PUNTO . program_id_nested_cobol_source_program identification_division_content ENVIRONMENT DIVISION PUNTO enviroment_division_content DATA DIVISION PUNTO data_division_content procedure_division nested_cobol_source_program END PROGRAM VARIABLE PUNTO
    (19) program_id_nested_cobol_source_program -> . PROGRAM_ID PUNTO VARIABLE PUNTO

    PROGRAM_ID      shift and go to state 74

    program_id_nested_cobol_source_program shift and go to state 73

state 42

    (9) cobol_enviroment_division -> ENVIRONMENT DIVISION PUNTO enviroment_division_content .

    IDENTIFICATION  reduce using rule 9 (cobol_enviroment_division -> ENVIRONMENT DIVISION PUNTO enviroment_division_content .)
    ID              reduce using rule 9 (cobol_enviroment_division -> ENVIRONMENT DIVISION PUNTO enviroment_division_content .)
    END             reduce using rule 9 (cobol_enviroment_division -> ENVIRONMENT DIVISION PUNTO enviroment_division_content .)
    ENVIRONMENT     reduce using rule 9 (cobol_enviroment_division -> ENVIRONMENT DIVISION PUNTO enviroment_division_content .)
    DATA            reduce using rule 9 (cobol_enviroment_division -> ENVIRONMENT DIVISION PUNTO enviroment_division_content .)
    PROCEDURE       reduce using rule 9 (cobol_enviroment_division -> ENVIRONMENT DIVISION PUNTO enviroment_division_content .)
    $end            reduce using rule 9 (cobol_enviroment_division -> ENVIRONMENT DIVISION PUNTO enviroment_division_content .)


state 43

    (26) enviroment_division_content -> configuration_section .

    IDENTIFICATION  reduce using rule 26 (enviroment_division_content -> configuration_section .)
    ID              reduce using rule 26 (enviroment_division_content -> configuration_section .)
    END             reduce using rule 26 (enviroment_division_content -> configuration_section .)
    ENVIRONMENT     reduce using rule 26 (enviroment_division_content -> configuration_section .)
    DATA            reduce using rule 26 (enviroment_division_content -> configuration_section .)
    PROCEDURE       reduce using rule 26 (enviroment_division_content -> configuration_section .)
    $end            reduce using rule 26 (enviroment_division_content -> configuration_section .)


state 44

    (27) configuration_section -> CONFIGURATION . SECTION PUNTO
    (28) configuration_section -> CONFIGURATION . SECTION PUNTO configuration_section_paragrahs

    SECTION         shift and go to state 75


state 45

    (29) configuration_section -> empty .

    IDENTIFICATION  reduce using rule 29 (configuration_section -> empty .)
    ID              reduce using rule 29 (configuration_section -> empty .)
    END             reduce using rule 29 (configuration_section -> empty .)
    ENVIRONMENT     reduce using rule 29 (configuration_section -> empty .)
    DATA            reduce using rule 29 (configuration_section -> empty .)
    PROCEDURE       reduce using rule 29 (configuration_section -> empty .)
    $end            reduce using rule 29 (configuration_section -> empty .)


state 46

    (11) cobol_data_division -> DATA DIVISION PUNTO data_division_content .

    IDENTIFICATION  reduce using rule 11 (cobol_data_division -> DATA DIVISION PUNTO data_division_content .)
    ID              reduce using rule 11 (cobol_data_division -> DATA DIVISION PUNTO data_division_content .)
    END             reduce using rule 11 (cobol_data_division -> DATA DIVISION PUNTO data_division_content .)
    ENVIRONMENT     reduce using rule 11 (cobol_data_division -> DATA DIVISION PUNTO data_division_content .)
    DATA            reduce using rule 11 (cobol_data_division -> DATA DIVISION PUNTO data_division_content .)
    PROCEDURE       reduce using rule 11 (cobol_data_division -> DATA DIVISION PUNTO data_division_content .)
    $end            reduce using rule 11 (cobol_data_division -> DATA DIVISION PUNTO data_division_content .)


state 47

    (37) data_division_content -> WORKING_STORAGE . SECTION PUNTO data_item_entry

    SECTION         shift and go to state 76


state 48

    (38) data_division_content -> FILE . SECTION PUNTO data_file_entry
    (39) data_division_content -> FILE . SECTION PUNTO WORKING_STORAGE SECTION PUNTO data_item_entry

    SECTION         shift and go to state 77


state 49

    (40) data_division_content -> empty .

    IDENTIFICATION  reduce using rule 40 (data_division_content -> empty .)
    ID              reduce using rule 40 (data_division_content -> empty .)
    END             reduce using rule 40 (data_division_content -> empty .)
    ENVIRONMENT     reduce using rule 40 (data_division_content -> empty .)
    DATA            reduce using rule 40 (data_division_content -> empty .)
    PROCEDURE       reduce using rule 40 (data_division_content -> empty .)
    $end            reduce using rule 40 (data_division_content -> empty .)


state 50

    (57) procedure_division -> PROCEDURE DIVISION PUNTO paragrahps .
    (59) procedure_division -> PROCEDURE DIVISION PUNTO paragrahps . STOP RUN PUNTO
    (61) paragrahps -> paragrahps . statements
    (64) statements -> . stm_display
    (65) statements -> . stm_acept
    (66) statements -> . stm_add
    (67) statements -> . stm_divide
    (68) statements -> . stm_multiply
    (69) statements -> . stm_minus
    (70) statements -> . if_statement
    (71) stm_display -> . DISPLAY STRING PUNTO
    (72) stm_display -> . DISPLAY STRING VARIABLE PUNTO
    (73) stm_display -> . DISPLAY STRING WITH NO ADVANCING PUNTO
    (74) stm_display -> . DISPLAY VARIABLE STRING PUNTO
    (75) stm_display -> . DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO
    (76) stm_display -> . DISPLAY STRING PUNTO stm_display
    (77) stm_display -> . DISPLAY STRING WITH NO ADVANCING PUNTO stm_display
    (78) stm_display -> . DISPLAY STRING VARIABLE PUNTO stm_display
    (79) stm_display -> . DISPLAY VARIABLE STRING PUNTO stm_display
    (80) stm_display -> . DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display
    (81) stm_acept -> . ACCEPT VARIABLE PUNTO
    (82) stm_acept -> . ACCEPT VARIABLE PUNTO stm_acept
    (83) stm_add -> . ADD VARIABLE TO VARIABLE GIVING VARIABLE PUNTO
    (84) stm_add -> . ADD VARIABLE TO VARIABLE PUNTO
    (85) stm_divide -> . DIVIDE VARIABLE INTO VARIABLE GIVING VARIABLE PUNTO
    (86) stm_divide -> . DIVIDE VARIABLE INTO VARIABLE PUNTO
    (87) stm_multiply -> . MULTIPLY VARIABLE BY VARIABLE GIVING VARIABLE PUNTO
    (88) stm_multiply -> . MULTIPLY VARIABLE BY VARIABLE PUNTO
    (89) stm_minus -> . SUBTRACT VARIABLE FROM VARIABLE GIVING VARIABLE PUNTO
    (90) stm_minus -> . SUBTRACT VARIABLE FROM VARIABLE PUNTO
    (91) if_statement -> . IF conditional ifthen ifelse END_IF
    (92) if_statement -> . IF conditional ifthen
    (93) if_statement -> . IF conditional ifthen ifelse
    (94) if_statement -> . IF conditional ifthen END_IF

    IDENTIFICATION  reduce using rule 57 (procedure_division -> PROCEDURE DIVISION PUNTO paragrahps .)
    ID              reduce using rule 57 (procedure_division -> PROCEDURE DIVISION PUNTO paragrahps .)
    END             reduce using rule 57 (procedure_division -> PROCEDURE DIVISION PUNTO paragrahps .)
    ENVIRONMENT     reduce using rule 57 (procedure_division -> PROCEDURE DIVISION PUNTO paragrahps .)
    DATA            reduce using rule 57 (procedure_division -> PROCEDURE DIVISION PUNTO paragrahps .)
    PROCEDURE       reduce using rule 57 (procedure_division -> PROCEDURE DIVISION PUNTO paragrahps .)
    $end            reduce using rule 57 (procedure_division -> PROCEDURE DIVISION PUNTO paragrahps .)
    STOP            shift and go to state 78
    DISPLAY         shift and go to state 61
    ACCEPT          shift and go to state 62
    ADD             shift and go to state 63
    DIVIDE          shift and go to state 64
    MULTIPLY        shift and go to state 65
    SUBTRACT        shift and go to state 66
    IF              shift and go to state 67

    statements                     shift and go to state 79
    stm_display                    shift and go to state 54
    stm_acept                      shift and go to state 55
    stm_add                        shift and go to state 56
    stm_divide                     shift and go to state 57
    stm_multiply                   shift and go to state 58
    stm_minus                      shift and go to state 59
    if_statement                   shift and go to state 60

state 51

    (58) procedure_division -> PROCEDURE DIVISION PUNTO MAIN_PROCEDURE . PUNTO paragrahps
    (60) procedure_division -> PROCEDURE DIVISION PUNTO MAIN_PROCEDURE . PUNTO paragrahps STOP RUN PUNTO

    PUNTO           shift and go to state 80


state 52

    (62) paragrahps -> statements .

    IDENTIFICATION  reduce using rule 62 (paragrahps -> statements .)
    ID              reduce using rule 62 (paragrahps -> statements .)
    END             reduce using rule 62 (paragrahps -> statements .)
    ENVIRONMENT     reduce using rule 62 (paragrahps -> statements .)
    DATA            reduce using rule 62 (paragrahps -> statements .)
    PROCEDURE       reduce using rule 62 (paragrahps -> statements .)
    $end            reduce using rule 62 (paragrahps -> statements .)
    STOP            reduce using rule 62 (paragrahps -> statements .)
    DISPLAY         reduce using rule 62 (paragrahps -> statements .)
    ACCEPT          reduce using rule 62 (paragrahps -> statements .)
    ADD             reduce using rule 62 (paragrahps -> statements .)
    DIVIDE          reduce using rule 62 (paragrahps -> statements .)
    MULTIPLY        reduce using rule 62 (paragrahps -> statements .)
    SUBTRACT        reduce using rule 62 (paragrahps -> statements .)
    IF              reduce using rule 62 (paragrahps -> statements .)


state 53

    (63) paragrahps -> empty .

    IDENTIFICATION  reduce using rule 63 (paragrahps -> empty .)
    ID              reduce using rule 63 (paragrahps -> empty .)
    END             reduce using rule 63 (paragrahps -> empty .)
    ENVIRONMENT     reduce using rule 63 (paragrahps -> empty .)
    DATA            reduce using rule 63 (paragrahps -> empty .)
    PROCEDURE       reduce using rule 63 (paragrahps -> empty .)
    $end            reduce using rule 63 (paragrahps -> empty .)
    STOP            reduce using rule 63 (paragrahps -> empty .)
    DISPLAY         reduce using rule 63 (paragrahps -> empty .)
    ACCEPT          reduce using rule 63 (paragrahps -> empty .)
    ADD             reduce using rule 63 (paragrahps -> empty .)
    DIVIDE          reduce using rule 63 (paragrahps -> empty .)
    MULTIPLY        reduce using rule 63 (paragrahps -> empty .)
    SUBTRACT        reduce using rule 63 (paragrahps -> empty .)
    IF              reduce using rule 63 (paragrahps -> empty .)


state 54

    (64) statements -> stm_display .

    IDENTIFICATION  reduce using rule 64 (statements -> stm_display .)
    ID              reduce using rule 64 (statements -> stm_display .)
    END             reduce using rule 64 (statements -> stm_display .)
    ENVIRONMENT     reduce using rule 64 (statements -> stm_display .)
    DATA            reduce using rule 64 (statements -> stm_display .)
    PROCEDURE       reduce using rule 64 (statements -> stm_display .)
    $end            reduce using rule 64 (statements -> stm_display .)
    STOP            reduce using rule 64 (statements -> stm_display .)
    DISPLAY         reduce using rule 64 (statements -> stm_display .)
    ACCEPT          reduce using rule 64 (statements -> stm_display .)
    ADD             reduce using rule 64 (statements -> stm_display .)
    DIVIDE          reduce using rule 64 (statements -> stm_display .)
    MULTIPLY        reduce using rule 64 (statements -> stm_display .)
    SUBTRACT        reduce using rule 64 (statements -> stm_display .)
    IF              reduce using rule 64 (statements -> stm_display .)
    ELSE            reduce using rule 64 (statements -> stm_display .)
    END_IF          reduce using rule 64 (statements -> stm_display .)


state 55

    (65) statements -> stm_acept .

    IDENTIFICATION  reduce using rule 65 (statements -> stm_acept .)
    ID              reduce using rule 65 (statements -> stm_acept .)
    END             reduce using rule 65 (statements -> stm_acept .)
    ENVIRONMENT     reduce using rule 65 (statements -> stm_acept .)
    DATA            reduce using rule 65 (statements -> stm_acept .)
    PROCEDURE       reduce using rule 65 (statements -> stm_acept .)
    $end            reduce using rule 65 (statements -> stm_acept .)
    STOP            reduce using rule 65 (statements -> stm_acept .)
    DISPLAY         reduce using rule 65 (statements -> stm_acept .)
    ACCEPT          reduce using rule 65 (statements -> stm_acept .)
    ADD             reduce using rule 65 (statements -> stm_acept .)
    DIVIDE          reduce using rule 65 (statements -> stm_acept .)
    MULTIPLY        reduce using rule 65 (statements -> stm_acept .)
    SUBTRACT        reduce using rule 65 (statements -> stm_acept .)
    IF              reduce using rule 65 (statements -> stm_acept .)
    ELSE            reduce using rule 65 (statements -> stm_acept .)
    END_IF          reduce using rule 65 (statements -> stm_acept .)


state 56

    (66) statements -> stm_add .

    IDENTIFICATION  reduce using rule 66 (statements -> stm_add .)
    ID              reduce using rule 66 (statements -> stm_add .)
    END             reduce using rule 66 (statements -> stm_add .)
    ENVIRONMENT     reduce using rule 66 (statements -> stm_add .)
    DATA            reduce using rule 66 (statements -> stm_add .)
    PROCEDURE       reduce using rule 66 (statements -> stm_add .)
    $end            reduce using rule 66 (statements -> stm_add .)
    STOP            reduce using rule 66 (statements -> stm_add .)
    DISPLAY         reduce using rule 66 (statements -> stm_add .)
    ACCEPT          reduce using rule 66 (statements -> stm_add .)
    ADD             reduce using rule 66 (statements -> stm_add .)
    DIVIDE          reduce using rule 66 (statements -> stm_add .)
    MULTIPLY        reduce using rule 66 (statements -> stm_add .)
    SUBTRACT        reduce using rule 66 (statements -> stm_add .)
    IF              reduce using rule 66 (statements -> stm_add .)
    ELSE            reduce using rule 66 (statements -> stm_add .)
    END_IF          reduce using rule 66 (statements -> stm_add .)


state 57

    (67) statements -> stm_divide .

    IDENTIFICATION  reduce using rule 67 (statements -> stm_divide .)
    ID              reduce using rule 67 (statements -> stm_divide .)
    END             reduce using rule 67 (statements -> stm_divide .)
    ENVIRONMENT     reduce using rule 67 (statements -> stm_divide .)
    DATA            reduce using rule 67 (statements -> stm_divide .)
    PROCEDURE       reduce using rule 67 (statements -> stm_divide .)
    $end            reduce using rule 67 (statements -> stm_divide .)
    STOP            reduce using rule 67 (statements -> stm_divide .)
    DISPLAY         reduce using rule 67 (statements -> stm_divide .)
    ACCEPT          reduce using rule 67 (statements -> stm_divide .)
    ADD             reduce using rule 67 (statements -> stm_divide .)
    DIVIDE          reduce using rule 67 (statements -> stm_divide .)
    MULTIPLY        reduce using rule 67 (statements -> stm_divide .)
    SUBTRACT        reduce using rule 67 (statements -> stm_divide .)
    IF              reduce using rule 67 (statements -> stm_divide .)
    ELSE            reduce using rule 67 (statements -> stm_divide .)
    END_IF          reduce using rule 67 (statements -> stm_divide .)


state 58

    (68) statements -> stm_multiply .

    IDENTIFICATION  reduce using rule 68 (statements -> stm_multiply .)
    ID              reduce using rule 68 (statements -> stm_multiply .)
    END             reduce using rule 68 (statements -> stm_multiply .)
    ENVIRONMENT     reduce using rule 68 (statements -> stm_multiply .)
    DATA            reduce using rule 68 (statements -> stm_multiply .)
    PROCEDURE       reduce using rule 68 (statements -> stm_multiply .)
    $end            reduce using rule 68 (statements -> stm_multiply .)
    STOP            reduce using rule 68 (statements -> stm_multiply .)
    DISPLAY         reduce using rule 68 (statements -> stm_multiply .)
    ACCEPT          reduce using rule 68 (statements -> stm_multiply .)
    ADD             reduce using rule 68 (statements -> stm_multiply .)
    DIVIDE          reduce using rule 68 (statements -> stm_multiply .)
    MULTIPLY        reduce using rule 68 (statements -> stm_multiply .)
    SUBTRACT        reduce using rule 68 (statements -> stm_multiply .)
    IF              reduce using rule 68 (statements -> stm_multiply .)
    ELSE            reduce using rule 68 (statements -> stm_multiply .)
    END_IF          reduce using rule 68 (statements -> stm_multiply .)


state 59

    (69) statements -> stm_minus .

    IDENTIFICATION  reduce using rule 69 (statements -> stm_minus .)
    ID              reduce using rule 69 (statements -> stm_minus .)
    END             reduce using rule 69 (statements -> stm_minus .)
    ENVIRONMENT     reduce using rule 69 (statements -> stm_minus .)
    DATA            reduce using rule 69 (statements -> stm_minus .)
    PROCEDURE       reduce using rule 69 (statements -> stm_minus .)
    $end            reduce using rule 69 (statements -> stm_minus .)
    STOP            reduce using rule 69 (statements -> stm_minus .)
    DISPLAY         reduce using rule 69 (statements -> stm_minus .)
    ACCEPT          reduce using rule 69 (statements -> stm_minus .)
    ADD             reduce using rule 69 (statements -> stm_minus .)
    DIVIDE          reduce using rule 69 (statements -> stm_minus .)
    MULTIPLY        reduce using rule 69 (statements -> stm_minus .)
    SUBTRACT        reduce using rule 69 (statements -> stm_minus .)
    IF              reduce using rule 69 (statements -> stm_minus .)
    ELSE            reduce using rule 69 (statements -> stm_minus .)
    END_IF          reduce using rule 69 (statements -> stm_minus .)


state 60

    (70) statements -> if_statement .

    IDENTIFICATION  reduce using rule 70 (statements -> if_statement .)
    ID              reduce using rule 70 (statements -> if_statement .)
    END             reduce using rule 70 (statements -> if_statement .)
    ENVIRONMENT     reduce using rule 70 (statements -> if_statement .)
    DATA            reduce using rule 70 (statements -> if_statement .)
    PROCEDURE       reduce using rule 70 (statements -> if_statement .)
    $end            reduce using rule 70 (statements -> if_statement .)
    STOP            reduce using rule 70 (statements -> if_statement .)
    DISPLAY         reduce using rule 70 (statements -> if_statement .)
    ACCEPT          reduce using rule 70 (statements -> if_statement .)
    ADD             reduce using rule 70 (statements -> if_statement .)
    DIVIDE          reduce using rule 70 (statements -> if_statement .)
    MULTIPLY        reduce using rule 70 (statements -> if_statement .)
    SUBTRACT        reduce using rule 70 (statements -> if_statement .)
    IF              reduce using rule 70 (statements -> if_statement .)
    ELSE            reduce using rule 70 (statements -> if_statement .)
    END_IF          reduce using rule 70 (statements -> if_statement .)


state 61

    (71) stm_display -> DISPLAY . STRING PUNTO
    (72) stm_display -> DISPLAY . STRING VARIABLE PUNTO
    (73) stm_display -> DISPLAY . STRING WITH NO ADVANCING PUNTO
    (74) stm_display -> DISPLAY . VARIABLE STRING PUNTO
    (75) stm_display -> DISPLAY . STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO
    (76) stm_display -> DISPLAY . STRING PUNTO stm_display
    (77) stm_display -> DISPLAY . STRING WITH NO ADVANCING PUNTO stm_display
    (78) stm_display -> DISPLAY . STRING VARIABLE PUNTO stm_display
    (79) stm_display -> DISPLAY . VARIABLE STRING PUNTO stm_display
    (80) stm_display -> DISPLAY . STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display

    STRING          shift and go to state 81
    VARIABLE        shift and go to state 82


state 62

    (81) stm_acept -> ACCEPT . VARIABLE PUNTO
    (82) stm_acept -> ACCEPT . VARIABLE PUNTO stm_acept

    VARIABLE        shift and go to state 83


state 63

    (83) stm_add -> ADD . VARIABLE TO VARIABLE GIVING VARIABLE PUNTO
    (84) stm_add -> ADD . VARIABLE TO VARIABLE PUNTO

    VARIABLE        shift and go to state 84


state 64

    (85) stm_divide -> DIVIDE . VARIABLE INTO VARIABLE GIVING VARIABLE PUNTO
    (86) stm_divide -> DIVIDE . VARIABLE INTO VARIABLE PUNTO

    VARIABLE        shift and go to state 85


state 65

    (87) stm_multiply -> MULTIPLY . VARIABLE BY VARIABLE GIVING VARIABLE PUNTO
    (88) stm_multiply -> MULTIPLY . VARIABLE BY VARIABLE PUNTO

    VARIABLE        shift and go to state 86


state 66

    (89) stm_minus -> SUBTRACT . VARIABLE FROM VARIABLE GIVING VARIABLE PUNTO
    (90) stm_minus -> SUBTRACT . VARIABLE FROM VARIABLE PUNTO

    VARIABLE        shift and go to state 87


state 67

    (91) if_statement -> IF . conditional ifthen ifelse END_IF
    (92) if_statement -> IF . conditional ifthen
    (93) if_statement -> IF . conditional ifthen ifelse
    (94) if_statement -> IF . conditional ifthen END_IF
    (101) conditional -> . PARENT_IZQ aritmeticExpresion PARENT_DER
    (102) conditional -> . PARENT_IZQ logicExpresion PARENT_DER
    (103) conditional -> . aritmeticExpresion
    (104) conditional -> . logicExpresion
    (105) aritmeticExpresion -> . VARIABLE MENOR_IGUAL VARIABLE
    (106) aritmeticExpresion -> . VARIABLE MAYOR_IGUAL VARIABLE
    (107) aritmeticExpresion -> . VARIABLE ES_IGUAL VARIABLE
    (108) aritmeticExpresion -> . VARIABLE MENOR_QUE VARIABLE
    (109) aritmeticExpresion -> . VARIABLE MAYOR_QUE VARIABLE
    (110) aritmeticExpresion -> . VARIABLE MENOR_IGUAL NUMERO
    (111) aritmeticExpresion -> . VARIABLE MAYOR_IGUAL NUMERO
    (112) aritmeticExpresion -> . VARIABLE ES_IGUAL NUMERO
    (113) aritmeticExpresion -> . VARIABLE MENOR_QUE NUMERO
    (114) aritmeticExpresion -> . VARIABLE MAYOR_QUE NUMERO
    (115) aritmeticExpresion -> . NUMERO MENOR_IGUAL VARIABLE
    (116) aritmeticExpresion -> . NUMERO MAYOR_IGUAL VARIABLE
    (117) aritmeticExpresion -> . NUMERO ES_IGUAL VARIABLE
    (118) aritmeticExpresion -> . NUMERO MENOR_QUE VARIABLE
    (119) aritmeticExpresion -> . NUMERO MAYOR_QUE VARIABLE
    (120) logicExpresion -> . aritmeticExpresion AND aritmeticExpresion
    (121) logicExpresion -> . aritmeticExpresion OR aritmeticExpresion
    (122) logicExpresion -> . logicExpresion OR logicExpresion
    (123) logicExpresion -> . logicExpresion AND logicExpresion
    (124) logicExpresion -> . NOT VARIABLE

    PARENT_IZQ      shift and go to state 89
    VARIABLE        shift and go to state 92
    NUMERO          shift and go to state 93
    NOT             shift and go to state 94

    conditional                    shift and go to state 88
    aritmeticExpresion             shift and go to state 90
    logicExpresion                 shift and go to state 91

state 68

    (7) cobol_identification_division -> IDENTIFICATION DIVISION PUNTO program_id_cobol_source_program identification_division_content .
    (21) identification_division_content -> identification_division_content . INSTALLATION PUNTO VARIABLE PUNTO
    (22) identification_division_content -> identification_division_content . DATE_WRITTEN PUNTO VARIABLE PUNTO
    (23) identification_division_content -> identification_division_content . DATE_COMPILED PUNTO VARIABLE PUNTO
    (24) identification_division_content -> identification_division_content . SECURITY PUNTO VARIABLE PUNTO

    IDENTIFICATION  reduce using rule 7 (cobol_identification_division -> IDENTIFICATION DIVISION PUNTO program_id_cobol_source_program identification_division_content .)
    ID              reduce using rule 7 (cobol_identification_division -> IDENTIFICATION DIVISION PUNTO program_id_cobol_source_program identification_division_content .)
    END             reduce using rule 7 (cobol_identification_division -> IDENTIFICATION DIVISION PUNTO program_id_cobol_source_program identification_division_content .)
    ENVIRONMENT     reduce using rule 7 (cobol_identification_division -> IDENTIFICATION DIVISION PUNTO program_id_cobol_source_program identification_division_content .)
    DATA            reduce using rule 7 (cobol_identification_division -> IDENTIFICATION DIVISION PUNTO program_id_cobol_source_program identification_division_content .)
    PROCEDURE       reduce using rule 7 (cobol_identification_division -> IDENTIFICATION DIVISION PUNTO program_id_cobol_source_program identification_division_content .)
    $end            reduce using rule 7 (cobol_identification_division -> IDENTIFICATION DIVISION PUNTO program_id_cobol_source_program identification_division_content .)
    INSTALLATION    shift and go to state 95
    DATE_WRITTEN    shift and go to state 96
    DATE_COMPILED   shift and go to state 97
    SECURITY        shift and go to state 98


state 69

    (20) identification_division_content -> AUTHOR . PUNTO VARIABLE PUNTO identification_division_content

    PUNTO           shift and go to state 99


state 70

    (25) identification_division_content -> empty .

    IDENTIFICATION  reduce using rule 25 (identification_division_content -> empty .)
    ID              reduce using rule 25 (identification_division_content -> empty .)
    END             reduce using rule 25 (identification_division_content -> empty .)
    ENVIRONMENT     reduce using rule 25 (identification_division_content -> empty .)
    DATA            reduce using rule 25 (identification_division_content -> empty .)
    PROCEDURE       reduce using rule 25 (identification_division_content -> empty .)
    $end            reduce using rule 25 (identification_division_content -> empty .)
    INSTALLATION    reduce using rule 25 (identification_division_content -> empty .)
    DATE_WRITTEN    reduce using rule 25 (identification_division_content -> empty .)
    DATE_COMPILED   reduce using rule 25 (identification_division_content -> empty .)
    SECURITY        reduce using rule 25 (identification_division_content -> empty .)


state 71

    (16) program_id_cobol_source_program -> PROGRAM_ID PUNTO . VARIABLE PUNTO

    VARIABLE        shift and go to state 100


state 72

    (8) cobol_identification_division -> ID DIVISION PUNTO program_id_cobol_source_program identification_division_content .
    (21) identification_division_content -> identification_division_content . INSTALLATION PUNTO VARIABLE PUNTO
    (22) identification_division_content -> identification_division_content . DATE_WRITTEN PUNTO VARIABLE PUNTO
    (23) identification_division_content -> identification_division_content . DATE_COMPILED PUNTO VARIABLE PUNTO
    (24) identification_division_content -> identification_division_content . SECURITY PUNTO VARIABLE PUNTO

    IDENTIFICATION  reduce using rule 8 (cobol_identification_division -> ID DIVISION PUNTO program_id_cobol_source_program identification_division_content .)
    ID              reduce using rule 8 (cobol_identification_division -> ID DIVISION PUNTO program_id_cobol_source_program identification_division_content .)
    END             reduce using rule 8 (cobol_identification_division -> ID DIVISION PUNTO program_id_cobol_source_program identification_division_content .)
    ENVIRONMENT     reduce using rule 8 (cobol_identification_division -> ID DIVISION PUNTO program_id_cobol_source_program identification_division_content .)
    DATA            reduce using rule 8 (cobol_identification_division -> ID DIVISION PUNTO program_id_cobol_source_program identification_division_content .)
    PROCEDURE       reduce using rule 8 (cobol_identification_division -> ID DIVISION PUNTO program_id_cobol_source_program identification_division_content .)
    $end            reduce using rule 8 (cobol_identification_division -> ID DIVISION PUNTO program_id_cobol_source_program identification_division_content .)
    INSTALLATION    shift and go to state 95
    DATE_WRITTEN    shift and go to state 96
    DATE_COMPILED   shift and go to state 97
    SECURITY        shift and go to state 98


state 73

    (17) nested_cobol_source_program -> IDENTIFICATION DIVISION PUNTO program_id_nested_cobol_source_program . identification_division_content ENVIRONMENT DIVISION PUNTO enviroment_division_content DATA DIVISION PUNTO data_division_content procedure_division nested_cobol_source_program END PROGRAM VARIABLE PUNTO
    (20) identification_division_content -> . AUTHOR PUNTO VARIABLE PUNTO identification_division_content
    (21) identification_division_content -> . identification_division_content INSTALLATION PUNTO VARIABLE PUNTO
    (22) identification_division_content -> . identification_division_content DATE_WRITTEN PUNTO VARIABLE PUNTO
    (23) identification_division_content -> . identification_division_content DATE_COMPILED PUNTO VARIABLE PUNTO
    (24) identification_division_content -> . identification_division_content SECURITY PUNTO VARIABLE PUNTO
    (25) identification_division_content -> . empty
    (125) empty -> .

    AUTHOR          shift and go to state 69
    IDENTIFICATION  reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    END             reduce using rule 125 (empty -> .)
    ENVIRONMENT     reduce using rule 125 (empty -> .)
    DATA            reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    $end            reduce using rule 125 (empty -> .)
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    OBJECT_COMPUTER reduce using rule 125 (empty -> .)
    SPECIAL_NAMES   reduce using rule 125 (empty -> .)
    NUMERO          reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         reduce using rule 125 (empty -> .)
    ACCEPT          reduce using rule 125 (empty -> .)
    ADD             reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    MULTIPLY        reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)

    identification_division_content shift and go to state 101
    empty                          shift and go to state 70

state 74

    (19) program_id_nested_cobol_source_program -> PROGRAM_ID . PUNTO VARIABLE PUNTO

    PUNTO           shift and go to state 102


state 75

    (27) configuration_section -> CONFIGURATION SECTION . PUNTO
    (28) configuration_section -> CONFIGURATION SECTION . PUNTO configuration_section_paragrahs

    PUNTO           shift and go to state 103


state 76

    (37) data_division_content -> WORKING_STORAGE SECTION . PUNTO data_item_entry

    PUNTO           shift and go to state 104


state 77

    (38) data_division_content -> FILE SECTION . PUNTO data_file_entry
    (39) data_division_content -> FILE SECTION . PUNTO WORKING_STORAGE SECTION PUNTO data_item_entry

    PUNTO           shift and go to state 105


state 78

    (59) procedure_division -> PROCEDURE DIVISION PUNTO paragrahps STOP . RUN PUNTO

    RUN             shift and go to state 106


state 79

    (61) paragrahps -> paragrahps statements .

    IDENTIFICATION  reduce using rule 61 (paragrahps -> paragrahps statements .)
    ID              reduce using rule 61 (paragrahps -> paragrahps statements .)
    END             reduce using rule 61 (paragrahps -> paragrahps statements .)
    ENVIRONMENT     reduce using rule 61 (paragrahps -> paragrahps statements .)
    DATA            reduce using rule 61 (paragrahps -> paragrahps statements .)
    PROCEDURE       reduce using rule 61 (paragrahps -> paragrahps statements .)
    $end            reduce using rule 61 (paragrahps -> paragrahps statements .)
    STOP            reduce using rule 61 (paragrahps -> paragrahps statements .)
    DISPLAY         reduce using rule 61 (paragrahps -> paragrahps statements .)
    ACCEPT          reduce using rule 61 (paragrahps -> paragrahps statements .)
    ADD             reduce using rule 61 (paragrahps -> paragrahps statements .)
    DIVIDE          reduce using rule 61 (paragrahps -> paragrahps statements .)
    MULTIPLY        reduce using rule 61 (paragrahps -> paragrahps statements .)
    SUBTRACT        reduce using rule 61 (paragrahps -> paragrahps statements .)
    IF              reduce using rule 61 (paragrahps -> paragrahps statements .)


state 80

    (58) procedure_division -> PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO . paragrahps
    (60) procedure_division -> PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO . paragrahps STOP RUN PUNTO
    (61) paragrahps -> . paragrahps statements
    (62) paragrahps -> . statements
    (63) paragrahps -> . empty
    (64) statements -> . stm_display
    (65) statements -> . stm_acept
    (66) statements -> . stm_add
    (67) statements -> . stm_divide
    (68) statements -> . stm_multiply
    (69) statements -> . stm_minus
    (70) statements -> . if_statement
    (125) empty -> .
    (71) stm_display -> . DISPLAY STRING PUNTO
    (72) stm_display -> . DISPLAY STRING VARIABLE PUNTO
    (73) stm_display -> . DISPLAY STRING WITH NO ADVANCING PUNTO
    (74) stm_display -> . DISPLAY VARIABLE STRING PUNTO
    (75) stm_display -> . DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO
    (76) stm_display -> . DISPLAY STRING PUNTO stm_display
    (77) stm_display -> . DISPLAY STRING WITH NO ADVANCING PUNTO stm_display
    (78) stm_display -> . DISPLAY STRING VARIABLE PUNTO stm_display
    (79) stm_display -> . DISPLAY VARIABLE STRING PUNTO stm_display
    (80) stm_display -> . DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display
    (81) stm_acept -> . ACCEPT VARIABLE PUNTO
    (82) stm_acept -> . ACCEPT VARIABLE PUNTO stm_acept
    (83) stm_add -> . ADD VARIABLE TO VARIABLE GIVING VARIABLE PUNTO
    (84) stm_add -> . ADD VARIABLE TO VARIABLE PUNTO
    (85) stm_divide -> . DIVIDE VARIABLE INTO VARIABLE GIVING VARIABLE PUNTO
    (86) stm_divide -> . DIVIDE VARIABLE INTO VARIABLE PUNTO
    (87) stm_multiply -> . MULTIPLY VARIABLE BY VARIABLE GIVING VARIABLE PUNTO
    (88) stm_multiply -> . MULTIPLY VARIABLE BY VARIABLE PUNTO
    (89) stm_minus -> . SUBTRACT VARIABLE FROM VARIABLE GIVING VARIABLE PUNTO
    (90) stm_minus -> . SUBTRACT VARIABLE FROM VARIABLE PUNTO
    (91) if_statement -> . IF conditional ifthen ifelse END_IF
    (92) if_statement -> . IF conditional ifthen
    (93) if_statement -> . IF conditional ifthen ifelse
    (94) if_statement -> . IF conditional ifthen END_IF

  ! shift/reduce conflict for DISPLAY resolved as shift
  ! shift/reduce conflict for ACCEPT resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    IDENTIFICATION  reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    END             reduce using rule 125 (empty -> .)
    ENVIRONMENT     reduce using rule 125 (empty -> .)
    DATA            reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    $end            reduce using rule 125 (empty -> .)
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    OBJECT_COMPUTER reduce using rule 125 (empty -> .)
    SPECIAL_NAMES   reduce using rule 125 (empty -> .)
    NUMERO          reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         shift and go to state 61
    ACCEPT          shift and go to state 62
    ADD             shift and go to state 63
    DIVIDE          shift and go to state 64
    MULTIPLY        shift and go to state 65
    SUBTRACT        shift and go to state 66
    IF              shift and go to state 67

  ! DISPLAY         [ reduce using rule 125 (empty -> .) ]
  ! ACCEPT          [ reduce using rule 125 (empty -> .) ]
  ! ADD             [ reduce using rule 125 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 125 (empty -> .) ]
  ! MULTIPLY        [ reduce using rule 125 (empty -> .) ]
  ! SUBTRACT        [ reduce using rule 125 (empty -> .) ]
  ! IF              [ reduce using rule 125 (empty -> .) ]

    paragrahps                     shift and go to state 107
    statements                     shift and go to state 52
    empty                          shift and go to state 53
    stm_display                    shift and go to state 54
    stm_acept                      shift and go to state 55
    stm_add                        shift and go to state 56
    stm_divide                     shift and go to state 57
    stm_multiply                   shift and go to state 58
    stm_minus                      shift and go to state 59
    if_statement                   shift and go to state 60

state 81

    (71) stm_display -> DISPLAY STRING . PUNTO
    (72) stm_display -> DISPLAY STRING . VARIABLE PUNTO
    (73) stm_display -> DISPLAY STRING . WITH NO ADVANCING PUNTO
    (75) stm_display -> DISPLAY STRING . FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO
    (76) stm_display -> DISPLAY STRING . PUNTO stm_display
    (77) stm_display -> DISPLAY STRING . WITH NO ADVANCING PUNTO stm_display
    (78) stm_display -> DISPLAY STRING . VARIABLE PUNTO stm_display
    (80) stm_display -> DISPLAY STRING . FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display

    PUNTO           shift and go to state 108
    VARIABLE        shift and go to state 109
    WITH            shift and go to state 110
    FUNCTION        shift and go to state 111


state 82

    (74) stm_display -> DISPLAY VARIABLE . STRING PUNTO
    (79) stm_display -> DISPLAY VARIABLE . STRING PUNTO stm_display

    STRING          shift and go to state 112


state 83

    (81) stm_acept -> ACCEPT VARIABLE . PUNTO
    (82) stm_acept -> ACCEPT VARIABLE . PUNTO stm_acept

    PUNTO           shift and go to state 113


state 84

    (83) stm_add -> ADD VARIABLE . TO VARIABLE GIVING VARIABLE PUNTO
    (84) stm_add -> ADD VARIABLE . TO VARIABLE PUNTO

    TO              shift and go to state 114


state 85

    (85) stm_divide -> DIVIDE VARIABLE . INTO VARIABLE GIVING VARIABLE PUNTO
    (86) stm_divide -> DIVIDE VARIABLE . INTO VARIABLE PUNTO

    INTO            shift and go to state 115


state 86

    (87) stm_multiply -> MULTIPLY VARIABLE . BY VARIABLE GIVING VARIABLE PUNTO
    (88) stm_multiply -> MULTIPLY VARIABLE . BY VARIABLE PUNTO

    BY              shift and go to state 116


state 87

    (89) stm_minus -> SUBTRACT VARIABLE . FROM VARIABLE GIVING VARIABLE PUNTO
    (90) stm_minus -> SUBTRACT VARIABLE . FROM VARIABLE PUNTO

    FROM            shift and go to state 117


state 88

    (91) if_statement -> IF conditional . ifthen ifelse END_IF
    (92) if_statement -> IF conditional . ifthen
    (93) if_statement -> IF conditional . ifthen ifelse
    (94) if_statement -> IF conditional . ifthen END_IF
    (95) ifthen -> . THEN NEXT SENTENCE
    (96) ifthen -> . THEN statements
    (97) ifthen -> . statements
    (98) ifthen -> . NEXT SENTENCE
    (64) statements -> . stm_display
    (65) statements -> . stm_acept
    (66) statements -> . stm_add
    (67) statements -> . stm_divide
    (68) statements -> . stm_multiply
    (69) statements -> . stm_minus
    (70) statements -> . if_statement
    (71) stm_display -> . DISPLAY STRING PUNTO
    (72) stm_display -> . DISPLAY STRING VARIABLE PUNTO
    (73) stm_display -> . DISPLAY STRING WITH NO ADVANCING PUNTO
    (74) stm_display -> . DISPLAY VARIABLE STRING PUNTO
    (75) stm_display -> . DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO
    (76) stm_display -> . DISPLAY STRING PUNTO stm_display
    (77) stm_display -> . DISPLAY STRING WITH NO ADVANCING PUNTO stm_display
    (78) stm_display -> . DISPLAY STRING VARIABLE PUNTO stm_display
    (79) stm_display -> . DISPLAY VARIABLE STRING PUNTO stm_display
    (80) stm_display -> . DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display
    (81) stm_acept -> . ACCEPT VARIABLE PUNTO
    (82) stm_acept -> . ACCEPT VARIABLE PUNTO stm_acept
    (83) stm_add -> . ADD VARIABLE TO VARIABLE GIVING VARIABLE PUNTO
    (84) stm_add -> . ADD VARIABLE TO VARIABLE PUNTO
    (85) stm_divide -> . DIVIDE VARIABLE INTO VARIABLE GIVING VARIABLE PUNTO
    (86) stm_divide -> . DIVIDE VARIABLE INTO VARIABLE PUNTO
    (87) stm_multiply -> . MULTIPLY VARIABLE BY VARIABLE GIVING VARIABLE PUNTO
    (88) stm_multiply -> . MULTIPLY VARIABLE BY VARIABLE PUNTO
    (89) stm_minus -> . SUBTRACT VARIABLE FROM VARIABLE GIVING VARIABLE PUNTO
    (90) stm_minus -> . SUBTRACT VARIABLE FROM VARIABLE PUNTO
    (91) if_statement -> . IF conditional ifthen ifelse END_IF
    (92) if_statement -> . IF conditional ifthen
    (93) if_statement -> . IF conditional ifthen ifelse
    (94) if_statement -> . IF conditional ifthen END_IF

    THEN            shift and go to state 119
    NEXT            shift and go to state 120
    DISPLAY         shift and go to state 61
    ACCEPT          shift and go to state 62
    ADD             shift and go to state 63
    DIVIDE          shift and go to state 64
    MULTIPLY        shift and go to state 65
    SUBTRACT        shift and go to state 66
    IF              shift and go to state 67

    ifthen                         shift and go to state 118
    statements                     shift and go to state 121
    stm_display                    shift and go to state 54
    stm_acept                      shift and go to state 55
    stm_add                        shift and go to state 56
    stm_divide                     shift and go to state 57
    stm_multiply                   shift and go to state 58
    stm_minus                      shift and go to state 59
    if_statement                   shift and go to state 60

state 89

    (101) conditional -> PARENT_IZQ . aritmeticExpresion PARENT_DER
    (102) conditional -> PARENT_IZQ . logicExpresion PARENT_DER
    (105) aritmeticExpresion -> . VARIABLE MENOR_IGUAL VARIABLE
    (106) aritmeticExpresion -> . VARIABLE MAYOR_IGUAL VARIABLE
    (107) aritmeticExpresion -> . VARIABLE ES_IGUAL VARIABLE
    (108) aritmeticExpresion -> . VARIABLE MENOR_QUE VARIABLE
    (109) aritmeticExpresion -> . VARIABLE MAYOR_QUE VARIABLE
    (110) aritmeticExpresion -> . VARIABLE MENOR_IGUAL NUMERO
    (111) aritmeticExpresion -> . VARIABLE MAYOR_IGUAL NUMERO
    (112) aritmeticExpresion -> . VARIABLE ES_IGUAL NUMERO
    (113) aritmeticExpresion -> . VARIABLE MENOR_QUE NUMERO
    (114) aritmeticExpresion -> . VARIABLE MAYOR_QUE NUMERO
    (115) aritmeticExpresion -> . NUMERO MENOR_IGUAL VARIABLE
    (116) aritmeticExpresion -> . NUMERO MAYOR_IGUAL VARIABLE
    (117) aritmeticExpresion -> . NUMERO ES_IGUAL VARIABLE
    (118) aritmeticExpresion -> . NUMERO MENOR_QUE VARIABLE
    (119) aritmeticExpresion -> . NUMERO MAYOR_QUE VARIABLE
    (120) logicExpresion -> . aritmeticExpresion AND aritmeticExpresion
    (121) logicExpresion -> . aritmeticExpresion OR aritmeticExpresion
    (122) logicExpresion -> . logicExpresion OR logicExpresion
    (123) logicExpresion -> . logicExpresion AND logicExpresion
    (124) logicExpresion -> . NOT VARIABLE

    VARIABLE        shift and go to state 92
    NUMERO          shift and go to state 93
    NOT             shift and go to state 94

    aritmeticExpresion             shift and go to state 122
    logicExpresion                 shift and go to state 123

state 90

    (103) conditional -> aritmeticExpresion .
    (120) logicExpresion -> aritmeticExpresion . AND aritmeticExpresion
    (121) logicExpresion -> aritmeticExpresion . OR aritmeticExpresion

    THEN            reduce using rule 103 (conditional -> aritmeticExpresion .)
    NEXT            reduce using rule 103 (conditional -> aritmeticExpresion .)
    DISPLAY         reduce using rule 103 (conditional -> aritmeticExpresion .)
    ACCEPT          reduce using rule 103 (conditional -> aritmeticExpresion .)
    ADD             reduce using rule 103 (conditional -> aritmeticExpresion .)
    DIVIDE          reduce using rule 103 (conditional -> aritmeticExpresion .)
    MULTIPLY        reduce using rule 103 (conditional -> aritmeticExpresion .)
    SUBTRACT        reduce using rule 103 (conditional -> aritmeticExpresion .)
    IF              reduce using rule 103 (conditional -> aritmeticExpresion .)
    AND             shift and go to state 124
    OR              shift and go to state 125


state 91

    (104) conditional -> logicExpresion .
    (122) logicExpresion -> logicExpresion . OR logicExpresion
    (123) logicExpresion -> logicExpresion . AND logicExpresion

    THEN            reduce using rule 104 (conditional -> logicExpresion .)
    NEXT            reduce using rule 104 (conditional -> logicExpresion .)
    DISPLAY         reduce using rule 104 (conditional -> logicExpresion .)
    ACCEPT          reduce using rule 104 (conditional -> logicExpresion .)
    ADD             reduce using rule 104 (conditional -> logicExpresion .)
    DIVIDE          reduce using rule 104 (conditional -> logicExpresion .)
    MULTIPLY        reduce using rule 104 (conditional -> logicExpresion .)
    SUBTRACT        reduce using rule 104 (conditional -> logicExpresion .)
    IF              reduce using rule 104 (conditional -> logicExpresion .)
    OR              shift and go to state 126
    AND             shift and go to state 127


state 92

    (105) aritmeticExpresion -> VARIABLE . MENOR_IGUAL VARIABLE
    (106) aritmeticExpresion -> VARIABLE . MAYOR_IGUAL VARIABLE
    (107) aritmeticExpresion -> VARIABLE . ES_IGUAL VARIABLE
    (108) aritmeticExpresion -> VARIABLE . MENOR_QUE VARIABLE
    (109) aritmeticExpresion -> VARIABLE . MAYOR_QUE VARIABLE
    (110) aritmeticExpresion -> VARIABLE . MENOR_IGUAL NUMERO
    (111) aritmeticExpresion -> VARIABLE . MAYOR_IGUAL NUMERO
    (112) aritmeticExpresion -> VARIABLE . ES_IGUAL NUMERO
    (113) aritmeticExpresion -> VARIABLE . MENOR_QUE NUMERO
    (114) aritmeticExpresion -> VARIABLE . MAYOR_QUE NUMERO

    MENOR_IGUAL     shift and go to state 128
    MAYOR_IGUAL     shift and go to state 129
    ES_IGUAL        shift and go to state 130
    MENOR_QUE       shift and go to state 131
    MAYOR_QUE       shift and go to state 132


state 93

    (115) aritmeticExpresion -> NUMERO . MENOR_IGUAL VARIABLE
    (116) aritmeticExpresion -> NUMERO . MAYOR_IGUAL VARIABLE
    (117) aritmeticExpresion -> NUMERO . ES_IGUAL VARIABLE
    (118) aritmeticExpresion -> NUMERO . MENOR_QUE VARIABLE
    (119) aritmeticExpresion -> NUMERO . MAYOR_QUE VARIABLE

    MENOR_IGUAL     shift and go to state 133
    MAYOR_IGUAL     shift and go to state 134
    ES_IGUAL        shift and go to state 135
    MENOR_QUE       shift and go to state 136
    MAYOR_QUE       shift and go to state 137


state 94

    (124) logicExpresion -> NOT . VARIABLE

    VARIABLE        shift and go to state 138


state 95

    (21) identification_division_content -> identification_division_content INSTALLATION . PUNTO VARIABLE PUNTO

    PUNTO           shift and go to state 139


state 96

    (22) identification_division_content -> identification_division_content DATE_WRITTEN . PUNTO VARIABLE PUNTO

    PUNTO           shift and go to state 140


state 97

    (23) identification_division_content -> identification_division_content DATE_COMPILED . PUNTO VARIABLE PUNTO

    PUNTO           shift and go to state 141


state 98

    (24) identification_division_content -> identification_division_content SECURITY . PUNTO VARIABLE PUNTO

    PUNTO           shift and go to state 142


state 99

    (20) identification_division_content -> AUTHOR PUNTO . VARIABLE PUNTO identification_division_content

    VARIABLE        shift and go to state 143


state 100

    (16) program_id_cobol_source_program -> PROGRAM_ID PUNTO VARIABLE . PUNTO

    PUNTO           shift and go to state 144


state 101

    (17) nested_cobol_source_program -> IDENTIFICATION DIVISION PUNTO program_id_nested_cobol_source_program identification_division_content . ENVIRONMENT DIVISION PUNTO enviroment_division_content DATA DIVISION PUNTO data_division_content procedure_division nested_cobol_source_program END PROGRAM VARIABLE PUNTO
    (21) identification_division_content -> identification_division_content . INSTALLATION PUNTO VARIABLE PUNTO
    (22) identification_division_content -> identification_division_content . DATE_WRITTEN PUNTO VARIABLE PUNTO
    (23) identification_division_content -> identification_division_content . DATE_COMPILED PUNTO VARIABLE PUNTO
    (24) identification_division_content -> identification_division_content . SECURITY PUNTO VARIABLE PUNTO

    ENVIRONMENT     shift and go to state 145
    INSTALLATION    shift and go to state 95
    DATE_WRITTEN    shift and go to state 96
    DATE_COMPILED   shift and go to state 97
    SECURITY        shift and go to state 98


state 102

    (19) program_id_nested_cobol_source_program -> PROGRAM_ID PUNTO . VARIABLE PUNTO

    VARIABLE        shift and go to state 146


state 103

    (27) configuration_section -> CONFIGURATION SECTION PUNTO .
    (28) configuration_section -> CONFIGURATION SECTION PUNTO . configuration_section_paragrahs
    (30) configuration_section_paragrahs -> . source_computer_paragraph object_computer_paragraph special_names_paragraph
    (31) source_computer_paragraph -> . SOURCE_COMPUTER PUNTO VARIABLE PUNTO
    (32) source_computer_paragraph -> . empty
    (125) empty -> .

  ! reduce/reduce conflict for IDENTIFICATION resolved using rule 27 (configuration_section -> CONFIGURATION SECTION PUNTO .)
  ! reduce/reduce conflict for ID resolved using rule 27 (configuration_section -> CONFIGURATION SECTION PUNTO .)
  ! reduce/reduce conflict for END resolved using rule 27 (configuration_section -> CONFIGURATION SECTION PUNTO .)
  ! reduce/reduce conflict for ENVIRONMENT resolved using rule 27 (configuration_section -> CONFIGURATION SECTION PUNTO .)
  ! reduce/reduce conflict for DATA resolved using rule 27 (configuration_section -> CONFIGURATION SECTION PUNTO .)
  ! reduce/reduce conflict for PROCEDURE resolved using rule 27 (configuration_section -> CONFIGURATION SECTION PUNTO .)
  ! reduce/reduce conflict for $end resolved using rule 27 (configuration_section -> CONFIGURATION SECTION PUNTO .)
    IDENTIFICATION  reduce using rule 27 (configuration_section -> CONFIGURATION SECTION PUNTO .)
    ID              reduce using rule 27 (configuration_section -> CONFIGURATION SECTION PUNTO .)
    END             reduce using rule 27 (configuration_section -> CONFIGURATION SECTION PUNTO .)
    ENVIRONMENT     reduce using rule 27 (configuration_section -> CONFIGURATION SECTION PUNTO .)
    DATA            reduce using rule 27 (configuration_section -> CONFIGURATION SECTION PUNTO .)
    PROCEDURE       reduce using rule 27 (configuration_section -> CONFIGURATION SECTION PUNTO .)
    $end            reduce using rule 27 (configuration_section -> CONFIGURATION SECTION PUNTO .)
    SOURCE_COMPUTER shift and go to state 149
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    OBJECT_COMPUTER reduce using rule 125 (empty -> .)
    SPECIAL_NAMES   reduce using rule 125 (empty -> .)
    NUMERO          reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         reduce using rule 125 (empty -> .)
    ACCEPT          reduce using rule 125 (empty -> .)
    ADD             reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    MULTIPLY        reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)

  ! IDENTIFICATION  [ reduce using rule 125 (empty -> .) ]
  ! ID              [ reduce using rule 125 (empty -> .) ]
  ! END             [ reduce using rule 125 (empty -> .) ]
  ! ENVIRONMENT     [ reduce using rule 125 (empty -> .) ]
  ! DATA            [ reduce using rule 125 (empty -> .) ]
  ! PROCEDURE       [ reduce using rule 125 (empty -> .) ]
  ! $end            [ reduce using rule 125 (empty -> .) ]

    configuration_section_paragrahs shift and go to state 147
    source_computer_paragraph      shift and go to state 148
    empty                          shift and go to state 150

state 104

    (37) data_division_content -> WORKING_STORAGE SECTION PUNTO . data_item_entry
    (41) data_item_entry -> . stament_declaration_var
    (42) data_item_entry -> . data_item_entry stament_declaration_var
    (43) data_item_entry -> . empty
    (45) stament_declaration_var -> . stament_declaration_var NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO
    (46) stament_declaration_var -> . stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (47) stament_declaration_var -> . stament_declaration_var NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (48) stament_declaration_var -> . stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING
    (49) stament_declaration_var -> . stament_declaration_var NUMERO VARIABLE PIC VARIABLE PUNTO
    (50) stament_declaration_var -> . stament_declaration_var NUMERO VARIABLE PIC NUMERO PUNTO
    (51) stament_declaration_var -> . NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO
    (52) stament_declaration_var -> . NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (53) stament_declaration_var -> . NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (54) stament_declaration_var -> . NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING
    (55) stament_declaration_var -> . NUMERO VARIABLE PIC VARIABLE PUNTO
    (56) stament_declaration_var -> . NUMERO VARIABLE PIC NUMERO PUNTO
    (125) empty -> .

  ! shift/reduce conflict for NUMERO resolved as shift
    NUMERO          shift and go to state 154
    IDENTIFICATION  reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    END             reduce using rule 125 (empty -> .)
    ENVIRONMENT     reduce using rule 125 (empty -> .)
    DATA            reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    $end            reduce using rule 125 (empty -> .)
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    OBJECT_COMPUTER reduce using rule 125 (empty -> .)
    SPECIAL_NAMES   reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         reduce using rule 125 (empty -> .)
    ACCEPT          reduce using rule 125 (empty -> .)
    ADD             reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    MULTIPLY        reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)

  ! NUMERO          [ reduce using rule 125 (empty -> .) ]

    data_item_entry                shift and go to state 151
    stament_declaration_var        shift and go to state 152
    empty                          shift and go to state 153

state 105

    (38) data_division_content -> FILE SECTION PUNTO . data_file_entry
    (39) data_division_content -> FILE SECTION PUNTO . WORKING_STORAGE SECTION PUNTO data_item_entry
    (44) data_file_entry -> . empty
    (125) empty -> .

    WORKING_STORAGE shift and go to state 156
    IDENTIFICATION  reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    END             reduce using rule 125 (empty -> .)
    ENVIRONMENT     reduce using rule 125 (empty -> .)
    DATA            reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    $end            reduce using rule 125 (empty -> .)
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    OBJECT_COMPUTER reduce using rule 125 (empty -> .)
    SPECIAL_NAMES   reduce using rule 125 (empty -> .)
    NUMERO          reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         reduce using rule 125 (empty -> .)
    ACCEPT          reduce using rule 125 (empty -> .)
    ADD             reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    MULTIPLY        reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)

    data_file_entry                shift and go to state 155
    empty                          shift and go to state 157

state 106

    (59) procedure_division -> PROCEDURE DIVISION PUNTO paragrahps STOP RUN . PUNTO

    PUNTO           shift and go to state 158


state 107

    (58) procedure_division -> PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps .
    (60) procedure_division -> PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps . STOP RUN PUNTO
    (61) paragrahps -> paragrahps . statements
    (64) statements -> . stm_display
    (65) statements -> . stm_acept
    (66) statements -> . stm_add
    (67) statements -> . stm_divide
    (68) statements -> . stm_multiply
    (69) statements -> . stm_minus
    (70) statements -> . if_statement
    (71) stm_display -> . DISPLAY STRING PUNTO
    (72) stm_display -> . DISPLAY STRING VARIABLE PUNTO
    (73) stm_display -> . DISPLAY STRING WITH NO ADVANCING PUNTO
    (74) stm_display -> . DISPLAY VARIABLE STRING PUNTO
    (75) stm_display -> . DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO
    (76) stm_display -> . DISPLAY STRING PUNTO stm_display
    (77) stm_display -> . DISPLAY STRING WITH NO ADVANCING PUNTO stm_display
    (78) stm_display -> . DISPLAY STRING VARIABLE PUNTO stm_display
    (79) stm_display -> . DISPLAY VARIABLE STRING PUNTO stm_display
    (80) stm_display -> . DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display
    (81) stm_acept -> . ACCEPT VARIABLE PUNTO
    (82) stm_acept -> . ACCEPT VARIABLE PUNTO stm_acept
    (83) stm_add -> . ADD VARIABLE TO VARIABLE GIVING VARIABLE PUNTO
    (84) stm_add -> . ADD VARIABLE TO VARIABLE PUNTO
    (85) stm_divide -> . DIVIDE VARIABLE INTO VARIABLE GIVING VARIABLE PUNTO
    (86) stm_divide -> . DIVIDE VARIABLE INTO VARIABLE PUNTO
    (87) stm_multiply -> . MULTIPLY VARIABLE BY VARIABLE GIVING VARIABLE PUNTO
    (88) stm_multiply -> . MULTIPLY VARIABLE BY VARIABLE PUNTO
    (89) stm_minus -> . SUBTRACT VARIABLE FROM VARIABLE GIVING VARIABLE PUNTO
    (90) stm_minus -> . SUBTRACT VARIABLE FROM VARIABLE PUNTO
    (91) if_statement -> . IF conditional ifthen ifelse END_IF
    (92) if_statement -> . IF conditional ifthen
    (93) if_statement -> . IF conditional ifthen ifelse
    (94) if_statement -> . IF conditional ifthen END_IF

    IDENTIFICATION  reduce using rule 58 (procedure_division -> PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps .)
    ID              reduce using rule 58 (procedure_division -> PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps .)
    END             reduce using rule 58 (procedure_division -> PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps .)
    ENVIRONMENT     reduce using rule 58 (procedure_division -> PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps .)
    DATA            reduce using rule 58 (procedure_division -> PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps .)
    PROCEDURE       reduce using rule 58 (procedure_division -> PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps .)
    $end            reduce using rule 58 (procedure_division -> PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps .)
    STOP            shift and go to state 159
    DISPLAY         shift and go to state 61
    ACCEPT          shift and go to state 62
    ADD             shift and go to state 63
    DIVIDE          shift and go to state 64
    MULTIPLY        shift and go to state 65
    SUBTRACT        shift and go to state 66
    IF              shift and go to state 67

    statements                     shift and go to state 79
    stm_display                    shift and go to state 54
    stm_acept                      shift and go to state 55
    stm_add                        shift and go to state 56
    stm_divide                     shift and go to state 57
    stm_multiply                   shift and go to state 58
    stm_minus                      shift and go to state 59
    if_statement                   shift and go to state 60

state 108

    (71) stm_display -> DISPLAY STRING PUNTO .
    (76) stm_display -> DISPLAY STRING PUNTO . stm_display
    (71) stm_display -> . DISPLAY STRING PUNTO
    (72) stm_display -> . DISPLAY STRING VARIABLE PUNTO
    (73) stm_display -> . DISPLAY STRING WITH NO ADVANCING PUNTO
    (74) stm_display -> . DISPLAY VARIABLE STRING PUNTO
    (75) stm_display -> . DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO
    (76) stm_display -> . DISPLAY STRING PUNTO stm_display
    (77) stm_display -> . DISPLAY STRING WITH NO ADVANCING PUNTO stm_display
    (78) stm_display -> . DISPLAY STRING VARIABLE PUNTO stm_display
    (79) stm_display -> . DISPLAY VARIABLE STRING PUNTO stm_display
    (80) stm_display -> . DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display

  ! shift/reduce conflict for DISPLAY resolved as shift
    IDENTIFICATION  reduce using rule 71 (stm_display -> DISPLAY STRING PUNTO .)
    ID              reduce using rule 71 (stm_display -> DISPLAY STRING PUNTO .)
    END             reduce using rule 71 (stm_display -> DISPLAY STRING PUNTO .)
    ENVIRONMENT     reduce using rule 71 (stm_display -> DISPLAY STRING PUNTO .)
    DATA            reduce using rule 71 (stm_display -> DISPLAY STRING PUNTO .)
    PROCEDURE       reduce using rule 71 (stm_display -> DISPLAY STRING PUNTO .)
    $end            reduce using rule 71 (stm_display -> DISPLAY STRING PUNTO .)
    STOP            reduce using rule 71 (stm_display -> DISPLAY STRING PUNTO .)
    ACCEPT          reduce using rule 71 (stm_display -> DISPLAY STRING PUNTO .)
    ADD             reduce using rule 71 (stm_display -> DISPLAY STRING PUNTO .)
    DIVIDE          reduce using rule 71 (stm_display -> DISPLAY STRING PUNTO .)
    MULTIPLY        reduce using rule 71 (stm_display -> DISPLAY STRING PUNTO .)
    SUBTRACT        reduce using rule 71 (stm_display -> DISPLAY STRING PUNTO .)
    IF              reduce using rule 71 (stm_display -> DISPLAY STRING PUNTO .)
    ELSE            reduce using rule 71 (stm_display -> DISPLAY STRING PUNTO .)
    END_IF          reduce using rule 71 (stm_display -> DISPLAY STRING PUNTO .)
    DISPLAY         shift and go to state 61

  ! DISPLAY         [ reduce using rule 71 (stm_display -> DISPLAY STRING PUNTO .) ]

    stm_display                    shift and go to state 160

state 109

    (72) stm_display -> DISPLAY STRING VARIABLE . PUNTO
    (78) stm_display -> DISPLAY STRING VARIABLE . PUNTO stm_display

    PUNTO           shift and go to state 161


state 110

    (73) stm_display -> DISPLAY STRING WITH . NO ADVANCING PUNTO
    (77) stm_display -> DISPLAY STRING WITH . NO ADVANCING PUNTO stm_display

    NO              shift and go to state 162


state 111

    (75) stm_display -> DISPLAY STRING FUNCTION . LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO
    (80) stm_display -> DISPLAY STRING FUNCTION . LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display

    LENGTH          shift and go to state 163


state 112

    (74) stm_display -> DISPLAY VARIABLE STRING . PUNTO
    (79) stm_display -> DISPLAY VARIABLE STRING . PUNTO stm_display

    PUNTO           shift and go to state 164


state 113

    (81) stm_acept -> ACCEPT VARIABLE PUNTO .
    (82) stm_acept -> ACCEPT VARIABLE PUNTO . stm_acept
    (81) stm_acept -> . ACCEPT VARIABLE PUNTO
    (82) stm_acept -> . ACCEPT VARIABLE PUNTO stm_acept

  ! shift/reduce conflict for ACCEPT resolved as shift
    IDENTIFICATION  reduce using rule 81 (stm_acept -> ACCEPT VARIABLE PUNTO .)
    ID              reduce using rule 81 (stm_acept -> ACCEPT VARIABLE PUNTO .)
    END             reduce using rule 81 (stm_acept -> ACCEPT VARIABLE PUNTO .)
    ENVIRONMENT     reduce using rule 81 (stm_acept -> ACCEPT VARIABLE PUNTO .)
    DATA            reduce using rule 81 (stm_acept -> ACCEPT VARIABLE PUNTO .)
    PROCEDURE       reduce using rule 81 (stm_acept -> ACCEPT VARIABLE PUNTO .)
    $end            reduce using rule 81 (stm_acept -> ACCEPT VARIABLE PUNTO .)
    STOP            reduce using rule 81 (stm_acept -> ACCEPT VARIABLE PUNTO .)
    DISPLAY         reduce using rule 81 (stm_acept -> ACCEPT VARIABLE PUNTO .)
    ADD             reduce using rule 81 (stm_acept -> ACCEPT VARIABLE PUNTO .)
    DIVIDE          reduce using rule 81 (stm_acept -> ACCEPT VARIABLE PUNTO .)
    MULTIPLY        reduce using rule 81 (stm_acept -> ACCEPT VARIABLE PUNTO .)
    SUBTRACT        reduce using rule 81 (stm_acept -> ACCEPT VARIABLE PUNTO .)
    IF              reduce using rule 81 (stm_acept -> ACCEPT VARIABLE PUNTO .)
    ELSE            reduce using rule 81 (stm_acept -> ACCEPT VARIABLE PUNTO .)
    END_IF          reduce using rule 81 (stm_acept -> ACCEPT VARIABLE PUNTO .)
    ACCEPT          shift and go to state 62

  ! ACCEPT          [ reduce using rule 81 (stm_acept -> ACCEPT VARIABLE PUNTO .) ]

    stm_acept                      shift and go to state 165

state 114

    (83) stm_add -> ADD VARIABLE TO . VARIABLE GIVING VARIABLE PUNTO
    (84) stm_add -> ADD VARIABLE TO . VARIABLE PUNTO

    VARIABLE        shift and go to state 166


state 115

    (85) stm_divide -> DIVIDE VARIABLE INTO . VARIABLE GIVING VARIABLE PUNTO
    (86) stm_divide -> DIVIDE VARIABLE INTO . VARIABLE PUNTO

    VARIABLE        shift and go to state 167


state 116

    (87) stm_multiply -> MULTIPLY VARIABLE BY . VARIABLE GIVING VARIABLE PUNTO
    (88) stm_multiply -> MULTIPLY VARIABLE BY . VARIABLE PUNTO

    VARIABLE        shift and go to state 168


state 117

    (89) stm_minus -> SUBTRACT VARIABLE FROM . VARIABLE GIVING VARIABLE PUNTO
    (90) stm_minus -> SUBTRACT VARIABLE FROM . VARIABLE PUNTO

    VARIABLE        shift and go to state 169


state 118

    (91) if_statement -> IF conditional ifthen . ifelse END_IF
    (92) if_statement -> IF conditional ifthen .
    (93) if_statement -> IF conditional ifthen . ifelse
    (94) if_statement -> IF conditional ifthen . END_IF
    (99) ifelse -> . ELSE NEXT SENTENCE
    (100) ifelse -> . ELSE statements

  ! shift/reduce conflict for END_IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    IDENTIFICATION  reduce using rule 92 (if_statement -> IF conditional ifthen .)
    ID              reduce using rule 92 (if_statement -> IF conditional ifthen .)
    END             reduce using rule 92 (if_statement -> IF conditional ifthen .)
    ENVIRONMENT     reduce using rule 92 (if_statement -> IF conditional ifthen .)
    DATA            reduce using rule 92 (if_statement -> IF conditional ifthen .)
    PROCEDURE       reduce using rule 92 (if_statement -> IF conditional ifthen .)
    $end            reduce using rule 92 (if_statement -> IF conditional ifthen .)
    STOP            reduce using rule 92 (if_statement -> IF conditional ifthen .)
    DISPLAY         reduce using rule 92 (if_statement -> IF conditional ifthen .)
    ACCEPT          reduce using rule 92 (if_statement -> IF conditional ifthen .)
    ADD             reduce using rule 92 (if_statement -> IF conditional ifthen .)
    DIVIDE          reduce using rule 92 (if_statement -> IF conditional ifthen .)
    MULTIPLY        reduce using rule 92 (if_statement -> IF conditional ifthen .)
    SUBTRACT        reduce using rule 92 (if_statement -> IF conditional ifthen .)
    IF              reduce using rule 92 (if_statement -> IF conditional ifthen .)
    END_IF          shift and go to state 171
    ELSE            shift and go to state 172

  ! ELSE            [ reduce using rule 92 (if_statement -> IF conditional ifthen .) ]
  ! END_IF          [ reduce using rule 92 (if_statement -> IF conditional ifthen .) ]

    ifelse                         shift and go to state 170

state 119

    (95) ifthen -> THEN . NEXT SENTENCE
    (96) ifthen -> THEN . statements
    (64) statements -> . stm_display
    (65) statements -> . stm_acept
    (66) statements -> . stm_add
    (67) statements -> . stm_divide
    (68) statements -> . stm_multiply
    (69) statements -> . stm_minus
    (70) statements -> . if_statement
    (71) stm_display -> . DISPLAY STRING PUNTO
    (72) stm_display -> . DISPLAY STRING VARIABLE PUNTO
    (73) stm_display -> . DISPLAY STRING WITH NO ADVANCING PUNTO
    (74) stm_display -> . DISPLAY VARIABLE STRING PUNTO
    (75) stm_display -> . DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO
    (76) stm_display -> . DISPLAY STRING PUNTO stm_display
    (77) stm_display -> . DISPLAY STRING WITH NO ADVANCING PUNTO stm_display
    (78) stm_display -> . DISPLAY STRING VARIABLE PUNTO stm_display
    (79) stm_display -> . DISPLAY VARIABLE STRING PUNTO stm_display
    (80) stm_display -> . DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display
    (81) stm_acept -> . ACCEPT VARIABLE PUNTO
    (82) stm_acept -> . ACCEPT VARIABLE PUNTO stm_acept
    (83) stm_add -> . ADD VARIABLE TO VARIABLE GIVING VARIABLE PUNTO
    (84) stm_add -> . ADD VARIABLE TO VARIABLE PUNTO
    (85) stm_divide -> . DIVIDE VARIABLE INTO VARIABLE GIVING VARIABLE PUNTO
    (86) stm_divide -> . DIVIDE VARIABLE INTO VARIABLE PUNTO
    (87) stm_multiply -> . MULTIPLY VARIABLE BY VARIABLE GIVING VARIABLE PUNTO
    (88) stm_multiply -> . MULTIPLY VARIABLE BY VARIABLE PUNTO
    (89) stm_minus -> . SUBTRACT VARIABLE FROM VARIABLE GIVING VARIABLE PUNTO
    (90) stm_minus -> . SUBTRACT VARIABLE FROM VARIABLE PUNTO
    (91) if_statement -> . IF conditional ifthen ifelse END_IF
    (92) if_statement -> . IF conditional ifthen
    (93) if_statement -> . IF conditional ifthen ifelse
    (94) if_statement -> . IF conditional ifthen END_IF

    NEXT            shift and go to state 173
    DISPLAY         shift and go to state 61
    ACCEPT          shift and go to state 62
    ADD             shift and go to state 63
    DIVIDE          shift and go to state 64
    MULTIPLY        shift and go to state 65
    SUBTRACT        shift and go to state 66
    IF              shift and go to state 67

    statements                     shift and go to state 174
    stm_display                    shift and go to state 54
    stm_acept                      shift and go to state 55
    stm_add                        shift and go to state 56
    stm_divide                     shift and go to state 57
    stm_multiply                   shift and go to state 58
    stm_minus                      shift and go to state 59
    if_statement                   shift and go to state 60

state 120

    (98) ifthen -> NEXT . SENTENCE

    SENTENCE        shift and go to state 175


state 121

    (97) ifthen -> statements .

    ELSE            reduce using rule 97 (ifthen -> statements .)
    IDENTIFICATION  reduce using rule 97 (ifthen -> statements .)
    ID              reduce using rule 97 (ifthen -> statements .)
    END             reduce using rule 97 (ifthen -> statements .)
    ENVIRONMENT     reduce using rule 97 (ifthen -> statements .)
    DATA            reduce using rule 97 (ifthen -> statements .)
    PROCEDURE       reduce using rule 97 (ifthen -> statements .)
    $end            reduce using rule 97 (ifthen -> statements .)
    STOP            reduce using rule 97 (ifthen -> statements .)
    DISPLAY         reduce using rule 97 (ifthen -> statements .)
    ACCEPT          reduce using rule 97 (ifthen -> statements .)
    ADD             reduce using rule 97 (ifthen -> statements .)
    DIVIDE          reduce using rule 97 (ifthen -> statements .)
    MULTIPLY        reduce using rule 97 (ifthen -> statements .)
    SUBTRACT        reduce using rule 97 (ifthen -> statements .)
    IF              reduce using rule 97 (ifthen -> statements .)
    END_IF          reduce using rule 97 (ifthen -> statements .)


state 122

    (101) conditional -> PARENT_IZQ aritmeticExpresion . PARENT_DER
    (120) logicExpresion -> aritmeticExpresion . AND aritmeticExpresion
    (121) logicExpresion -> aritmeticExpresion . OR aritmeticExpresion

    PARENT_DER      shift and go to state 176
    AND             shift and go to state 124
    OR              shift and go to state 125


state 123

    (102) conditional -> PARENT_IZQ logicExpresion . PARENT_DER
    (122) logicExpresion -> logicExpresion . OR logicExpresion
    (123) logicExpresion -> logicExpresion . AND logicExpresion

    PARENT_DER      shift and go to state 177
    OR              shift and go to state 126
    AND             shift and go to state 127


state 124

    (120) logicExpresion -> aritmeticExpresion AND . aritmeticExpresion
    (105) aritmeticExpresion -> . VARIABLE MENOR_IGUAL VARIABLE
    (106) aritmeticExpresion -> . VARIABLE MAYOR_IGUAL VARIABLE
    (107) aritmeticExpresion -> . VARIABLE ES_IGUAL VARIABLE
    (108) aritmeticExpresion -> . VARIABLE MENOR_QUE VARIABLE
    (109) aritmeticExpresion -> . VARIABLE MAYOR_QUE VARIABLE
    (110) aritmeticExpresion -> . VARIABLE MENOR_IGUAL NUMERO
    (111) aritmeticExpresion -> . VARIABLE MAYOR_IGUAL NUMERO
    (112) aritmeticExpresion -> . VARIABLE ES_IGUAL NUMERO
    (113) aritmeticExpresion -> . VARIABLE MENOR_QUE NUMERO
    (114) aritmeticExpresion -> . VARIABLE MAYOR_QUE NUMERO
    (115) aritmeticExpresion -> . NUMERO MENOR_IGUAL VARIABLE
    (116) aritmeticExpresion -> . NUMERO MAYOR_IGUAL VARIABLE
    (117) aritmeticExpresion -> . NUMERO ES_IGUAL VARIABLE
    (118) aritmeticExpresion -> . NUMERO MENOR_QUE VARIABLE
    (119) aritmeticExpresion -> . NUMERO MAYOR_QUE VARIABLE

    VARIABLE        shift and go to state 92
    NUMERO          shift and go to state 93

    aritmeticExpresion             shift and go to state 178

state 125

    (121) logicExpresion -> aritmeticExpresion OR . aritmeticExpresion
    (105) aritmeticExpresion -> . VARIABLE MENOR_IGUAL VARIABLE
    (106) aritmeticExpresion -> . VARIABLE MAYOR_IGUAL VARIABLE
    (107) aritmeticExpresion -> . VARIABLE ES_IGUAL VARIABLE
    (108) aritmeticExpresion -> . VARIABLE MENOR_QUE VARIABLE
    (109) aritmeticExpresion -> . VARIABLE MAYOR_QUE VARIABLE
    (110) aritmeticExpresion -> . VARIABLE MENOR_IGUAL NUMERO
    (111) aritmeticExpresion -> . VARIABLE MAYOR_IGUAL NUMERO
    (112) aritmeticExpresion -> . VARIABLE ES_IGUAL NUMERO
    (113) aritmeticExpresion -> . VARIABLE MENOR_QUE NUMERO
    (114) aritmeticExpresion -> . VARIABLE MAYOR_QUE NUMERO
    (115) aritmeticExpresion -> . NUMERO MENOR_IGUAL VARIABLE
    (116) aritmeticExpresion -> . NUMERO MAYOR_IGUAL VARIABLE
    (117) aritmeticExpresion -> . NUMERO ES_IGUAL VARIABLE
    (118) aritmeticExpresion -> . NUMERO MENOR_QUE VARIABLE
    (119) aritmeticExpresion -> . NUMERO MAYOR_QUE VARIABLE

    VARIABLE        shift and go to state 92
    NUMERO          shift and go to state 93

    aritmeticExpresion             shift and go to state 179

state 126

    (122) logicExpresion -> logicExpresion OR . logicExpresion
    (120) logicExpresion -> . aritmeticExpresion AND aritmeticExpresion
    (121) logicExpresion -> . aritmeticExpresion OR aritmeticExpresion
    (122) logicExpresion -> . logicExpresion OR logicExpresion
    (123) logicExpresion -> . logicExpresion AND logicExpresion
    (124) logicExpresion -> . NOT VARIABLE
    (105) aritmeticExpresion -> . VARIABLE MENOR_IGUAL VARIABLE
    (106) aritmeticExpresion -> . VARIABLE MAYOR_IGUAL VARIABLE
    (107) aritmeticExpresion -> . VARIABLE ES_IGUAL VARIABLE
    (108) aritmeticExpresion -> . VARIABLE MENOR_QUE VARIABLE
    (109) aritmeticExpresion -> . VARIABLE MAYOR_QUE VARIABLE
    (110) aritmeticExpresion -> . VARIABLE MENOR_IGUAL NUMERO
    (111) aritmeticExpresion -> . VARIABLE MAYOR_IGUAL NUMERO
    (112) aritmeticExpresion -> . VARIABLE ES_IGUAL NUMERO
    (113) aritmeticExpresion -> . VARIABLE MENOR_QUE NUMERO
    (114) aritmeticExpresion -> . VARIABLE MAYOR_QUE NUMERO
    (115) aritmeticExpresion -> . NUMERO MENOR_IGUAL VARIABLE
    (116) aritmeticExpresion -> . NUMERO MAYOR_IGUAL VARIABLE
    (117) aritmeticExpresion -> . NUMERO ES_IGUAL VARIABLE
    (118) aritmeticExpresion -> . NUMERO MENOR_QUE VARIABLE
    (119) aritmeticExpresion -> . NUMERO MAYOR_QUE VARIABLE

    NOT             shift and go to state 94
    VARIABLE        shift and go to state 92
    NUMERO          shift and go to state 93

    logicExpresion                 shift and go to state 180
    aritmeticExpresion             shift and go to state 181

state 127

    (123) logicExpresion -> logicExpresion AND . logicExpresion
    (120) logicExpresion -> . aritmeticExpresion AND aritmeticExpresion
    (121) logicExpresion -> . aritmeticExpresion OR aritmeticExpresion
    (122) logicExpresion -> . logicExpresion OR logicExpresion
    (123) logicExpresion -> . logicExpresion AND logicExpresion
    (124) logicExpresion -> . NOT VARIABLE
    (105) aritmeticExpresion -> . VARIABLE MENOR_IGUAL VARIABLE
    (106) aritmeticExpresion -> . VARIABLE MAYOR_IGUAL VARIABLE
    (107) aritmeticExpresion -> . VARIABLE ES_IGUAL VARIABLE
    (108) aritmeticExpresion -> . VARIABLE MENOR_QUE VARIABLE
    (109) aritmeticExpresion -> . VARIABLE MAYOR_QUE VARIABLE
    (110) aritmeticExpresion -> . VARIABLE MENOR_IGUAL NUMERO
    (111) aritmeticExpresion -> . VARIABLE MAYOR_IGUAL NUMERO
    (112) aritmeticExpresion -> . VARIABLE ES_IGUAL NUMERO
    (113) aritmeticExpresion -> . VARIABLE MENOR_QUE NUMERO
    (114) aritmeticExpresion -> . VARIABLE MAYOR_QUE NUMERO
    (115) aritmeticExpresion -> . NUMERO MENOR_IGUAL VARIABLE
    (116) aritmeticExpresion -> . NUMERO MAYOR_IGUAL VARIABLE
    (117) aritmeticExpresion -> . NUMERO ES_IGUAL VARIABLE
    (118) aritmeticExpresion -> . NUMERO MENOR_QUE VARIABLE
    (119) aritmeticExpresion -> . NUMERO MAYOR_QUE VARIABLE

    NOT             shift and go to state 94
    VARIABLE        shift and go to state 92
    NUMERO          shift and go to state 93

    logicExpresion                 shift and go to state 182
    aritmeticExpresion             shift and go to state 181

state 128

    (105) aritmeticExpresion -> VARIABLE MENOR_IGUAL . VARIABLE
    (110) aritmeticExpresion -> VARIABLE MENOR_IGUAL . NUMERO

    VARIABLE        shift and go to state 183
    NUMERO          shift and go to state 184


state 129

    (106) aritmeticExpresion -> VARIABLE MAYOR_IGUAL . VARIABLE
    (111) aritmeticExpresion -> VARIABLE MAYOR_IGUAL . NUMERO

    VARIABLE        shift and go to state 185
    NUMERO          shift and go to state 186


state 130

    (107) aritmeticExpresion -> VARIABLE ES_IGUAL . VARIABLE
    (112) aritmeticExpresion -> VARIABLE ES_IGUAL . NUMERO

    VARIABLE        shift and go to state 187
    NUMERO          shift and go to state 188


state 131

    (108) aritmeticExpresion -> VARIABLE MENOR_QUE . VARIABLE
    (113) aritmeticExpresion -> VARIABLE MENOR_QUE . NUMERO

    VARIABLE        shift and go to state 189
    NUMERO          shift and go to state 190


state 132

    (109) aritmeticExpresion -> VARIABLE MAYOR_QUE . VARIABLE
    (114) aritmeticExpresion -> VARIABLE MAYOR_QUE . NUMERO

    VARIABLE        shift and go to state 191
    NUMERO          shift and go to state 192


state 133

    (115) aritmeticExpresion -> NUMERO MENOR_IGUAL . VARIABLE

    VARIABLE        shift and go to state 193


state 134

    (116) aritmeticExpresion -> NUMERO MAYOR_IGUAL . VARIABLE

    VARIABLE        shift and go to state 194


state 135

    (117) aritmeticExpresion -> NUMERO ES_IGUAL . VARIABLE

    VARIABLE        shift and go to state 195


state 136

    (118) aritmeticExpresion -> NUMERO MENOR_QUE . VARIABLE

    VARIABLE        shift and go to state 196


state 137

    (119) aritmeticExpresion -> NUMERO MAYOR_QUE . VARIABLE

    VARIABLE        shift and go to state 197


state 138

    (124) logicExpresion -> NOT VARIABLE .

    PARENT_DER      reduce using rule 124 (logicExpresion -> NOT VARIABLE .)
    THEN            reduce using rule 124 (logicExpresion -> NOT VARIABLE .)
    NEXT            reduce using rule 124 (logicExpresion -> NOT VARIABLE .)
    DISPLAY         reduce using rule 124 (logicExpresion -> NOT VARIABLE .)
    ACCEPT          reduce using rule 124 (logicExpresion -> NOT VARIABLE .)
    ADD             reduce using rule 124 (logicExpresion -> NOT VARIABLE .)
    DIVIDE          reduce using rule 124 (logicExpresion -> NOT VARIABLE .)
    MULTIPLY        reduce using rule 124 (logicExpresion -> NOT VARIABLE .)
    SUBTRACT        reduce using rule 124 (logicExpresion -> NOT VARIABLE .)
    IF              reduce using rule 124 (logicExpresion -> NOT VARIABLE .)
    OR              reduce using rule 124 (logicExpresion -> NOT VARIABLE .)
    AND             reduce using rule 124 (logicExpresion -> NOT VARIABLE .)


state 139

    (21) identification_division_content -> identification_division_content INSTALLATION PUNTO . VARIABLE PUNTO

    VARIABLE        shift and go to state 198


state 140

    (22) identification_division_content -> identification_division_content DATE_WRITTEN PUNTO . VARIABLE PUNTO

    VARIABLE        shift and go to state 199


state 141

    (23) identification_division_content -> identification_division_content DATE_COMPILED PUNTO . VARIABLE PUNTO

    VARIABLE        shift and go to state 200


state 142

    (24) identification_division_content -> identification_division_content SECURITY PUNTO . VARIABLE PUNTO

    VARIABLE        shift and go to state 201


state 143

    (20) identification_division_content -> AUTHOR PUNTO VARIABLE . PUNTO identification_division_content

    PUNTO           shift and go to state 202


state 144

    (16) program_id_cobol_source_program -> PROGRAM_ID PUNTO VARIABLE PUNTO .

    AUTHOR          reduce using rule 16 (program_id_cobol_source_program -> PROGRAM_ID PUNTO VARIABLE PUNTO .)
    INSTALLATION    reduce using rule 16 (program_id_cobol_source_program -> PROGRAM_ID PUNTO VARIABLE PUNTO .)
    DATE_WRITTEN    reduce using rule 16 (program_id_cobol_source_program -> PROGRAM_ID PUNTO VARIABLE PUNTO .)
    DATE_COMPILED   reduce using rule 16 (program_id_cobol_source_program -> PROGRAM_ID PUNTO VARIABLE PUNTO .)
    SECURITY        reduce using rule 16 (program_id_cobol_source_program -> PROGRAM_ID PUNTO VARIABLE PUNTO .)
    IDENTIFICATION  reduce using rule 16 (program_id_cobol_source_program -> PROGRAM_ID PUNTO VARIABLE PUNTO .)
    ID              reduce using rule 16 (program_id_cobol_source_program -> PROGRAM_ID PUNTO VARIABLE PUNTO .)
    END             reduce using rule 16 (program_id_cobol_source_program -> PROGRAM_ID PUNTO VARIABLE PUNTO .)
    ENVIRONMENT     reduce using rule 16 (program_id_cobol_source_program -> PROGRAM_ID PUNTO VARIABLE PUNTO .)
    DATA            reduce using rule 16 (program_id_cobol_source_program -> PROGRAM_ID PUNTO VARIABLE PUNTO .)
    PROCEDURE       reduce using rule 16 (program_id_cobol_source_program -> PROGRAM_ID PUNTO VARIABLE PUNTO .)
    $end            reduce using rule 16 (program_id_cobol_source_program -> PROGRAM_ID PUNTO VARIABLE PUNTO .)


state 145

    (17) nested_cobol_source_program -> IDENTIFICATION DIVISION PUNTO program_id_nested_cobol_source_program identification_division_content ENVIRONMENT . DIVISION PUNTO enviroment_division_content DATA DIVISION PUNTO data_division_content procedure_division nested_cobol_source_program END PROGRAM VARIABLE PUNTO

    DIVISION        shift and go to state 203


state 146

    (19) program_id_nested_cobol_source_program -> PROGRAM_ID PUNTO VARIABLE . PUNTO

    PUNTO           shift and go to state 204


state 147

    (28) configuration_section -> CONFIGURATION SECTION PUNTO configuration_section_paragrahs .

    IDENTIFICATION  reduce using rule 28 (configuration_section -> CONFIGURATION SECTION PUNTO configuration_section_paragrahs .)
    ID              reduce using rule 28 (configuration_section -> CONFIGURATION SECTION PUNTO configuration_section_paragrahs .)
    END             reduce using rule 28 (configuration_section -> CONFIGURATION SECTION PUNTO configuration_section_paragrahs .)
    ENVIRONMENT     reduce using rule 28 (configuration_section -> CONFIGURATION SECTION PUNTO configuration_section_paragrahs .)
    DATA            reduce using rule 28 (configuration_section -> CONFIGURATION SECTION PUNTO configuration_section_paragrahs .)
    PROCEDURE       reduce using rule 28 (configuration_section -> CONFIGURATION SECTION PUNTO configuration_section_paragrahs .)
    $end            reduce using rule 28 (configuration_section -> CONFIGURATION SECTION PUNTO configuration_section_paragrahs .)


state 148

    (30) configuration_section_paragrahs -> source_computer_paragraph . object_computer_paragraph special_names_paragraph
    (33) object_computer_paragraph -> . OBJECT_COMPUTER PUNTO VARIABLE PUNTO
    (34) object_computer_paragraph -> . empty
    (125) empty -> .

  ! shift/reduce conflict for OBJECT_COMPUTER resolved as shift
    OBJECT_COMPUTER shift and go to state 206
    IDENTIFICATION  reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    END             reduce using rule 125 (empty -> .)
    ENVIRONMENT     reduce using rule 125 (empty -> .)
    DATA            reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    $end            reduce using rule 125 (empty -> .)
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    SPECIAL_NAMES   reduce using rule 125 (empty -> .)
    NUMERO          reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         reduce using rule 125 (empty -> .)
    ACCEPT          reduce using rule 125 (empty -> .)
    ADD             reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    MULTIPLY        reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)

  ! OBJECT_COMPUTER [ reduce using rule 125 (empty -> .) ]

    object_computer_paragraph      shift and go to state 205
    empty                          shift and go to state 207

state 149

    (31) source_computer_paragraph -> SOURCE_COMPUTER . PUNTO VARIABLE PUNTO

    PUNTO           shift and go to state 208


state 150

    (32) source_computer_paragraph -> empty .

    OBJECT_COMPUTER reduce using rule 32 (source_computer_paragraph -> empty .)
    SPECIAL_NAMES   reduce using rule 32 (source_computer_paragraph -> empty .)
    IDENTIFICATION  reduce using rule 32 (source_computer_paragraph -> empty .)
    ID              reduce using rule 32 (source_computer_paragraph -> empty .)
    END             reduce using rule 32 (source_computer_paragraph -> empty .)
    ENVIRONMENT     reduce using rule 32 (source_computer_paragraph -> empty .)
    DATA            reduce using rule 32 (source_computer_paragraph -> empty .)
    PROCEDURE       reduce using rule 32 (source_computer_paragraph -> empty .)
    $end            reduce using rule 32 (source_computer_paragraph -> empty .)


state 151

    (37) data_division_content -> WORKING_STORAGE SECTION PUNTO data_item_entry .
    (42) data_item_entry -> data_item_entry . stament_declaration_var
    (45) stament_declaration_var -> . stament_declaration_var NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO
    (46) stament_declaration_var -> . stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (47) stament_declaration_var -> . stament_declaration_var NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (48) stament_declaration_var -> . stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING
    (49) stament_declaration_var -> . stament_declaration_var NUMERO VARIABLE PIC VARIABLE PUNTO
    (50) stament_declaration_var -> . stament_declaration_var NUMERO VARIABLE PIC NUMERO PUNTO
    (51) stament_declaration_var -> . NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO
    (52) stament_declaration_var -> . NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (53) stament_declaration_var -> . NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (54) stament_declaration_var -> . NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING
    (55) stament_declaration_var -> . NUMERO VARIABLE PIC VARIABLE PUNTO
    (56) stament_declaration_var -> . NUMERO VARIABLE PIC NUMERO PUNTO

    IDENTIFICATION  reduce using rule 37 (data_division_content -> WORKING_STORAGE SECTION PUNTO data_item_entry .)
    ID              reduce using rule 37 (data_division_content -> WORKING_STORAGE SECTION PUNTO data_item_entry .)
    END             reduce using rule 37 (data_division_content -> WORKING_STORAGE SECTION PUNTO data_item_entry .)
    ENVIRONMENT     reduce using rule 37 (data_division_content -> WORKING_STORAGE SECTION PUNTO data_item_entry .)
    DATA            reduce using rule 37 (data_division_content -> WORKING_STORAGE SECTION PUNTO data_item_entry .)
    PROCEDURE       reduce using rule 37 (data_division_content -> WORKING_STORAGE SECTION PUNTO data_item_entry .)
    $end            reduce using rule 37 (data_division_content -> WORKING_STORAGE SECTION PUNTO data_item_entry .)
    NUMERO          shift and go to state 154

    stament_declaration_var        shift and go to state 209

state 152

    (41) data_item_entry -> stament_declaration_var .
    (45) stament_declaration_var -> stament_declaration_var . NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO
    (46) stament_declaration_var -> stament_declaration_var . NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (47) stament_declaration_var -> stament_declaration_var . NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (48) stament_declaration_var -> stament_declaration_var . NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING
    (49) stament_declaration_var -> stament_declaration_var . NUMERO VARIABLE PIC VARIABLE PUNTO
    (50) stament_declaration_var -> stament_declaration_var . NUMERO VARIABLE PIC NUMERO PUNTO

  ! shift/reduce conflict for NUMERO resolved as shift
    IDENTIFICATION  reduce using rule 41 (data_item_entry -> stament_declaration_var .)
    ID              reduce using rule 41 (data_item_entry -> stament_declaration_var .)
    END             reduce using rule 41 (data_item_entry -> stament_declaration_var .)
    ENVIRONMENT     reduce using rule 41 (data_item_entry -> stament_declaration_var .)
    DATA            reduce using rule 41 (data_item_entry -> stament_declaration_var .)
    PROCEDURE       reduce using rule 41 (data_item_entry -> stament_declaration_var .)
    $end            reduce using rule 41 (data_item_entry -> stament_declaration_var .)
    NUMERO          shift and go to state 210

  ! NUMERO          [ reduce using rule 41 (data_item_entry -> stament_declaration_var .) ]


state 153

    (43) data_item_entry -> empty .

    IDENTIFICATION  reduce using rule 43 (data_item_entry -> empty .)
    ID              reduce using rule 43 (data_item_entry -> empty .)
    END             reduce using rule 43 (data_item_entry -> empty .)
    ENVIRONMENT     reduce using rule 43 (data_item_entry -> empty .)
    DATA            reduce using rule 43 (data_item_entry -> empty .)
    PROCEDURE       reduce using rule 43 (data_item_entry -> empty .)
    $end            reduce using rule 43 (data_item_entry -> empty .)
    NUMERO          reduce using rule 43 (data_item_entry -> empty .)


state 154

    (51) stament_declaration_var -> NUMERO . VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO
    (52) stament_declaration_var -> NUMERO . VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (53) stament_declaration_var -> NUMERO . VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (54) stament_declaration_var -> NUMERO . VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING
    (55) stament_declaration_var -> NUMERO . VARIABLE PIC VARIABLE PUNTO
    (56) stament_declaration_var -> NUMERO . VARIABLE PIC NUMERO PUNTO

    VARIABLE        shift and go to state 211


state 155

    (38) data_division_content -> FILE SECTION PUNTO data_file_entry .

    IDENTIFICATION  reduce using rule 38 (data_division_content -> FILE SECTION PUNTO data_file_entry .)
    ID              reduce using rule 38 (data_division_content -> FILE SECTION PUNTO data_file_entry .)
    END             reduce using rule 38 (data_division_content -> FILE SECTION PUNTO data_file_entry .)
    ENVIRONMENT     reduce using rule 38 (data_division_content -> FILE SECTION PUNTO data_file_entry .)
    DATA            reduce using rule 38 (data_division_content -> FILE SECTION PUNTO data_file_entry .)
    PROCEDURE       reduce using rule 38 (data_division_content -> FILE SECTION PUNTO data_file_entry .)
    $end            reduce using rule 38 (data_division_content -> FILE SECTION PUNTO data_file_entry .)


state 156

    (39) data_division_content -> FILE SECTION PUNTO WORKING_STORAGE . SECTION PUNTO data_item_entry

    SECTION         shift and go to state 212


state 157

    (44) data_file_entry -> empty .

    IDENTIFICATION  reduce using rule 44 (data_file_entry -> empty .)
    ID              reduce using rule 44 (data_file_entry -> empty .)
    END             reduce using rule 44 (data_file_entry -> empty .)
    ENVIRONMENT     reduce using rule 44 (data_file_entry -> empty .)
    DATA            reduce using rule 44 (data_file_entry -> empty .)
    PROCEDURE       reduce using rule 44 (data_file_entry -> empty .)
    $end            reduce using rule 44 (data_file_entry -> empty .)


state 158

    (59) procedure_division -> PROCEDURE DIVISION PUNTO paragrahps STOP RUN PUNTO .

    IDENTIFICATION  reduce using rule 59 (procedure_division -> PROCEDURE DIVISION PUNTO paragrahps STOP RUN PUNTO .)
    ID              reduce using rule 59 (procedure_division -> PROCEDURE DIVISION PUNTO paragrahps STOP RUN PUNTO .)
    END             reduce using rule 59 (procedure_division -> PROCEDURE DIVISION PUNTO paragrahps STOP RUN PUNTO .)
    ENVIRONMENT     reduce using rule 59 (procedure_division -> PROCEDURE DIVISION PUNTO paragrahps STOP RUN PUNTO .)
    DATA            reduce using rule 59 (procedure_division -> PROCEDURE DIVISION PUNTO paragrahps STOP RUN PUNTO .)
    PROCEDURE       reduce using rule 59 (procedure_division -> PROCEDURE DIVISION PUNTO paragrahps STOP RUN PUNTO .)
    $end            reduce using rule 59 (procedure_division -> PROCEDURE DIVISION PUNTO paragrahps STOP RUN PUNTO .)


state 159

    (60) procedure_division -> PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps STOP . RUN PUNTO

    RUN             shift and go to state 213


state 160

    (76) stm_display -> DISPLAY STRING PUNTO stm_display .

    IDENTIFICATION  reduce using rule 76 (stm_display -> DISPLAY STRING PUNTO stm_display .)
    ID              reduce using rule 76 (stm_display -> DISPLAY STRING PUNTO stm_display .)
    END             reduce using rule 76 (stm_display -> DISPLAY STRING PUNTO stm_display .)
    ENVIRONMENT     reduce using rule 76 (stm_display -> DISPLAY STRING PUNTO stm_display .)
    DATA            reduce using rule 76 (stm_display -> DISPLAY STRING PUNTO stm_display .)
    PROCEDURE       reduce using rule 76 (stm_display -> DISPLAY STRING PUNTO stm_display .)
    $end            reduce using rule 76 (stm_display -> DISPLAY STRING PUNTO stm_display .)
    STOP            reduce using rule 76 (stm_display -> DISPLAY STRING PUNTO stm_display .)
    DISPLAY         reduce using rule 76 (stm_display -> DISPLAY STRING PUNTO stm_display .)
    ACCEPT          reduce using rule 76 (stm_display -> DISPLAY STRING PUNTO stm_display .)
    ADD             reduce using rule 76 (stm_display -> DISPLAY STRING PUNTO stm_display .)
    DIVIDE          reduce using rule 76 (stm_display -> DISPLAY STRING PUNTO stm_display .)
    MULTIPLY        reduce using rule 76 (stm_display -> DISPLAY STRING PUNTO stm_display .)
    SUBTRACT        reduce using rule 76 (stm_display -> DISPLAY STRING PUNTO stm_display .)
    IF              reduce using rule 76 (stm_display -> DISPLAY STRING PUNTO stm_display .)
    ELSE            reduce using rule 76 (stm_display -> DISPLAY STRING PUNTO stm_display .)
    END_IF          reduce using rule 76 (stm_display -> DISPLAY STRING PUNTO stm_display .)


state 161

    (72) stm_display -> DISPLAY STRING VARIABLE PUNTO .
    (78) stm_display -> DISPLAY STRING VARIABLE PUNTO . stm_display
    (71) stm_display -> . DISPLAY STRING PUNTO
    (72) stm_display -> . DISPLAY STRING VARIABLE PUNTO
    (73) stm_display -> . DISPLAY STRING WITH NO ADVANCING PUNTO
    (74) stm_display -> . DISPLAY VARIABLE STRING PUNTO
    (75) stm_display -> . DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO
    (76) stm_display -> . DISPLAY STRING PUNTO stm_display
    (77) stm_display -> . DISPLAY STRING WITH NO ADVANCING PUNTO stm_display
    (78) stm_display -> . DISPLAY STRING VARIABLE PUNTO stm_display
    (79) stm_display -> . DISPLAY VARIABLE STRING PUNTO stm_display
    (80) stm_display -> . DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display

  ! shift/reduce conflict for DISPLAY resolved as shift
    IDENTIFICATION  reduce using rule 72 (stm_display -> DISPLAY STRING VARIABLE PUNTO .)
    ID              reduce using rule 72 (stm_display -> DISPLAY STRING VARIABLE PUNTO .)
    END             reduce using rule 72 (stm_display -> DISPLAY STRING VARIABLE PUNTO .)
    ENVIRONMENT     reduce using rule 72 (stm_display -> DISPLAY STRING VARIABLE PUNTO .)
    DATA            reduce using rule 72 (stm_display -> DISPLAY STRING VARIABLE PUNTO .)
    PROCEDURE       reduce using rule 72 (stm_display -> DISPLAY STRING VARIABLE PUNTO .)
    $end            reduce using rule 72 (stm_display -> DISPLAY STRING VARIABLE PUNTO .)
    STOP            reduce using rule 72 (stm_display -> DISPLAY STRING VARIABLE PUNTO .)
    ACCEPT          reduce using rule 72 (stm_display -> DISPLAY STRING VARIABLE PUNTO .)
    ADD             reduce using rule 72 (stm_display -> DISPLAY STRING VARIABLE PUNTO .)
    DIVIDE          reduce using rule 72 (stm_display -> DISPLAY STRING VARIABLE PUNTO .)
    MULTIPLY        reduce using rule 72 (stm_display -> DISPLAY STRING VARIABLE PUNTO .)
    SUBTRACT        reduce using rule 72 (stm_display -> DISPLAY STRING VARIABLE PUNTO .)
    IF              reduce using rule 72 (stm_display -> DISPLAY STRING VARIABLE PUNTO .)
    ELSE            reduce using rule 72 (stm_display -> DISPLAY STRING VARIABLE PUNTO .)
    END_IF          reduce using rule 72 (stm_display -> DISPLAY STRING VARIABLE PUNTO .)
    DISPLAY         shift and go to state 61

  ! DISPLAY         [ reduce using rule 72 (stm_display -> DISPLAY STRING VARIABLE PUNTO .) ]

    stm_display                    shift and go to state 214

state 162

    (73) stm_display -> DISPLAY STRING WITH NO . ADVANCING PUNTO
    (77) stm_display -> DISPLAY STRING WITH NO . ADVANCING PUNTO stm_display

    ADVANCING       shift and go to state 215


state 163

    (75) stm_display -> DISPLAY STRING FUNCTION LENGTH . PARENT_IZQ VARIABLE PARENT_DER PUNTO
    (80) stm_display -> DISPLAY STRING FUNCTION LENGTH . PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display

    PARENT_IZQ      shift and go to state 216


state 164

    (74) stm_display -> DISPLAY VARIABLE STRING PUNTO .
    (79) stm_display -> DISPLAY VARIABLE STRING PUNTO . stm_display
    (71) stm_display -> . DISPLAY STRING PUNTO
    (72) stm_display -> . DISPLAY STRING VARIABLE PUNTO
    (73) stm_display -> . DISPLAY STRING WITH NO ADVANCING PUNTO
    (74) stm_display -> . DISPLAY VARIABLE STRING PUNTO
    (75) stm_display -> . DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO
    (76) stm_display -> . DISPLAY STRING PUNTO stm_display
    (77) stm_display -> . DISPLAY STRING WITH NO ADVANCING PUNTO stm_display
    (78) stm_display -> . DISPLAY STRING VARIABLE PUNTO stm_display
    (79) stm_display -> . DISPLAY VARIABLE STRING PUNTO stm_display
    (80) stm_display -> . DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display

  ! shift/reduce conflict for DISPLAY resolved as shift
    IDENTIFICATION  reduce using rule 74 (stm_display -> DISPLAY VARIABLE STRING PUNTO .)
    ID              reduce using rule 74 (stm_display -> DISPLAY VARIABLE STRING PUNTO .)
    END             reduce using rule 74 (stm_display -> DISPLAY VARIABLE STRING PUNTO .)
    ENVIRONMENT     reduce using rule 74 (stm_display -> DISPLAY VARIABLE STRING PUNTO .)
    DATA            reduce using rule 74 (stm_display -> DISPLAY VARIABLE STRING PUNTO .)
    PROCEDURE       reduce using rule 74 (stm_display -> DISPLAY VARIABLE STRING PUNTO .)
    $end            reduce using rule 74 (stm_display -> DISPLAY VARIABLE STRING PUNTO .)
    STOP            reduce using rule 74 (stm_display -> DISPLAY VARIABLE STRING PUNTO .)
    ACCEPT          reduce using rule 74 (stm_display -> DISPLAY VARIABLE STRING PUNTO .)
    ADD             reduce using rule 74 (stm_display -> DISPLAY VARIABLE STRING PUNTO .)
    DIVIDE          reduce using rule 74 (stm_display -> DISPLAY VARIABLE STRING PUNTO .)
    MULTIPLY        reduce using rule 74 (stm_display -> DISPLAY VARIABLE STRING PUNTO .)
    SUBTRACT        reduce using rule 74 (stm_display -> DISPLAY VARIABLE STRING PUNTO .)
    IF              reduce using rule 74 (stm_display -> DISPLAY VARIABLE STRING PUNTO .)
    ELSE            reduce using rule 74 (stm_display -> DISPLAY VARIABLE STRING PUNTO .)
    END_IF          reduce using rule 74 (stm_display -> DISPLAY VARIABLE STRING PUNTO .)
    DISPLAY         shift and go to state 61

  ! DISPLAY         [ reduce using rule 74 (stm_display -> DISPLAY VARIABLE STRING PUNTO .) ]

    stm_display                    shift and go to state 217

state 165

    (82) stm_acept -> ACCEPT VARIABLE PUNTO stm_acept .

    IDENTIFICATION  reduce using rule 82 (stm_acept -> ACCEPT VARIABLE PUNTO stm_acept .)
    ID              reduce using rule 82 (stm_acept -> ACCEPT VARIABLE PUNTO stm_acept .)
    END             reduce using rule 82 (stm_acept -> ACCEPT VARIABLE PUNTO stm_acept .)
    ENVIRONMENT     reduce using rule 82 (stm_acept -> ACCEPT VARIABLE PUNTO stm_acept .)
    DATA            reduce using rule 82 (stm_acept -> ACCEPT VARIABLE PUNTO stm_acept .)
    PROCEDURE       reduce using rule 82 (stm_acept -> ACCEPT VARIABLE PUNTO stm_acept .)
    $end            reduce using rule 82 (stm_acept -> ACCEPT VARIABLE PUNTO stm_acept .)
    STOP            reduce using rule 82 (stm_acept -> ACCEPT VARIABLE PUNTO stm_acept .)
    DISPLAY         reduce using rule 82 (stm_acept -> ACCEPT VARIABLE PUNTO stm_acept .)
    ACCEPT          reduce using rule 82 (stm_acept -> ACCEPT VARIABLE PUNTO stm_acept .)
    ADD             reduce using rule 82 (stm_acept -> ACCEPT VARIABLE PUNTO stm_acept .)
    DIVIDE          reduce using rule 82 (stm_acept -> ACCEPT VARIABLE PUNTO stm_acept .)
    MULTIPLY        reduce using rule 82 (stm_acept -> ACCEPT VARIABLE PUNTO stm_acept .)
    SUBTRACT        reduce using rule 82 (stm_acept -> ACCEPT VARIABLE PUNTO stm_acept .)
    IF              reduce using rule 82 (stm_acept -> ACCEPT VARIABLE PUNTO stm_acept .)
    ELSE            reduce using rule 82 (stm_acept -> ACCEPT VARIABLE PUNTO stm_acept .)
    END_IF          reduce using rule 82 (stm_acept -> ACCEPT VARIABLE PUNTO stm_acept .)


state 166

    (83) stm_add -> ADD VARIABLE TO VARIABLE . GIVING VARIABLE PUNTO
    (84) stm_add -> ADD VARIABLE TO VARIABLE . PUNTO

    GIVING          shift and go to state 218
    PUNTO           shift and go to state 219


state 167

    (85) stm_divide -> DIVIDE VARIABLE INTO VARIABLE . GIVING VARIABLE PUNTO
    (86) stm_divide -> DIVIDE VARIABLE INTO VARIABLE . PUNTO

    GIVING          shift and go to state 220
    PUNTO           shift and go to state 221


state 168

    (87) stm_multiply -> MULTIPLY VARIABLE BY VARIABLE . GIVING VARIABLE PUNTO
    (88) stm_multiply -> MULTIPLY VARIABLE BY VARIABLE . PUNTO

    GIVING          shift and go to state 222
    PUNTO           shift and go to state 223


state 169

    (89) stm_minus -> SUBTRACT VARIABLE FROM VARIABLE . GIVING VARIABLE PUNTO
    (90) stm_minus -> SUBTRACT VARIABLE FROM VARIABLE . PUNTO

    GIVING          shift and go to state 224
    PUNTO           shift and go to state 225


state 170

    (91) if_statement -> IF conditional ifthen ifelse . END_IF
    (93) if_statement -> IF conditional ifthen ifelse .

  ! shift/reduce conflict for END_IF resolved as shift
    END_IF          shift and go to state 226
    IDENTIFICATION  reduce using rule 93 (if_statement -> IF conditional ifthen ifelse .)
    ID              reduce using rule 93 (if_statement -> IF conditional ifthen ifelse .)
    END             reduce using rule 93 (if_statement -> IF conditional ifthen ifelse .)
    ENVIRONMENT     reduce using rule 93 (if_statement -> IF conditional ifthen ifelse .)
    DATA            reduce using rule 93 (if_statement -> IF conditional ifthen ifelse .)
    PROCEDURE       reduce using rule 93 (if_statement -> IF conditional ifthen ifelse .)
    $end            reduce using rule 93 (if_statement -> IF conditional ifthen ifelse .)
    STOP            reduce using rule 93 (if_statement -> IF conditional ifthen ifelse .)
    DISPLAY         reduce using rule 93 (if_statement -> IF conditional ifthen ifelse .)
    ACCEPT          reduce using rule 93 (if_statement -> IF conditional ifthen ifelse .)
    ADD             reduce using rule 93 (if_statement -> IF conditional ifthen ifelse .)
    DIVIDE          reduce using rule 93 (if_statement -> IF conditional ifthen ifelse .)
    MULTIPLY        reduce using rule 93 (if_statement -> IF conditional ifthen ifelse .)
    SUBTRACT        reduce using rule 93 (if_statement -> IF conditional ifthen ifelse .)
    IF              reduce using rule 93 (if_statement -> IF conditional ifthen ifelse .)
    ELSE            reduce using rule 93 (if_statement -> IF conditional ifthen ifelse .)

  ! END_IF          [ reduce using rule 93 (if_statement -> IF conditional ifthen ifelse .) ]


state 171

    (94) if_statement -> IF conditional ifthen END_IF .

    IDENTIFICATION  reduce using rule 94 (if_statement -> IF conditional ifthen END_IF .)
    ID              reduce using rule 94 (if_statement -> IF conditional ifthen END_IF .)
    END             reduce using rule 94 (if_statement -> IF conditional ifthen END_IF .)
    ENVIRONMENT     reduce using rule 94 (if_statement -> IF conditional ifthen END_IF .)
    DATA            reduce using rule 94 (if_statement -> IF conditional ifthen END_IF .)
    PROCEDURE       reduce using rule 94 (if_statement -> IF conditional ifthen END_IF .)
    $end            reduce using rule 94 (if_statement -> IF conditional ifthen END_IF .)
    STOP            reduce using rule 94 (if_statement -> IF conditional ifthen END_IF .)
    DISPLAY         reduce using rule 94 (if_statement -> IF conditional ifthen END_IF .)
    ACCEPT          reduce using rule 94 (if_statement -> IF conditional ifthen END_IF .)
    ADD             reduce using rule 94 (if_statement -> IF conditional ifthen END_IF .)
    DIVIDE          reduce using rule 94 (if_statement -> IF conditional ifthen END_IF .)
    MULTIPLY        reduce using rule 94 (if_statement -> IF conditional ifthen END_IF .)
    SUBTRACT        reduce using rule 94 (if_statement -> IF conditional ifthen END_IF .)
    IF              reduce using rule 94 (if_statement -> IF conditional ifthen END_IF .)
    ELSE            reduce using rule 94 (if_statement -> IF conditional ifthen END_IF .)
    END_IF          reduce using rule 94 (if_statement -> IF conditional ifthen END_IF .)


state 172

    (99) ifelse -> ELSE . NEXT SENTENCE
    (100) ifelse -> ELSE . statements
    (64) statements -> . stm_display
    (65) statements -> . stm_acept
    (66) statements -> . stm_add
    (67) statements -> . stm_divide
    (68) statements -> . stm_multiply
    (69) statements -> . stm_minus
    (70) statements -> . if_statement
    (71) stm_display -> . DISPLAY STRING PUNTO
    (72) stm_display -> . DISPLAY STRING VARIABLE PUNTO
    (73) stm_display -> . DISPLAY STRING WITH NO ADVANCING PUNTO
    (74) stm_display -> . DISPLAY VARIABLE STRING PUNTO
    (75) stm_display -> . DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO
    (76) stm_display -> . DISPLAY STRING PUNTO stm_display
    (77) stm_display -> . DISPLAY STRING WITH NO ADVANCING PUNTO stm_display
    (78) stm_display -> . DISPLAY STRING VARIABLE PUNTO stm_display
    (79) stm_display -> . DISPLAY VARIABLE STRING PUNTO stm_display
    (80) stm_display -> . DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display
    (81) stm_acept -> . ACCEPT VARIABLE PUNTO
    (82) stm_acept -> . ACCEPT VARIABLE PUNTO stm_acept
    (83) stm_add -> . ADD VARIABLE TO VARIABLE GIVING VARIABLE PUNTO
    (84) stm_add -> . ADD VARIABLE TO VARIABLE PUNTO
    (85) stm_divide -> . DIVIDE VARIABLE INTO VARIABLE GIVING VARIABLE PUNTO
    (86) stm_divide -> . DIVIDE VARIABLE INTO VARIABLE PUNTO
    (87) stm_multiply -> . MULTIPLY VARIABLE BY VARIABLE GIVING VARIABLE PUNTO
    (88) stm_multiply -> . MULTIPLY VARIABLE BY VARIABLE PUNTO
    (89) stm_minus -> . SUBTRACT VARIABLE FROM VARIABLE GIVING VARIABLE PUNTO
    (90) stm_minus -> . SUBTRACT VARIABLE FROM VARIABLE PUNTO
    (91) if_statement -> . IF conditional ifthen ifelse END_IF
    (92) if_statement -> . IF conditional ifthen
    (93) if_statement -> . IF conditional ifthen ifelse
    (94) if_statement -> . IF conditional ifthen END_IF

    NEXT            shift and go to state 227
    DISPLAY         shift and go to state 61
    ACCEPT          shift and go to state 62
    ADD             shift and go to state 63
    DIVIDE          shift and go to state 64
    MULTIPLY        shift and go to state 65
    SUBTRACT        shift and go to state 66
    IF              shift and go to state 67

    statements                     shift and go to state 228
    stm_display                    shift and go to state 54
    stm_acept                      shift and go to state 55
    stm_add                        shift and go to state 56
    stm_divide                     shift and go to state 57
    stm_multiply                   shift and go to state 58
    stm_minus                      shift and go to state 59
    if_statement                   shift and go to state 60

state 173

    (95) ifthen -> THEN NEXT . SENTENCE

    SENTENCE        shift and go to state 229


state 174

    (96) ifthen -> THEN statements .

    ELSE            reduce using rule 96 (ifthen -> THEN statements .)
    IDENTIFICATION  reduce using rule 96 (ifthen -> THEN statements .)
    ID              reduce using rule 96 (ifthen -> THEN statements .)
    END             reduce using rule 96 (ifthen -> THEN statements .)
    ENVIRONMENT     reduce using rule 96 (ifthen -> THEN statements .)
    DATA            reduce using rule 96 (ifthen -> THEN statements .)
    PROCEDURE       reduce using rule 96 (ifthen -> THEN statements .)
    $end            reduce using rule 96 (ifthen -> THEN statements .)
    STOP            reduce using rule 96 (ifthen -> THEN statements .)
    DISPLAY         reduce using rule 96 (ifthen -> THEN statements .)
    ACCEPT          reduce using rule 96 (ifthen -> THEN statements .)
    ADD             reduce using rule 96 (ifthen -> THEN statements .)
    DIVIDE          reduce using rule 96 (ifthen -> THEN statements .)
    MULTIPLY        reduce using rule 96 (ifthen -> THEN statements .)
    SUBTRACT        reduce using rule 96 (ifthen -> THEN statements .)
    IF              reduce using rule 96 (ifthen -> THEN statements .)
    END_IF          reduce using rule 96 (ifthen -> THEN statements .)


state 175

    (98) ifthen -> NEXT SENTENCE .

    ELSE            reduce using rule 98 (ifthen -> NEXT SENTENCE .)
    IDENTIFICATION  reduce using rule 98 (ifthen -> NEXT SENTENCE .)
    ID              reduce using rule 98 (ifthen -> NEXT SENTENCE .)
    END             reduce using rule 98 (ifthen -> NEXT SENTENCE .)
    ENVIRONMENT     reduce using rule 98 (ifthen -> NEXT SENTENCE .)
    DATA            reduce using rule 98 (ifthen -> NEXT SENTENCE .)
    PROCEDURE       reduce using rule 98 (ifthen -> NEXT SENTENCE .)
    $end            reduce using rule 98 (ifthen -> NEXT SENTENCE .)
    STOP            reduce using rule 98 (ifthen -> NEXT SENTENCE .)
    DISPLAY         reduce using rule 98 (ifthen -> NEXT SENTENCE .)
    ACCEPT          reduce using rule 98 (ifthen -> NEXT SENTENCE .)
    ADD             reduce using rule 98 (ifthen -> NEXT SENTENCE .)
    DIVIDE          reduce using rule 98 (ifthen -> NEXT SENTENCE .)
    MULTIPLY        reduce using rule 98 (ifthen -> NEXT SENTENCE .)
    SUBTRACT        reduce using rule 98 (ifthen -> NEXT SENTENCE .)
    IF              reduce using rule 98 (ifthen -> NEXT SENTENCE .)
    END_IF          reduce using rule 98 (ifthen -> NEXT SENTENCE .)


state 176

    (101) conditional -> PARENT_IZQ aritmeticExpresion PARENT_DER .

    THEN            reduce using rule 101 (conditional -> PARENT_IZQ aritmeticExpresion PARENT_DER .)
    NEXT            reduce using rule 101 (conditional -> PARENT_IZQ aritmeticExpresion PARENT_DER .)
    DISPLAY         reduce using rule 101 (conditional -> PARENT_IZQ aritmeticExpresion PARENT_DER .)
    ACCEPT          reduce using rule 101 (conditional -> PARENT_IZQ aritmeticExpresion PARENT_DER .)
    ADD             reduce using rule 101 (conditional -> PARENT_IZQ aritmeticExpresion PARENT_DER .)
    DIVIDE          reduce using rule 101 (conditional -> PARENT_IZQ aritmeticExpresion PARENT_DER .)
    MULTIPLY        reduce using rule 101 (conditional -> PARENT_IZQ aritmeticExpresion PARENT_DER .)
    SUBTRACT        reduce using rule 101 (conditional -> PARENT_IZQ aritmeticExpresion PARENT_DER .)
    IF              reduce using rule 101 (conditional -> PARENT_IZQ aritmeticExpresion PARENT_DER .)


state 177

    (102) conditional -> PARENT_IZQ logicExpresion PARENT_DER .

    THEN            reduce using rule 102 (conditional -> PARENT_IZQ logicExpresion PARENT_DER .)
    NEXT            reduce using rule 102 (conditional -> PARENT_IZQ logicExpresion PARENT_DER .)
    DISPLAY         reduce using rule 102 (conditional -> PARENT_IZQ logicExpresion PARENT_DER .)
    ACCEPT          reduce using rule 102 (conditional -> PARENT_IZQ logicExpresion PARENT_DER .)
    ADD             reduce using rule 102 (conditional -> PARENT_IZQ logicExpresion PARENT_DER .)
    DIVIDE          reduce using rule 102 (conditional -> PARENT_IZQ logicExpresion PARENT_DER .)
    MULTIPLY        reduce using rule 102 (conditional -> PARENT_IZQ logicExpresion PARENT_DER .)
    SUBTRACT        reduce using rule 102 (conditional -> PARENT_IZQ logicExpresion PARENT_DER .)
    IF              reduce using rule 102 (conditional -> PARENT_IZQ logicExpresion PARENT_DER .)


state 178

    (120) logicExpresion -> aritmeticExpresion AND aritmeticExpresion .

    PARENT_DER      reduce using rule 120 (logicExpresion -> aritmeticExpresion AND aritmeticExpresion .)
    THEN            reduce using rule 120 (logicExpresion -> aritmeticExpresion AND aritmeticExpresion .)
    NEXT            reduce using rule 120 (logicExpresion -> aritmeticExpresion AND aritmeticExpresion .)
    DISPLAY         reduce using rule 120 (logicExpresion -> aritmeticExpresion AND aritmeticExpresion .)
    ACCEPT          reduce using rule 120 (logicExpresion -> aritmeticExpresion AND aritmeticExpresion .)
    ADD             reduce using rule 120 (logicExpresion -> aritmeticExpresion AND aritmeticExpresion .)
    DIVIDE          reduce using rule 120 (logicExpresion -> aritmeticExpresion AND aritmeticExpresion .)
    MULTIPLY        reduce using rule 120 (logicExpresion -> aritmeticExpresion AND aritmeticExpresion .)
    SUBTRACT        reduce using rule 120 (logicExpresion -> aritmeticExpresion AND aritmeticExpresion .)
    IF              reduce using rule 120 (logicExpresion -> aritmeticExpresion AND aritmeticExpresion .)
    OR              reduce using rule 120 (logicExpresion -> aritmeticExpresion AND aritmeticExpresion .)
    AND             reduce using rule 120 (logicExpresion -> aritmeticExpresion AND aritmeticExpresion .)


state 179

    (121) logicExpresion -> aritmeticExpresion OR aritmeticExpresion .

    PARENT_DER      reduce using rule 121 (logicExpresion -> aritmeticExpresion OR aritmeticExpresion .)
    THEN            reduce using rule 121 (logicExpresion -> aritmeticExpresion OR aritmeticExpresion .)
    NEXT            reduce using rule 121 (logicExpresion -> aritmeticExpresion OR aritmeticExpresion .)
    DISPLAY         reduce using rule 121 (logicExpresion -> aritmeticExpresion OR aritmeticExpresion .)
    ACCEPT          reduce using rule 121 (logicExpresion -> aritmeticExpresion OR aritmeticExpresion .)
    ADD             reduce using rule 121 (logicExpresion -> aritmeticExpresion OR aritmeticExpresion .)
    DIVIDE          reduce using rule 121 (logicExpresion -> aritmeticExpresion OR aritmeticExpresion .)
    MULTIPLY        reduce using rule 121 (logicExpresion -> aritmeticExpresion OR aritmeticExpresion .)
    SUBTRACT        reduce using rule 121 (logicExpresion -> aritmeticExpresion OR aritmeticExpresion .)
    IF              reduce using rule 121 (logicExpresion -> aritmeticExpresion OR aritmeticExpresion .)
    OR              reduce using rule 121 (logicExpresion -> aritmeticExpresion OR aritmeticExpresion .)
    AND             reduce using rule 121 (logicExpresion -> aritmeticExpresion OR aritmeticExpresion .)


state 180

    (122) logicExpresion -> logicExpresion OR logicExpresion .
    (122) logicExpresion -> logicExpresion . OR logicExpresion
    (123) logicExpresion -> logicExpresion . AND logicExpresion

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    PARENT_DER      reduce using rule 122 (logicExpresion -> logicExpresion OR logicExpresion .)
    THEN            reduce using rule 122 (logicExpresion -> logicExpresion OR logicExpresion .)
    NEXT            reduce using rule 122 (logicExpresion -> logicExpresion OR logicExpresion .)
    DISPLAY         reduce using rule 122 (logicExpresion -> logicExpresion OR logicExpresion .)
    ACCEPT          reduce using rule 122 (logicExpresion -> logicExpresion OR logicExpresion .)
    ADD             reduce using rule 122 (logicExpresion -> logicExpresion OR logicExpresion .)
    DIVIDE          reduce using rule 122 (logicExpresion -> logicExpresion OR logicExpresion .)
    MULTIPLY        reduce using rule 122 (logicExpresion -> logicExpresion OR logicExpresion .)
    SUBTRACT        reduce using rule 122 (logicExpresion -> logicExpresion OR logicExpresion .)
    IF              reduce using rule 122 (logicExpresion -> logicExpresion OR logicExpresion .)
    OR              shift and go to state 126
    AND             shift and go to state 127

  ! OR              [ reduce using rule 122 (logicExpresion -> logicExpresion OR logicExpresion .) ]
  ! AND             [ reduce using rule 122 (logicExpresion -> logicExpresion OR logicExpresion .) ]


state 181

    (120) logicExpresion -> aritmeticExpresion . AND aritmeticExpresion
    (121) logicExpresion -> aritmeticExpresion . OR aritmeticExpresion

    AND             shift and go to state 124
    OR              shift and go to state 125


state 182

    (123) logicExpresion -> logicExpresion AND logicExpresion .
    (122) logicExpresion -> logicExpresion . OR logicExpresion
    (123) logicExpresion -> logicExpresion . AND logicExpresion

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    PARENT_DER      reduce using rule 123 (logicExpresion -> logicExpresion AND logicExpresion .)
    THEN            reduce using rule 123 (logicExpresion -> logicExpresion AND logicExpresion .)
    NEXT            reduce using rule 123 (logicExpresion -> logicExpresion AND logicExpresion .)
    DISPLAY         reduce using rule 123 (logicExpresion -> logicExpresion AND logicExpresion .)
    ACCEPT          reduce using rule 123 (logicExpresion -> logicExpresion AND logicExpresion .)
    ADD             reduce using rule 123 (logicExpresion -> logicExpresion AND logicExpresion .)
    DIVIDE          reduce using rule 123 (logicExpresion -> logicExpresion AND logicExpresion .)
    MULTIPLY        reduce using rule 123 (logicExpresion -> logicExpresion AND logicExpresion .)
    SUBTRACT        reduce using rule 123 (logicExpresion -> logicExpresion AND logicExpresion .)
    IF              reduce using rule 123 (logicExpresion -> logicExpresion AND logicExpresion .)
    OR              shift and go to state 126
    AND             shift and go to state 127

  ! OR              [ reduce using rule 123 (logicExpresion -> logicExpresion AND logicExpresion .) ]
  ! AND             [ reduce using rule 123 (logicExpresion -> logicExpresion AND logicExpresion .) ]


state 183

    (105) aritmeticExpresion -> VARIABLE MENOR_IGUAL VARIABLE .

    PARENT_DER      reduce using rule 105 (aritmeticExpresion -> VARIABLE MENOR_IGUAL VARIABLE .)
    THEN            reduce using rule 105 (aritmeticExpresion -> VARIABLE MENOR_IGUAL VARIABLE .)
    NEXT            reduce using rule 105 (aritmeticExpresion -> VARIABLE MENOR_IGUAL VARIABLE .)
    DISPLAY         reduce using rule 105 (aritmeticExpresion -> VARIABLE MENOR_IGUAL VARIABLE .)
    ACCEPT          reduce using rule 105 (aritmeticExpresion -> VARIABLE MENOR_IGUAL VARIABLE .)
    ADD             reduce using rule 105 (aritmeticExpresion -> VARIABLE MENOR_IGUAL VARIABLE .)
    DIVIDE          reduce using rule 105 (aritmeticExpresion -> VARIABLE MENOR_IGUAL VARIABLE .)
    MULTIPLY        reduce using rule 105 (aritmeticExpresion -> VARIABLE MENOR_IGUAL VARIABLE .)
    SUBTRACT        reduce using rule 105 (aritmeticExpresion -> VARIABLE MENOR_IGUAL VARIABLE .)
    IF              reduce using rule 105 (aritmeticExpresion -> VARIABLE MENOR_IGUAL VARIABLE .)
    AND             reduce using rule 105 (aritmeticExpresion -> VARIABLE MENOR_IGUAL VARIABLE .)
    OR              reduce using rule 105 (aritmeticExpresion -> VARIABLE MENOR_IGUAL VARIABLE .)


state 184

    (110) aritmeticExpresion -> VARIABLE MENOR_IGUAL NUMERO .

    PARENT_DER      reduce using rule 110 (aritmeticExpresion -> VARIABLE MENOR_IGUAL NUMERO .)
    THEN            reduce using rule 110 (aritmeticExpresion -> VARIABLE MENOR_IGUAL NUMERO .)
    NEXT            reduce using rule 110 (aritmeticExpresion -> VARIABLE MENOR_IGUAL NUMERO .)
    DISPLAY         reduce using rule 110 (aritmeticExpresion -> VARIABLE MENOR_IGUAL NUMERO .)
    ACCEPT          reduce using rule 110 (aritmeticExpresion -> VARIABLE MENOR_IGUAL NUMERO .)
    ADD             reduce using rule 110 (aritmeticExpresion -> VARIABLE MENOR_IGUAL NUMERO .)
    DIVIDE          reduce using rule 110 (aritmeticExpresion -> VARIABLE MENOR_IGUAL NUMERO .)
    MULTIPLY        reduce using rule 110 (aritmeticExpresion -> VARIABLE MENOR_IGUAL NUMERO .)
    SUBTRACT        reduce using rule 110 (aritmeticExpresion -> VARIABLE MENOR_IGUAL NUMERO .)
    IF              reduce using rule 110 (aritmeticExpresion -> VARIABLE MENOR_IGUAL NUMERO .)
    AND             reduce using rule 110 (aritmeticExpresion -> VARIABLE MENOR_IGUAL NUMERO .)
    OR              reduce using rule 110 (aritmeticExpresion -> VARIABLE MENOR_IGUAL NUMERO .)


state 185

    (106) aritmeticExpresion -> VARIABLE MAYOR_IGUAL VARIABLE .

    PARENT_DER      reduce using rule 106 (aritmeticExpresion -> VARIABLE MAYOR_IGUAL VARIABLE .)
    THEN            reduce using rule 106 (aritmeticExpresion -> VARIABLE MAYOR_IGUAL VARIABLE .)
    NEXT            reduce using rule 106 (aritmeticExpresion -> VARIABLE MAYOR_IGUAL VARIABLE .)
    DISPLAY         reduce using rule 106 (aritmeticExpresion -> VARIABLE MAYOR_IGUAL VARIABLE .)
    ACCEPT          reduce using rule 106 (aritmeticExpresion -> VARIABLE MAYOR_IGUAL VARIABLE .)
    ADD             reduce using rule 106 (aritmeticExpresion -> VARIABLE MAYOR_IGUAL VARIABLE .)
    DIVIDE          reduce using rule 106 (aritmeticExpresion -> VARIABLE MAYOR_IGUAL VARIABLE .)
    MULTIPLY        reduce using rule 106 (aritmeticExpresion -> VARIABLE MAYOR_IGUAL VARIABLE .)
    SUBTRACT        reduce using rule 106 (aritmeticExpresion -> VARIABLE MAYOR_IGUAL VARIABLE .)
    IF              reduce using rule 106 (aritmeticExpresion -> VARIABLE MAYOR_IGUAL VARIABLE .)
    AND             reduce using rule 106 (aritmeticExpresion -> VARIABLE MAYOR_IGUAL VARIABLE .)
    OR              reduce using rule 106 (aritmeticExpresion -> VARIABLE MAYOR_IGUAL VARIABLE .)


state 186

    (111) aritmeticExpresion -> VARIABLE MAYOR_IGUAL NUMERO .

    PARENT_DER      reduce using rule 111 (aritmeticExpresion -> VARIABLE MAYOR_IGUAL NUMERO .)
    THEN            reduce using rule 111 (aritmeticExpresion -> VARIABLE MAYOR_IGUAL NUMERO .)
    NEXT            reduce using rule 111 (aritmeticExpresion -> VARIABLE MAYOR_IGUAL NUMERO .)
    DISPLAY         reduce using rule 111 (aritmeticExpresion -> VARIABLE MAYOR_IGUAL NUMERO .)
    ACCEPT          reduce using rule 111 (aritmeticExpresion -> VARIABLE MAYOR_IGUAL NUMERO .)
    ADD             reduce using rule 111 (aritmeticExpresion -> VARIABLE MAYOR_IGUAL NUMERO .)
    DIVIDE          reduce using rule 111 (aritmeticExpresion -> VARIABLE MAYOR_IGUAL NUMERO .)
    MULTIPLY        reduce using rule 111 (aritmeticExpresion -> VARIABLE MAYOR_IGUAL NUMERO .)
    SUBTRACT        reduce using rule 111 (aritmeticExpresion -> VARIABLE MAYOR_IGUAL NUMERO .)
    IF              reduce using rule 111 (aritmeticExpresion -> VARIABLE MAYOR_IGUAL NUMERO .)
    AND             reduce using rule 111 (aritmeticExpresion -> VARIABLE MAYOR_IGUAL NUMERO .)
    OR              reduce using rule 111 (aritmeticExpresion -> VARIABLE MAYOR_IGUAL NUMERO .)


state 187

    (107) aritmeticExpresion -> VARIABLE ES_IGUAL VARIABLE .

    PARENT_DER      reduce using rule 107 (aritmeticExpresion -> VARIABLE ES_IGUAL VARIABLE .)
    THEN            reduce using rule 107 (aritmeticExpresion -> VARIABLE ES_IGUAL VARIABLE .)
    NEXT            reduce using rule 107 (aritmeticExpresion -> VARIABLE ES_IGUAL VARIABLE .)
    DISPLAY         reduce using rule 107 (aritmeticExpresion -> VARIABLE ES_IGUAL VARIABLE .)
    ACCEPT          reduce using rule 107 (aritmeticExpresion -> VARIABLE ES_IGUAL VARIABLE .)
    ADD             reduce using rule 107 (aritmeticExpresion -> VARIABLE ES_IGUAL VARIABLE .)
    DIVIDE          reduce using rule 107 (aritmeticExpresion -> VARIABLE ES_IGUAL VARIABLE .)
    MULTIPLY        reduce using rule 107 (aritmeticExpresion -> VARIABLE ES_IGUAL VARIABLE .)
    SUBTRACT        reduce using rule 107 (aritmeticExpresion -> VARIABLE ES_IGUAL VARIABLE .)
    IF              reduce using rule 107 (aritmeticExpresion -> VARIABLE ES_IGUAL VARIABLE .)
    AND             reduce using rule 107 (aritmeticExpresion -> VARIABLE ES_IGUAL VARIABLE .)
    OR              reduce using rule 107 (aritmeticExpresion -> VARIABLE ES_IGUAL VARIABLE .)


state 188

    (112) aritmeticExpresion -> VARIABLE ES_IGUAL NUMERO .

    PARENT_DER      reduce using rule 112 (aritmeticExpresion -> VARIABLE ES_IGUAL NUMERO .)
    THEN            reduce using rule 112 (aritmeticExpresion -> VARIABLE ES_IGUAL NUMERO .)
    NEXT            reduce using rule 112 (aritmeticExpresion -> VARIABLE ES_IGUAL NUMERO .)
    DISPLAY         reduce using rule 112 (aritmeticExpresion -> VARIABLE ES_IGUAL NUMERO .)
    ACCEPT          reduce using rule 112 (aritmeticExpresion -> VARIABLE ES_IGUAL NUMERO .)
    ADD             reduce using rule 112 (aritmeticExpresion -> VARIABLE ES_IGUAL NUMERO .)
    DIVIDE          reduce using rule 112 (aritmeticExpresion -> VARIABLE ES_IGUAL NUMERO .)
    MULTIPLY        reduce using rule 112 (aritmeticExpresion -> VARIABLE ES_IGUAL NUMERO .)
    SUBTRACT        reduce using rule 112 (aritmeticExpresion -> VARIABLE ES_IGUAL NUMERO .)
    IF              reduce using rule 112 (aritmeticExpresion -> VARIABLE ES_IGUAL NUMERO .)
    AND             reduce using rule 112 (aritmeticExpresion -> VARIABLE ES_IGUAL NUMERO .)
    OR              reduce using rule 112 (aritmeticExpresion -> VARIABLE ES_IGUAL NUMERO .)


state 189

    (108) aritmeticExpresion -> VARIABLE MENOR_QUE VARIABLE .

    PARENT_DER      reduce using rule 108 (aritmeticExpresion -> VARIABLE MENOR_QUE VARIABLE .)
    THEN            reduce using rule 108 (aritmeticExpresion -> VARIABLE MENOR_QUE VARIABLE .)
    NEXT            reduce using rule 108 (aritmeticExpresion -> VARIABLE MENOR_QUE VARIABLE .)
    DISPLAY         reduce using rule 108 (aritmeticExpresion -> VARIABLE MENOR_QUE VARIABLE .)
    ACCEPT          reduce using rule 108 (aritmeticExpresion -> VARIABLE MENOR_QUE VARIABLE .)
    ADD             reduce using rule 108 (aritmeticExpresion -> VARIABLE MENOR_QUE VARIABLE .)
    DIVIDE          reduce using rule 108 (aritmeticExpresion -> VARIABLE MENOR_QUE VARIABLE .)
    MULTIPLY        reduce using rule 108 (aritmeticExpresion -> VARIABLE MENOR_QUE VARIABLE .)
    SUBTRACT        reduce using rule 108 (aritmeticExpresion -> VARIABLE MENOR_QUE VARIABLE .)
    IF              reduce using rule 108 (aritmeticExpresion -> VARIABLE MENOR_QUE VARIABLE .)
    AND             reduce using rule 108 (aritmeticExpresion -> VARIABLE MENOR_QUE VARIABLE .)
    OR              reduce using rule 108 (aritmeticExpresion -> VARIABLE MENOR_QUE VARIABLE .)


state 190

    (113) aritmeticExpresion -> VARIABLE MENOR_QUE NUMERO .

    PARENT_DER      reduce using rule 113 (aritmeticExpresion -> VARIABLE MENOR_QUE NUMERO .)
    THEN            reduce using rule 113 (aritmeticExpresion -> VARIABLE MENOR_QUE NUMERO .)
    NEXT            reduce using rule 113 (aritmeticExpresion -> VARIABLE MENOR_QUE NUMERO .)
    DISPLAY         reduce using rule 113 (aritmeticExpresion -> VARIABLE MENOR_QUE NUMERO .)
    ACCEPT          reduce using rule 113 (aritmeticExpresion -> VARIABLE MENOR_QUE NUMERO .)
    ADD             reduce using rule 113 (aritmeticExpresion -> VARIABLE MENOR_QUE NUMERO .)
    DIVIDE          reduce using rule 113 (aritmeticExpresion -> VARIABLE MENOR_QUE NUMERO .)
    MULTIPLY        reduce using rule 113 (aritmeticExpresion -> VARIABLE MENOR_QUE NUMERO .)
    SUBTRACT        reduce using rule 113 (aritmeticExpresion -> VARIABLE MENOR_QUE NUMERO .)
    IF              reduce using rule 113 (aritmeticExpresion -> VARIABLE MENOR_QUE NUMERO .)
    AND             reduce using rule 113 (aritmeticExpresion -> VARIABLE MENOR_QUE NUMERO .)
    OR              reduce using rule 113 (aritmeticExpresion -> VARIABLE MENOR_QUE NUMERO .)


state 191

    (109) aritmeticExpresion -> VARIABLE MAYOR_QUE VARIABLE .

    PARENT_DER      reduce using rule 109 (aritmeticExpresion -> VARIABLE MAYOR_QUE VARIABLE .)
    THEN            reduce using rule 109 (aritmeticExpresion -> VARIABLE MAYOR_QUE VARIABLE .)
    NEXT            reduce using rule 109 (aritmeticExpresion -> VARIABLE MAYOR_QUE VARIABLE .)
    DISPLAY         reduce using rule 109 (aritmeticExpresion -> VARIABLE MAYOR_QUE VARIABLE .)
    ACCEPT          reduce using rule 109 (aritmeticExpresion -> VARIABLE MAYOR_QUE VARIABLE .)
    ADD             reduce using rule 109 (aritmeticExpresion -> VARIABLE MAYOR_QUE VARIABLE .)
    DIVIDE          reduce using rule 109 (aritmeticExpresion -> VARIABLE MAYOR_QUE VARIABLE .)
    MULTIPLY        reduce using rule 109 (aritmeticExpresion -> VARIABLE MAYOR_QUE VARIABLE .)
    SUBTRACT        reduce using rule 109 (aritmeticExpresion -> VARIABLE MAYOR_QUE VARIABLE .)
    IF              reduce using rule 109 (aritmeticExpresion -> VARIABLE MAYOR_QUE VARIABLE .)
    AND             reduce using rule 109 (aritmeticExpresion -> VARIABLE MAYOR_QUE VARIABLE .)
    OR              reduce using rule 109 (aritmeticExpresion -> VARIABLE MAYOR_QUE VARIABLE .)


state 192

    (114) aritmeticExpresion -> VARIABLE MAYOR_QUE NUMERO .

    PARENT_DER      reduce using rule 114 (aritmeticExpresion -> VARIABLE MAYOR_QUE NUMERO .)
    THEN            reduce using rule 114 (aritmeticExpresion -> VARIABLE MAYOR_QUE NUMERO .)
    NEXT            reduce using rule 114 (aritmeticExpresion -> VARIABLE MAYOR_QUE NUMERO .)
    DISPLAY         reduce using rule 114 (aritmeticExpresion -> VARIABLE MAYOR_QUE NUMERO .)
    ACCEPT          reduce using rule 114 (aritmeticExpresion -> VARIABLE MAYOR_QUE NUMERO .)
    ADD             reduce using rule 114 (aritmeticExpresion -> VARIABLE MAYOR_QUE NUMERO .)
    DIVIDE          reduce using rule 114 (aritmeticExpresion -> VARIABLE MAYOR_QUE NUMERO .)
    MULTIPLY        reduce using rule 114 (aritmeticExpresion -> VARIABLE MAYOR_QUE NUMERO .)
    SUBTRACT        reduce using rule 114 (aritmeticExpresion -> VARIABLE MAYOR_QUE NUMERO .)
    IF              reduce using rule 114 (aritmeticExpresion -> VARIABLE MAYOR_QUE NUMERO .)
    AND             reduce using rule 114 (aritmeticExpresion -> VARIABLE MAYOR_QUE NUMERO .)
    OR              reduce using rule 114 (aritmeticExpresion -> VARIABLE MAYOR_QUE NUMERO .)


state 193

    (115) aritmeticExpresion -> NUMERO MENOR_IGUAL VARIABLE .

    PARENT_DER      reduce using rule 115 (aritmeticExpresion -> NUMERO MENOR_IGUAL VARIABLE .)
    THEN            reduce using rule 115 (aritmeticExpresion -> NUMERO MENOR_IGUAL VARIABLE .)
    NEXT            reduce using rule 115 (aritmeticExpresion -> NUMERO MENOR_IGUAL VARIABLE .)
    DISPLAY         reduce using rule 115 (aritmeticExpresion -> NUMERO MENOR_IGUAL VARIABLE .)
    ACCEPT          reduce using rule 115 (aritmeticExpresion -> NUMERO MENOR_IGUAL VARIABLE .)
    ADD             reduce using rule 115 (aritmeticExpresion -> NUMERO MENOR_IGUAL VARIABLE .)
    DIVIDE          reduce using rule 115 (aritmeticExpresion -> NUMERO MENOR_IGUAL VARIABLE .)
    MULTIPLY        reduce using rule 115 (aritmeticExpresion -> NUMERO MENOR_IGUAL VARIABLE .)
    SUBTRACT        reduce using rule 115 (aritmeticExpresion -> NUMERO MENOR_IGUAL VARIABLE .)
    IF              reduce using rule 115 (aritmeticExpresion -> NUMERO MENOR_IGUAL VARIABLE .)
    AND             reduce using rule 115 (aritmeticExpresion -> NUMERO MENOR_IGUAL VARIABLE .)
    OR              reduce using rule 115 (aritmeticExpresion -> NUMERO MENOR_IGUAL VARIABLE .)


state 194

    (116) aritmeticExpresion -> NUMERO MAYOR_IGUAL VARIABLE .

    PARENT_DER      reduce using rule 116 (aritmeticExpresion -> NUMERO MAYOR_IGUAL VARIABLE .)
    THEN            reduce using rule 116 (aritmeticExpresion -> NUMERO MAYOR_IGUAL VARIABLE .)
    NEXT            reduce using rule 116 (aritmeticExpresion -> NUMERO MAYOR_IGUAL VARIABLE .)
    DISPLAY         reduce using rule 116 (aritmeticExpresion -> NUMERO MAYOR_IGUAL VARIABLE .)
    ACCEPT          reduce using rule 116 (aritmeticExpresion -> NUMERO MAYOR_IGUAL VARIABLE .)
    ADD             reduce using rule 116 (aritmeticExpresion -> NUMERO MAYOR_IGUAL VARIABLE .)
    DIVIDE          reduce using rule 116 (aritmeticExpresion -> NUMERO MAYOR_IGUAL VARIABLE .)
    MULTIPLY        reduce using rule 116 (aritmeticExpresion -> NUMERO MAYOR_IGUAL VARIABLE .)
    SUBTRACT        reduce using rule 116 (aritmeticExpresion -> NUMERO MAYOR_IGUAL VARIABLE .)
    IF              reduce using rule 116 (aritmeticExpresion -> NUMERO MAYOR_IGUAL VARIABLE .)
    AND             reduce using rule 116 (aritmeticExpresion -> NUMERO MAYOR_IGUAL VARIABLE .)
    OR              reduce using rule 116 (aritmeticExpresion -> NUMERO MAYOR_IGUAL VARIABLE .)


state 195

    (117) aritmeticExpresion -> NUMERO ES_IGUAL VARIABLE .

    PARENT_DER      reduce using rule 117 (aritmeticExpresion -> NUMERO ES_IGUAL VARIABLE .)
    THEN            reduce using rule 117 (aritmeticExpresion -> NUMERO ES_IGUAL VARIABLE .)
    NEXT            reduce using rule 117 (aritmeticExpresion -> NUMERO ES_IGUAL VARIABLE .)
    DISPLAY         reduce using rule 117 (aritmeticExpresion -> NUMERO ES_IGUAL VARIABLE .)
    ACCEPT          reduce using rule 117 (aritmeticExpresion -> NUMERO ES_IGUAL VARIABLE .)
    ADD             reduce using rule 117 (aritmeticExpresion -> NUMERO ES_IGUAL VARIABLE .)
    DIVIDE          reduce using rule 117 (aritmeticExpresion -> NUMERO ES_IGUAL VARIABLE .)
    MULTIPLY        reduce using rule 117 (aritmeticExpresion -> NUMERO ES_IGUAL VARIABLE .)
    SUBTRACT        reduce using rule 117 (aritmeticExpresion -> NUMERO ES_IGUAL VARIABLE .)
    IF              reduce using rule 117 (aritmeticExpresion -> NUMERO ES_IGUAL VARIABLE .)
    AND             reduce using rule 117 (aritmeticExpresion -> NUMERO ES_IGUAL VARIABLE .)
    OR              reduce using rule 117 (aritmeticExpresion -> NUMERO ES_IGUAL VARIABLE .)


state 196

    (118) aritmeticExpresion -> NUMERO MENOR_QUE VARIABLE .

    PARENT_DER      reduce using rule 118 (aritmeticExpresion -> NUMERO MENOR_QUE VARIABLE .)
    THEN            reduce using rule 118 (aritmeticExpresion -> NUMERO MENOR_QUE VARIABLE .)
    NEXT            reduce using rule 118 (aritmeticExpresion -> NUMERO MENOR_QUE VARIABLE .)
    DISPLAY         reduce using rule 118 (aritmeticExpresion -> NUMERO MENOR_QUE VARIABLE .)
    ACCEPT          reduce using rule 118 (aritmeticExpresion -> NUMERO MENOR_QUE VARIABLE .)
    ADD             reduce using rule 118 (aritmeticExpresion -> NUMERO MENOR_QUE VARIABLE .)
    DIVIDE          reduce using rule 118 (aritmeticExpresion -> NUMERO MENOR_QUE VARIABLE .)
    MULTIPLY        reduce using rule 118 (aritmeticExpresion -> NUMERO MENOR_QUE VARIABLE .)
    SUBTRACT        reduce using rule 118 (aritmeticExpresion -> NUMERO MENOR_QUE VARIABLE .)
    IF              reduce using rule 118 (aritmeticExpresion -> NUMERO MENOR_QUE VARIABLE .)
    AND             reduce using rule 118 (aritmeticExpresion -> NUMERO MENOR_QUE VARIABLE .)
    OR              reduce using rule 118 (aritmeticExpresion -> NUMERO MENOR_QUE VARIABLE .)


state 197

    (119) aritmeticExpresion -> NUMERO MAYOR_QUE VARIABLE .

    PARENT_DER      reduce using rule 119 (aritmeticExpresion -> NUMERO MAYOR_QUE VARIABLE .)
    THEN            reduce using rule 119 (aritmeticExpresion -> NUMERO MAYOR_QUE VARIABLE .)
    NEXT            reduce using rule 119 (aritmeticExpresion -> NUMERO MAYOR_QUE VARIABLE .)
    DISPLAY         reduce using rule 119 (aritmeticExpresion -> NUMERO MAYOR_QUE VARIABLE .)
    ACCEPT          reduce using rule 119 (aritmeticExpresion -> NUMERO MAYOR_QUE VARIABLE .)
    ADD             reduce using rule 119 (aritmeticExpresion -> NUMERO MAYOR_QUE VARIABLE .)
    DIVIDE          reduce using rule 119 (aritmeticExpresion -> NUMERO MAYOR_QUE VARIABLE .)
    MULTIPLY        reduce using rule 119 (aritmeticExpresion -> NUMERO MAYOR_QUE VARIABLE .)
    SUBTRACT        reduce using rule 119 (aritmeticExpresion -> NUMERO MAYOR_QUE VARIABLE .)
    IF              reduce using rule 119 (aritmeticExpresion -> NUMERO MAYOR_QUE VARIABLE .)
    AND             reduce using rule 119 (aritmeticExpresion -> NUMERO MAYOR_QUE VARIABLE .)
    OR              reduce using rule 119 (aritmeticExpresion -> NUMERO MAYOR_QUE VARIABLE .)


state 198

    (21) identification_division_content -> identification_division_content INSTALLATION PUNTO VARIABLE . PUNTO

    PUNTO           shift and go to state 230


state 199

    (22) identification_division_content -> identification_division_content DATE_WRITTEN PUNTO VARIABLE . PUNTO

    PUNTO           shift and go to state 231


state 200

    (23) identification_division_content -> identification_division_content DATE_COMPILED PUNTO VARIABLE . PUNTO

    PUNTO           shift and go to state 232


state 201

    (24) identification_division_content -> identification_division_content SECURITY PUNTO VARIABLE . PUNTO

    PUNTO           shift and go to state 233


state 202

    (20) identification_division_content -> AUTHOR PUNTO VARIABLE PUNTO . identification_division_content
    (20) identification_division_content -> . AUTHOR PUNTO VARIABLE PUNTO identification_division_content
    (21) identification_division_content -> . identification_division_content INSTALLATION PUNTO VARIABLE PUNTO
    (22) identification_division_content -> . identification_division_content DATE_WRITTEN PUNTO VARIABLE PUNTO
    (23) identification_division_content -> . identification_division_content DATE_COMPILED PUNTO VARIABLE PUNTO
    (24) identification_division_content -> . identification_division_content SECURITY PUNTO VARIABLE PUNTO
    (25) identification_division_content -> . empty
    (125) empty -> .

    AUTHOR          shift and go to state 69
    IDENTIFICATION  reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    END             reduce using rule 125 (empty -> .)
    ENVIRONMENT     reduce using rule 125 (empty -> .)
    DATA            reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    $end            reduce using rule 125 (empty -> .)
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    OBJECT_COMPUTER reduce using rule 125 (empty -> .)
    SPECIAL_NAMES   reduce using rule 125 (empty -> .)
    NUMERO          reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         reduce using rule 125 (empty -> .)
    ACCEPT          reduce using rule 125 (empty -> .)
    ADD             reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    MULTIPLY        reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)

    identification_division_content shift and go to state 234
    empty                          shift and go to state 70

state 203

    (17) nested_cobol_source_program -> IDENTIFICATION DIVISION PUNTO program_id_nested_cobol_source_program identification_division_content ENVIRONMENT DIVISION . PUNTO enviroment_division_content DATA DIVISION PUNTO data_division_content procedure_division nested_cobol_source_program END PROGRAM VARIABLE PUNTO

    PUNTO           shift and go to state 235


state 204

    (19) program_id_nested_cobol_source_program -> PROGRAM_ID PUNTO VARIABLE PUNTO .

    AUTHOR          reduce using rule 19 (program_id_nested_cobol_source_program -> PROGRAM_ID PUNTO VARIABLE PUNTO .)
    INSTALLATION    reduce using rule 19 (program_id_nested_cobol_source_program -> PROGRAM_ID PUNTO VARIABLE PUNTO .)
    DATE_WRITTEN    reduce using rule 19 (program_id_nested_cobol_source_program -> PROGRAM_ID PUNTO VARIABLE PUNTO .)
    DATE_COMPILED   reduce using rule 19 (program_id_nested_cobol_source_program -> PROGRAM_ID PUNTO VARIABLE PUNTO .)
    SECURITY        reduce using rule 19 (program_id_nested_cobol_source_program -> PROGRAM_ID PUNTO VARIABLE PUNTO .)
    ENVIRONMENT     reduce using rule 19 (program_id_nested_cobol_source_program -> PROGRAM_ID PUNTO VARIABLE PUNTO .)


state 205

    (30) configuration_section_paragrahs -> source_computer_paragraph object_computer_paragraph . special_names_paragraph
    (35) special_names_paragraph -> . SPECIAL_NAMES PUNTO VARIABLE PUNTO
    (36) special_names_paragraph -> . empty
    (125) empty -> .

  ! shift/reduce conflict for SPECIAL_NAMES resolved as shift
    SPECIAL_NAMES   shift and go to state 237
    IDENTIFICATION  reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    END             reduce using rule 125 (empty -> .)
    ENVIRONMENT     reduce using rule 125 (empty -> .)
    DATA            reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    $end            reduce using rule 125 (empty -> .)
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    OBJECT_COMPUTER reduce using rule 125 (empty -> .)
    NUMERO          reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         reduce using rule 125 (empty -> .)
    ACCEPT          reduce using rule 125 (empty -> .)
    ADD             reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    MULTIPLY        reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)

  ! SPECIAL_NAMES   [ reduce using rule 125 (empty -> .) ]

    special_names_paragraph        shift and go to state 236
    empty                          shift and go to state 238

state 206

    (33) object_computer_paragraph -> OBJECT_COMPUTER . PUNTO VARIABLE PUNTO

    PUNTO           shift and go to state 239


state 207

    (34) object_computer_paragraph -> empty .

    SPECIAL_NAMES   reduce using rule 34 (object_computer_paragraph -> empty .)
    IDENTIFICATION  reduce using rule 34 (object_computer_paragraph -> empty .)
    ID              reduce using rule 34 (object_computer_paragraph -> empty .)
    END             reduce using rule 34 (object_computer_paragraph -> empty .)
    ENVIRONMENT     reduce using rule 34 (object_computer_paragraph -> empty .)
    DATA            reduce using rule 34 (object_computer_paragraph -> empty .)
    PROCEDURE       reduce using rule 34 (object_computer_paragraph -> empty .)
    $end            reduce using rule 34 (object_computer_paragraph -> empty .)


state 208

    (31) source_computer_paragraph -> SOURCE_COMPUTER PUNTO . VARIABLE PUNTO

    VARIABLE        shift and go to state 240


state 209

    (42) data_item_entry -> data_item_entry stament_declaration_var .
    (45) stament_declaration_var -> stament_declaration_var . NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO
    (46) stament_declaration_var -> stament_declaration_var . NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (47) stament_declaration_var -> stament_declaration_var . NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (48) stament_declaration_var -> stament_declaration_var . NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING
    (49) stament_declaration_var -> stament_declaration_var . NUMERO VARIABLE PIC VARIABLE PUNTO
    (50) stament_declaration_var -> stament_declaration_var . NUMERO VARIABLE PIC NUMERO PUNTO

  ! shift/reduce conflict for NUMERO resolved as shift
    IDENTIFICATION  reduce using rule 42 (data_item_entry -> data_item_entry stament_declaration_var .)
    ID              reduce using rule 42 (data_item_entry -> data_item_entry stament_declaration_var .)
    END             reduce using rule 42 (data_item_entry -> data_item_entry stament_declaration_var .)
    ENVIRONMENT     reduce using rule 42 (data_item_entry -> data_item_entry stament_declaration_var .)
    DATA            reduce using rule 42 (data_item_entry -> data_item_entry stament_declaration_var .)
    PROCEDURE       reduce using rule 42 (data_item_entry -> data_item_entry stament_declaration_var .)
    $end            reduce using rule 42 (data_item_entry -> data_item_entry stament_declaration_var .)
    NUMERO          shift and go to state 210

  ! NUMERO          [ reduce using rule 42 (data_item_entry -> data_item_entry stament_declaration_var .) ]


state 210

    (45) stament_declaration_var -> stament_declaration_var NUMERO . VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO
    (46) stament_declaration_var -> stament_declaration_var NUMERO . VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (47) stament_declaration_var -> stament_declaration_var NUMERO . VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (48) stament_declaration_var -> stament_declaration_var NUMERO . VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING
    (49) stament_declaration_var -> stament_declaration_var NUMERO . VARIABLE PIC VARIABLE PUNTO
    (50) stament_declaration_var -> stament_declaration_var NUMERO . VARIABLE PIC NUMERO PUNTO

    VARIABLE        shift and go to state 241


state 211

    (51) stament_declaration_var -> NUMERO VARIABLE . PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO
    (52) stament_declaration_var -> NUMERO VARIABLE . PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (53) stament_declaration_var -> NUMERO VARIABLE . PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (54) stament_declaration_var -> NUMERO VARIABLE . PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING
    (55) stament_declaration_var -> NUMERO VARIABLE . PIC VARIABLE PUNTO
    (56) stament_declaration_var -> NUMERO VARIABLE . PIC NUMERO PUNTO

    PIC             shift and go to state 242
    PICTURE         shift and go to state 243


state 212

    (39) data_division_content -> FILE SECTION PUNTO WORKING_STORAGE SECTION . PUNTO data_item_entry

    PUNTO           shift and go to state 244


state 213

    (60) procedure_division -> PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps STOP RUN . PUNTO

    PUNTO           shift and go to state 245


state 214

    (78) stm_display -> DISPLAY STRING VARIABLE PUNTO stm_display .

    IDENTIFICATION  reduce using rule 78 (stm_display -> DISPLAY STRING VARIABLE PUNTO stm_display .)
    ID              reduce using rule 78 (stm_display -> DISPLAY STRING VARIABLE PUNTO stm_display .)
    END             reduce using rule 78 (stm_display -> DISPLAY STRING VARIABLE PUNTO stm_display .)
    ENVIRONMENT     reduce using rule 78 (stm_display -> DISPLAY STRING VARIABLE PUNTO stm_display .)
    DATA            reduce using rule 78 (stm_display -> DISPLAY STRING VARIABLE PUNTO stm_display .)
    PROCEDURE       reduce using rule 78 (stm_display -> DISPLAY STRING VARIABLE PUNTO stm_display .)
    $end            reduce using rule 78 (stm_display -> DISPLAY STRING VARIABLE PUNTO stm_display .)
    STOP            reduce using rule 78 (stm_display -> DISPLAY STRING VARIABLE PUNTO stm_display .)
    DISPLAY         reduce using rule 78 (stm_display -> DISPLAY STRING VARIABLE PUNTO stm_display .)
    ACCEPT          reduce using rule 78 (stm_display -> DISPLAY STRING VARIABLE PUNTO stm_display .)
    ADD             reduce using rule 78 (stm_display -> DISPLAY STRING VARIABLE PUNTO stm_display .)
    DIVIDE          reduce using rule 78 (stm_display -> DISPLAY STRING VARIABLE PUNTO stm_display .)
    MULTIPLY        reduce using rule 78 (stm_display -> DISPLAY STRING VARIABLE PUNTO stm_display .)
    SUBTRACT        reduce using rule 78 (stm_display -> DISPLAY STRING VARIABLE PUNTO stm_display .)
    IF              reduce using rule 78 (stm_display -> DISPLAY STRING VARIABLE PUNTO stm_display .)
    ELSE            reduce using rule 78 (stm_display -> DISPLAY STRING VARIABLE PUNTO stm_display .)
    END_IF          reduce using rule 78 (stm_display -> DISPLAY STRING VARIABLE PUNTO stm_display .)


state 215

    (73) stm_display -> DISPLAY STRING WITH NO ADVANCING . PUNTO
    (77) stm_display -> DISPLAY STRING WITH NO ADVANCING . PUNTO stm_display

    PUNTO           shift and go to state 246


state 216

    (75) stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ . VARIABLE PARENT_DER PUNTO
    (80) stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ . VARIABLE PARENT_DER PUNTO stm_display

    VARIABLE        shift and go to state 247


state 217

    (79) stm_display -> DISPLAY VARIABLE STRING PUNTO stm_display .

    IDENTIFICATION  reduce using rule 79 (stm_display -> DISPLAY VARIABLE STRING PUNTO stm_display .)
    ID              reduce using rule 79 (stm_display -> DISPLAY VARIABLE STRING PUNTO stm_display .)
    END             reduce using rule 79 (stm_display -> DISPLAY VARIABLE STRING PUNTO stm_display .)
    ENVIRONMENT     reduce using rule 79 (stm_display -> DISPLAY VARIABLE STRING PUNTO stm_display .)
    DATA            reduce using rule 79 (stm_display -> DISPLAY VARIABLE STRING PUNTO stm_display .)
    PROCEDURE       reduce using rule 79 (stm_display -> DISPLAY VARIABLE STRING PUNTO stm_display .)
    $end            reduce using rule 79 (stm_display -> DISPLAY VARIABLE STRING PUNTO stm_display .)
    STOP            reduce using rule 79 (stm_display -> DISPLAY VARIABLE STRING PUNTO stm_display .)
    DISPLAY         reduce using rule 79 (stm_display -> DISPLAY VARIABLE STRING PUNTO stm_display .)
    ACCEPT          reduce using rule 79 (stm_display -> DISPLAY VARIABLE STRING PUNTO stm_display .)
    ADD             reduce using rule 79 (stm_display -> DISPLAY VARIABLE STRING PUNTO stm_display .)
    DIVIDE          reduce using rule 79 (stm_display -> DISPLAY VARIABLE STRING PUNTO stm_display .)
    MULTIPLY        reduce using rule 79 (stm_display -> DISPLAY VARIABLE STRING PUNTO stm_display .)
    SUBTRACT        reduce using rule 79 (stm_display -> DISPLAY VARIABLE STRING PUNTO stm_display .)
    IF              reduce using rule 79 (stm_display -> DISPLAY VARIABLE STRING PUNTO stm_display .)
    ELSE            reduce using rule 79 (stm_display -> DISPLAY VARIABLE STRING PUNTO stm_display .)
    END_IF          reduce using rule 79 (stm_display -> DISPLAY VARIABLE STRING PUNTO stm_display .)


state 218

    (83) stm_add -> ADD VARIABLE TO VARIABLE GIVING . VARIABLE PUNTO

    VARIABLE        shift and go to state 248


state 219

    (84) stm_add -> ADD VARIABLE TO VARIABLE PUNTO .

    IDENTIFICATION  reduce using rule 84 (stm_add -> ADD VARIABLE TO VARIABLE PUNTO .)
    ID              reduce using rule 84 (stm_add -> ADD VARIABLE TO VARIABLE PUNTO .)
    END             reduce using rule 84 (stm_add -> ADD VARIABLE TO VARIABLE PUNTO .)
    ENVIRONMENT     reduce using rule 84 (stm_add -> ADD VARIABLE TO VARIABLE PUNTO .)
    DATA            reduce using rule 84 (stm_add -> ADD VARIABLE TO VARIABLE PUNTO .)
    PROCEDURE       reduce using rule 84 (stm_add -> ADD VARIABLE TO VARIABLE PUNTO .)
    $end            reduce using rule 84 (stm_add -> ADD VARIABLE TO VARIABLE PUNTO .)
    STOP            reduce using rule 84 (stm_add -> ADD VARIABLE TO VARIABLE PUNTO .)
    DISPLAY         reduce using rule 84 (stm_add -> ADD VARIABLE TO VARIABLE PUNTO .)
    ACCEPT          reduce using rule 84 (stm_add -> ADD VARIABLE TO VARIABLE PUNTO .)
    ADD             reduce using rule 84 (stm_add -> ADD VARIABLE TO VARIABLE PUNTO .)
    DIVIDE          reduce using rule 84 (stm_add -> ADD VARIABLE TO VARIABLE PUNTO .)
    MULTIPLY        reduce using rule 84 (stm_add -> ADD VARIABLE TO VARIABLE PUNTO .)
    SUBTRACT        reduce using rule 84 (stm_add -> ADD VARIABLE TO VARIABLE PUNTO .)
    IF              reduce using rule 84 (stm_add -> ADD VARIABLE TO VARIABLE PUNTO .)
    ELSE            reduce using rule 84 (stm_add -> ADD VARIABLE TO VARIABLE PUNTO .)
    END_IF          reduce using rule 84 (stm_add -> ADD VARIABLE TO VARIABLE PUNTO .)


state 220

    (85) stm_divide -> DIVIDE VARIABLE INTO VARIABLE GIVING . VARIABLE PUNTO

    VARIABLE        shift and go to state 249


state 221

    (86) stm_divide -> DIVIDE VARIABLE INTO VARIABLE PUNTO .

    IDENTIFICATION  reduce using rule 86 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE PUNTO .)
    ID              reduce using rule 86 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE PUNTO .)
    END             reduce using rule 86 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE PUNTO .)
    ENVIRONMENT     reduce using rule 86 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE PUNTO .)
    DATA            reduce using rule 86 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE PUNTO .)
    PROCEDURE       reduce using rule 86 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE PUNTO .)
    $end            reduce using rule 86 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE PUNTO .)
    STOP            reduce using rule 86 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE PUNTO .)
    DISPLAY         reduce using rule 86 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE PUNTO .)
    ACCEPT          reduce using rule 86 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE PUNTO .)
    ADD             reduce using rule 86 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE PUNTO .)
    DIVIDE          reduce using rule 86 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE PUNTO .)
    MULTIPLY        reduce using rule 86 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE PUNTO .)
    SUBTRACT        reduce using rule 86 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE PUNTO .)
    IF              reduce using rule 86 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE PUNTO .)
    ELSE            reduce using rule 86 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE PUNTO .)
    END_IF          reduce using rule 86 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE PUNTO .)


state 222

    (87) stm_multiply -> MULTIPLY VARIABLE BY VARIABLE GIVING . VARIABLE PUNTO

    VARIABLE        shift and go to state 250


state 223

    (88) stm_multiply -> MULTIPLY VARIABLE BY VARIABLE PUNTO .

    IDENTIFICATION  reduce using rule 88 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE PUNTO .)
    ID              reduce using rule 88 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE PUNTO .)
    END             reduce using rule 88 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE PUNTO .)
    ENVIRONMENT     reduce using rule 88 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE PUNTO .)
    DATA            reduce using rule 88 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE PUNTO .)
    PROCEDURE       reduce using rule 88 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE PUNTO .)
    $end            reduce using rule 88 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE PUNTO .)
    STOP            reduce using rule 88 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE PUNTO .)
    DISPLAY         reduce using rule 88 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE PUNTO .)
    ACCEPT          reduce using rule 88 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE PUNTO .)
    ADD             reduce using rule 88 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE PUNTO .)
    DIVIDE          reduce using rule 88 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE PUNTO .)
    MULTIPLY        reduce using rule 88 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE PUNTO .)
    SUBTRACT        reduce using rule 88 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE PUNTO .)
    IF              reduce using rule 88 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE PUNTO .)
    ELSE            reduce using rule 88 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE PUNTO .)
    END_IF          reduce using rule 88 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE PUNTO .)


state 224

    (89) stm_minus -> SUBTRACT VARIABLE FROM VARIABLE GIVING . VARIABLE PUNTO

    VARIABLE        shift and go to state 251


state 225

    (90) stm_minus -> SUBTRACT VARIABLE FROM VARIABLE PUNTO .

    IDENTIFICATION  reduce using rule 90 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE PUNTO .)
    ID              reduce using rule 90 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE PUNTO .)
    END             reduce using rule 90 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE PUNTO .)
    ENVIRONMENT     reduce using rule 90 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE PUNTO .)
    DATA            reduce using rule 90 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE PUNTO .)
    PROCEDURE       reduce using rule 90 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE PUNTO .)
    $end            reduce using rule 90 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE PUNTO .)
    STOP            reduce using rule 90 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE PUNTO .)
    DISPLAY         reduce using rule 90 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE PUNTO .)
    ACCEPT          reduce using rule 90 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE PUNTO .)
    ADD             reduce using rule 90 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE PUNTO .)
    DIVIDE          reduce using rule 90 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE PUNTO .)
    MULTIPLY        reduce using rule 90 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE PUNTO .)
    SUBTRACT        reduce using rule 90 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE PUNTO .)
    IF              reduce using rule 90 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE PUNTO .)
    ELSE            reduce using rule 90 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE PUNTO .)
    END_IF          reduce using rule 90 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE PUNTO .)


state 226

    (91) if_statement -> IF conditional ifthen ifelse END_IF .

    IDENTIFICATION  reduce using rule 91 (if_statement -> IF conditional ifthen ifelse END_IF .)
    ID              reduce using rule 91 (if_statement -> IF conditional ifthen ifelse END_IF .)
    END             reduce using rule 91 (if_statement -> IF conditional ifthen ifelse END_IF .)
    ENVIRONMENT     reduce using rule 91 (if_statement -> IF conditional ifthen ifelse END_IF .)
    DATA            reduce using rule 91 (if_statement -> IF conditional ifthen ifelse END_IF .)
    PROCEDURE       reduce using rule 91 (if_statement -> IF conditional ifthen ifelse END_IF .)
    $end            reduce using rule 91 (if_statement -> IF conditional ifthen ifelse END_IF .)
    STOP            reduce using rule 91 (if_statement -> IF conditional ifthen ifelse END_IF .)
    DISPLAY         reduce using rule 91 (if_statement -> IF conditional ifthen ifelse END_IF .)
    ACCEPT          reduce using rule 91 (if_statement -> IF conditional ifthen ifelse END_IF .)
    ADD             reduce using rule 91 (if_statement -> IF conditional ifthen ifelse END_IF .)
    DIVIDE          reduce using rule 91 (if_statement -> IF conditional ifthen ifelse END_IF .)
    MULTIPLY        reduce using rule 91 (if_statement -> IF conditional ifthen ifelse END_IF .)
    SUBTRACT        reduce using rule 91 (if_statement -> IF conditional ifthen ifelse END_IF .)
    IF              reduce using rule 91 (if_statement -> IF conditional ifthen ifelse END_IF .)
    ELSE            reduce using rule 91 (if_statement -> IF conditional ifthen ifelse END_IF .)
    END_IF          reduce using rule 91 (if_statement -> IF conditional ifthen ifelse END_IF .)


state 227

    (99) ifelse -> ELSE NEXT . SENTENCE

    SENTENCE        shift and go to state 252


state 228

    (100) ifelse -> ELSE statements .

    END_IF          reduce using rule 100 (ifelse -> ELSE statements .)
    IDENTIFICATION  reduce using rule 100 (ifelse -> ELSE statements .)
    ID              reduce using rule 100 (ifelse -> ELSE statements .)
    END             reduce using rule 100 (ifelse -> ELSE statements .)
    ENVIRONMENT     reduce using rule 100 (ifelse -> ELSE statements .)
    DATA            reduce using rule 100 (ifelse -> ELSE statements .)
    PROCEDURE       reduce using rule 100 (ifelse -> ELSE statements .)
    $end            reduce using rule 100 (ifelse -> ELSE statements .)
    STOP            reduce using rule 100 (ifelse -> ELSE statements .)
    DISPLAY         reduce using rule 100 (ifelse -> ELSE statements .)
    ACCEPT          reduce using rule 100 (ifelse -> ELSE statements .)
    ADD             reduce using rule 100 (ifelse -> ELSE statements .)
    DIVIDE          reduce using rule 100 (ifelse -> ELSE statements .)
    MULTIPLY        reduce using rule 100 (ifelse -> ELSE statements .)
    SUBTRACT        reduce using rule 100 (ifelse -> ELSE statements .)
    IF              reduce using rule 100 (ifelse -> ELSE statements .)
    ELSE            reduce using rule 100 (ifelse -> ELSE statements .)


state 229

    (95) ifthen -> THEN NEXT SENTENCE .

    ELSE            reduce using rule 95 (ifthen -> THEN NEXT SENTENCE .)
    IDENTIFICATION  reduce using rule 95 (ifthen -> THEN NEXT SENTENCE .)
    ID              reduce using rule 95 (ifthen -> THEN NEXT SENTENCE .)
    END             reduce using rule 95 (ifthen -> THEN NEXT SENTENCE .)
    ENVIRONMENT     reduce using rule 95 (ifthen -> THEN NEXT SENTENCE .)
    DATA            reduce using rule 95 (ifthen -> THEN NEXT SENTENCE .)
    PROCEDURE       reduce using rule 95 (ifthen -> THEN NEXT SENTENCE .)
    $end            reduce using rule 95 (ifthen -> THEN NEXT SENTENCE .)
    STOP            reduce using rule 95 (ifthen -> THEN NEXT SENTENCE .)
    DISPLAY         reduce using rule 95 (ifthen -> THEN NEXT SENTENCE .)
    ACCEPT          reduce using rule 95 (ifthen -> THEN NEXT SENTENCE .)
    ADD             reduce using rule 95 (ifthen -> THEN NEXT SENTENCE .)
    DIVIDE          reduce using rule 95 (ifthen -> THEN NEXT SENTENCE .)
    MULTIPLY        reduce using rule 95 (ifthen -> THEN NEXT SENTENCE .)
    SUBTRACT        reduce using rule 95 (ifthen -> THEN NEXT SENTENCE .)
    IF              reduce using rule 95 (ifthen -> THEN NEXT SENTENCE .)
    END_IF          reduce using rule 95 (ifthen -> THEN NEXT SENTENCE .)


state 230

    (21) identification_division_content -> identification_division_content INSTALLATION PUNTO VARIABLE PUNTO .

    IDENTIFICATION  reduce using rule 21 (identification_division_content -> identification_division_content INSTALLATION PUNTO VARIABLE PUNTO .)
    ID              reduce using rule 21 (identification_division_content -> identification_division_content INSTALLATION PUNTO VARIABLE PUNTO .)
    END             reduce using rule 21 (identification_division_content -> identification_division_content INSTALLATION PUNTO VARIABLE PUNTO .)
    ENVIRONMENT     reduce using rule 21 (identification_division_content -> identification_division_content INSTALLATION PUNTO VARIABLE PUNTO .)
    DATA            reduce using rule 21 (identification_division_content -> identification_division_content INSTALLATION PUNTO VARIABLE PUNTO .)
    PROCEDURE       reduce using rule 21 (identification_division_content -> identification_division_content INSTALLATION PUNTO VARIABLE PUNTO .)
    $end            reduce using rule 21 (identification_division_content -> identification_division_content INSTALLATION PUNTO VARIABLE PUNTO .)
    INSTALLATION    reduce using rule 21 (identification_division_content -> identification_division_content INSTALLATION PUNTO VARIABLE PUNTO .)
    DATE_WRITTEN    reduce using rule 21 (identification_division_content -> identification_division_content INSTALLATION PUNTO VARIABLE PUNTO .)
    DATE_COMPILED   reduce using rule 21 (identification_division_content -> identification_division_content INSTALLATION PUNTO VARIABLE PUNTO .)
    SECURITY        reduce using rule 21 (identification_division_content -> identification_division_content INSTALLATION PUNTO VARIABLE PUNTO .)


state 231

    (22) identification_division_content -> identification_division_content DATE_WRITTEN PUNTO VARIABLE PUNTO .

    IDENTIFICATION  reduce using rule 22 (identification_division_content -> identification_division_content DATE_WRITTEN PUNTO VARIABLE PUNTO .)
    ID              reduce using rule 22 (identification_division_content -> identification_division_content DATE_WRITTEN PUNTO VARIABLE PUNTO .)
    END             reduce using rule 22 (identification_division_content -> identification_division_content DATE_WRITTEN PUNTO VARIABLE PUNTO .)
    ENVIRONMENT     reduce using rule 22 (identification_division_content -> identification_division_content DATE_WRITTEN PUNTO VARIABLE PUNTO .)
    DATA            reduce using rule 22 (identification_division_content -> identification_division_content DATE_WRITTEN PUNTO VARIABLE PUNTO .)
    PROCEDURE       reduce using rule 22 (identification_division_content -> identification_division_content DATE_WRITTEN PUNTO VARIABLE PUNTO .)
    $end            reduce using rule 22 (identification_division_content -> identification_division_content DATE_WRITTEN PUNTO VARIABLE PUNTO .)
    INSTALLATION    reduce using rule 22 (identification_division_content -> identification_division_content DATE_WRITTEN PUNTO VARIABLE PUNTO .)
    DATE_WRITTEN    reduce using rule 22 (identification_division_content -> identification_division_content DATE_WRITTEN PUNTO VARIABLE PUNTO .)
    DATE_COMPILED   reduce using rule 22 (identification_division_content -> identification_division_content DATE_WRITTEN PUNTO VARIABLE PUNTO .)
    SECURITY        reduce using rule 22 (identification_division_content -> identification_division_content DATE_WRITTEN PUNTO VARIABLE PUNTO .)


state 232

    (23) identification_division_content -> identification_division_content DATE_COMPILED PUNTO VARIABLE PUNTO .

    IDENTIFICATION  reduce using rule 23 (identification_division_content -> identification_division_content DATE_COMPILED PUNTO VARIABLE PUNTO .)
    ID              reduce using rule 23 (identification_division_content -> identification_division_content DATE_COMPILED PUNTO VARIABLE PUNTO .)
    END             reduce using rule 23 (identification_division_content -> identification_division_content DATE_COMPILED PUNTO VARIABLE PUNTO .)
    ENVIRONMENT     reduce using rule 23 (identification_division_content -> identification_division_content DATE_COMPILED PUNTO VARIABLE PUNTO .)
    DATA            reduce using rule 23 (identification_division_content -> identification_division_content DATE_COMPILED PUNTO VARIABLE PUNTO .)
    PROCEDURE       reduce using rule 23 (identification_division_content -> identification_division_content DATE_COMPILED PUNTO VARIABLE PUNTO .)
    $end            reduce using rule 23 (identification_division_content -> identification_division_content DATE_COMPILED PUNTO VARIABLE PUNTO .)
    INSTALLATION    reduce using rule 23 (identification_division_content -> identification_division_content DATE_COMPILED PUNTO VARIABLE PUNTO .)
    DATE_WRITTEN    reduce using rule 23 (identification_division_content -> identification_division_content DATE_COMPILED PUNTO VARIABLE PUNTO .)
    DATE_COMPILED   reduce using rule 23 (identification_division_content -> identification_division_content DATE_COMPILED PUNTO VARIABLE PUNTO .)
    SECURITY        reduce using rule 23 (identification_division_content -> identification_division_content DATE_COMPILED PUNTO VARIABLE PUNTO .)


state 233

    (24) identification_division_content -> identification_division_content SECURITY PUNTO VARIABLE PUNTO .

    IDENTIFICATION  reduce using rule 24 (identification_division_content -> identification_division_content SECURITY PUNTO VARIABLE PUNTO .)
    ID              reduce using rule 24 (identification_division_content -> identification_division_content SECURITY PUNTO VARIABLE PUNTO .)
    END             reduce using rule 24 (identification_division_content -> identification_division_content SECURITY PUNTO VARIABLE PUNTO .)
    ENVIRONMENT     reduce using rule 24 (identification_division_content -> identification_division_content SECURITY PUNTO VARIABLE PUNTO .)
    DATA            reduce using rule 24 (identification_division_content -> identification_division_content SECURITY PUNTO VARIABLE PUNTO .)
    PROCEDURE       reduce using rule 24 (identification_division_content -> identification_division_content SECURITY PUNTO VARIABLE PUNTO .)
    $end            reduce using rule 24 (identification_division_content -> identification_division_content SECURITY PUNTO VARIABLE PUNTO .)
    INSTALLATION    reduce using rule 24 (identification_division_content -> identification_division_content SECURITY PUNTO VARIABLE PUNTO .)
    DATE_WRITTEN    reduce using rule 24 (identification_division_content -> identification_division_content SECURITY PUNTO VARIABLE PUNTO .)
    DATE_COMPILED   reduce using rule 24 (identification_division_content -> identification_division_content SECURITY PUNTO VARIABLE PUNTO .)
    SECURITY        reduce using rule 24 (identification_division_content -> identification_division_content SECURITY PUNTO VARIABLE PUNTO .)


state 234

    (20) identification_division_content -> AUTHOR PUNTO VARIABLE PUNTO identification_division_content .
    (21) identification_division_content -> identification_division_content . INSTALLATION PUNTO VARIABLE PUNTO
    (22) identification_division_content -> identification_division_content . DATE_WRITTEN PUNTO VARIABLE PUNTO
    (23) identification_division_content -> identification_division_content . DATE_COMPILED PUNTO VARIABLE PUNTO
    (24) identification_division_content -> identification_division_content . SECURITY PUNTO VARIABLE PUNTO

  ! shift/reduce conflict for INSTALLATION resolved as shift
  ! shift/reduce conflict for DATE_WRITTEN resolved as shift
  ! shift/reduce conflict for DATE_COMPILED resolved as shift
  ! shift/reduce conflict for SECURITY resolved as shift
    IDENTIFICATION  reduce using rule 20 (identification_division_content -> AUTHOR PUNTO VARIABLE PUNTO identification_division_content .)
    ID              reduce using rule 20 (identification_division_content -> AUTHOR PUNTO VARIABLE PUNTO identification_division_content .)
    END             reduce using rule 20 (identification_division_content -> AUTHOR PUNTO VARIABLE PUNTO identification_division_content .)
    ENVIRONMENT     reduce using rule 20 (identification_division_content -> AUTHOR PUNTO VARIABLE PUNTO identification_division_content .)
    DATA            reduce using rule 20 (identification_division_content -> AUTHOR PUNTO VARIABLE PUNTO identification_division_content .)
    PROCEDURE       reduce using rule 20 (identification_division_content -> AUTHOR PUNTO VARIABLE PUNTO identification_division_content .)
    $end            reduce using rule 20 (identification_division_content -> AUTHOR PUNTO VARIABLE PUNTO identification_division_content .)
    INSTALLATION    shift and go to state 95
    DATE_WRITTEN    shift and go to state 96
    DATE_COMPILED   shift and go to state 97
    SECURITY        shift and go to state 98

  ! INSTALLATION    [ reduce using rule 20 (identification_division_content -> AUTHOR PUNTO VARIABLE PUNTO identification_division_content .) ]
  ! DATE_WRITTEN    [ reduce using rule 20 (identification_division_content -> AUTHOR PUNTO VARIABLE PUNTO identification_division_content .) ]
  ! DATE_COMPILED   [ reduce using rule 20 (identification_division_content -> AUTHOR PUNTO VARIABLE PUNTO identification_division_content .) ]
  ! SECURITY        [ reduce using rule 20 (identification_division_content -> AUTHOR PUNTO VARIABLE PUNTO identification_division_content .) ]


state 235

    (17) nested_cobol_source_program -> IDENTIFICATION DIVISION PUNTO program_id_nested_cobol_source_program identification_division_content ENVIRONMENT DIVISION PUNTO . enviroment_division_content DATA DIVISION PUNTO data_division_content procedure_division nested_cobol_source_program END PROGRAM VARIABLE PUNTO
    (26) enviroment_division_content -> . configuration_section
    (27) configuration_section -> . CONFIGURATION SECTION PUNTO
    (28) configuration_section -> . CONFIGURATION SECTION PUNTO configuration_section_paragrahs
    (29) configuration_section -> . empty
    (125) empty -> .

    CONFIGURATION   shift and go to state 44
    IDENTIFICATION  reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    END             reduce using rule 125 (empty -> .)
    ENVIRONMENT     reduce using rule 125 (empty -> .)
    DATA            reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    $end            reduce using rule 125 (empty -> .)
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    OBJECT_COMPUTER reduce using rule 125 (empty -> .)
    SPECIAL_NAMES   reduce using rule 125 (empty -> .)
    NUMERO          reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         reduce using rule 125 (empty -> .)
    ACCEPT          reduce using rule 125 (empty -> .)
    ADD             reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    MULTIPLY        reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)

    enviroment_division_content    shift and go to state 253
    configuration_section          shift and go to state 43
    empty                          shift and go to state 45

state 236

    (30) configuration_section_paragrahs -> source_computer_paragraph object_computer_paragraph special_names_paragraph .

    IDENTIFICATION  reduce using rule 30 (configuration_section_paragrahs -> source_computer_paragraph object_computer_paragraph special_names_paragraph .)
    ID              reduce using rule 30 (configuration_section_paragrahs -> source_computer_paragraph object_computer_paragraph special_names_paragraph .)
    END             reduce using rule 30 (configuration_section_paragrahs -> source_computer_paragraph object_computer_paragraph special_names_paragraph .)
    ENVIRONMENT     reduce using rule 30 (configuration_section_paragrahs -> source_computer_paragraph object_computer_paragraph special_names_paragraph .)
    DATA            reduce using rule 30 (configuration_section_paragrahs -> source_computer_paragraph object_computer_paragraph special_names_paragraph .)
    PROCEDURE       reduce using rule 30 (configuration_section_paragrahs -> source_computer_paragraph object_computer_paragraph special_names_paragraph .)
    $end            reduce using rule 30 (configuration_section_paragrahs -> source_computer_paragraph object_computer_paragraph special_names_paragraph .)


state 237

    (35) special_names_paragraph -> SPECIAL_NAMES . PUNTO VARIABLE PUNTO

    PUNTO           shift and go to state 254


state 238

    (36) special_names_paragraph -> empty .

    IDENTIFICATION  reduce using rule 36 (special_names_paragraph -> empty .)
    ID              reduce using rule 36 (special_names_paragraph -> empty .)
    END             reduce using rule 36 (special_names_paragraph -> empty .)
    ENVIRONMENT     reduce using rule 36 (special_names_paragraph -> empty .)
    DATA            reduce using rule 36 (special_names_paragraph -> empty .)
    PROCEDURE       reduce using rule 36 (special_names_paragraph -> empty .)
    $end            reduce using rule 36 (special_names_paragraph -> empty .)


state 239

    (33) object_computer_paragraph -> OBJECT_COMPUTER PUNTO . VARIABLE PUNTO

    VARIABLE        shift and go to state 255


state 240

    (31) source_computer_paragraph -> SOURCE_COMPUTER PUNTO VARIABLE . PUNTO

    PUNTO           shift and go to state 256


state 241

    (45) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE . PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO
    (46) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE . PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (47) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE . PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (48) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE . PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING
    (49) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE . PIC VARIABLE PUNTO
    (50) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE . PIC NUMERO PUNTO

    PIC             shift and go to state 257
    PICTURE         shift and go to state 258


state 242

    (51) stament_declaration_var -> NUMERO VARIABLE PIC . NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO
    (52) stament_declaration_var -> NUMERO VARIABLE PIC . VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (54) stament_declaration_var -> NUMERO VARIABLE PIC . VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING
    (55) stament_declaration_var -> NUMERO VARIABLE PIC . VARIABLE PUNTO
    (56) stament_declaration_var -> NUMERO VARIABLE PIC . NUMERO PUNTO

    NUMERO          shift and go to state 259
    VARIABLE        shift and go to state 260


state 243

    (53) stament_declaration_var -> NUMERO VARIABLE PICTURE . VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO

    VARIABLE        shift and go to state 261


state 244

    (39) data_division_content -> FILE SECTION PUNTO WORKING_STORAGE SECTION PUNTO . data_item_entry
    (41) data_item_entry -> . stament_declaration_var
    (42) data_item_entry -> . data_item_entry stament_declaration_var
    (43) data_item_entry -> . empty
    (45) stament_declaration_var -> . stament_declaration_var NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO
    (46) stament_declaration_var -> . stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (47) stament_declaration_var -> . stament_declaration_var NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (48) stament_declaration_var -> . stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING
    (49) stament_declaration_var -> . stament_declaration_var NUMERO VARIABLE PIC VARIABLE PUNTO
    (50) stament_declaration_var -> . stament_declaration_var NUMERO VARIABLE PIC NUMERO PUNTO
    (51) stament_declaration_var -> . NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO
    (52) stament_declaration_var -> . NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (53) stament_declaration_var -> . NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (54) stament_declaration_var -> . NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING
    (55) stament_declaration_var -> . NUMERO VARIABLE PIC VARIABLE PUNTO
    (56) stament_declaration_var -> . NUMERO VARIABLE PIC NUMERO PUNTO
    (125) empty -> .

  ! shift/reduce conflict for NUMERO resolved as shift
    NUMERO          shift and go to state 154
    IDENTIFICATION  reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    END             reduce using rule 125 (empty -> .)
    ENVIRONMENT     reduce using rule 125 (empty -> .)
    DATA            reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    $end            reduce using rule 125 (empty -> .)
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    OBJECT_COMPUTER reduce using rule 125 (empty -> .)
    SPECIAL_NAMES   reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         reduce using rule 125 (empty -> .)
    ACCEPT          reduce using rule 125 (empty -> .)
    ADD             reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    MULTIPLY        reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)

  ! NUMERO          [ reduce using rule 125 (empty -> .) ]

    data_item_entry                shift and go to state 262
    stament_declaration_var        shift and go to state 152
    empty                          shift and go to state 153

state 245

    (60) procedure_division -> PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps STOP RUN PUNTO .

    IDENTIFICATION  reduce using rule 60 (procedure_division -> PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps STOP RUN PUNTO .)
    ID              reduce using rule 60 (procedure_division -> PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps STOP RUN PUNTO .)
    END             reduce using rule 60 (procedure_division -> PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps STOP RUN PUNTO .)
    ENVIRONMENT     reduce using rule 60 (procedure_division -> PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps STOP RUN PUNTO .)
    DATA            reduce using rule 60 (procedure_division -> PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps STOP RUN PUNTO .)
    PROCEDURE       reduce using rule 60 (procedure_division -> PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps STOP RUN PUNTO .)
    $end            reduce using rule 60 (procedure_division -> PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps STOP RUN PUNTO .)


state 246

    (73) stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO .
    (77) stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO . stm_display
    (71) stm_display -> . DISPLAY STRING PUNTO
    (72) stm_display -> . DISPLAY STRING VARIABLE PUNTO
    (73) stm_display -> . DISPLAY STRING WITH NO ADVANCING PUNTO
    (74) stm_display -> . DISPLAY VARIABLE STRING PUNTO
    (75) stm_display -> . DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO
    (76) stm_display -> . DISPLAY STRING PUNTO stm_display
    (77) stm_display -> . DISPLAY STRING WITH NO ADVANCING PUNTO stm_display
    (78) stm_display -> . DISPLAY STRING VARIABLE PUNTO stm_display
    (79) stm_display -> . DISPLAY VARIABLE STRING PUNTO stm_display
    (80) stm_display -> . DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display

  ! shift/reduce conflict for DISPLAY resolved as shift
    IDENTIFICATION  reduce using rule 73 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO .)
    ID              reduce using rule 73 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO .)
    END             reduce using rule 73 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO .)
    ENVIRONMENT     reduce using rule 73 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO .)
    DATA            reduce using rule 73 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO .)
    PROCEDURE       reduce using rule 73 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO .)
    $end            reduce using rule 73 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO .)
    STOP            reduce using rule 73 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO .)
    ACCEPT          reduce using rule 73 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO .)
    ADD             reduce using rule 73 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO .)
    DIVIDE          reduce using rule 73 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO .)
    MULTIPLY        reduce using rule 73 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO .)
    SUBTRACT        reduce using rule 73 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO .)
    IF              reduce using rule 73 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO .)
    ELSE            reduce using rule 73 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO .)
    END_IF          reduce using rule 73 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO .)
    DISPLAY         shift and go to state 61

  ! DISPLAY         [ reduce using rule 73 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO .) ]

    stm_display                    shift and go to state 263

state 247

    (75) stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE . PARENT_DER PUNTO
    (80) stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE . PARENT_DER PUNTO stm_display

    PARENT_DER      shift and go to state 264


state 248

    (83) stm_add -> ADD VARIABLE TO VARIABLE GIVING VARIABLE . PUNTO

    PUNTO           shift and go to state 265


state 249

    (85) stm_divide -> DIVIDE VARIABLE INTO VARIABLE GIVING VARIABLE . PUNTO

    PUNTO           shift and go to state 266


state 250

    (87) stm_multiply -> MULTIPLY VARIABLE BY VARIABLE GIVING VARIABLE . PUNTO

    PUNTO           shift and go to state 267


state 251

    (89) stm_minus -> SUBTRACT VARIABLE FROM VARIABLE GIVING VARIABLE . PUNTO

    PUNTO           shift and go to state 268


state 252

    (99) ifelse -> ELSE NEXT SENTENCE .

    END_IF          reduce using rule 99 (ifelse -> ELSE NEXT SENTENCE .)
    IDENTIFICATION  reduce using rule 99 (ifelse -> ELSE NEXT SENTENCE .)
    ID              reduce using rule 99 (ifelse -> ELSE NEXT SENTENCE .)
    END             reduce using rule 99 (ifelse -> ELSE NEXT SENTENCE .)
    ENVIRONMENT     reduce using rule 99 (ifelse -> ELSE NEXT SENTENCE .)
    DATA            reduce using rule 99 (ifelse -> ELSE NEXT SENTENCE .)
    PROCEDURE       reduce using rule 99 (ifelse -> ELSE NEXT SENTENCE .)
    $end            reduce using rule 99 (ifelse -> ELSE NEXT SENTENCE .)
    STOP            reduce using rule 99 (ifelse -> ELSE NEXT SENTENCE .)
    DISPLAY         reduce using rule 99 (ifelse -> ELSE NEXT SENTENCE .)
    ACCEPT          reduce using rule 99 (ifelse -> ELSE NEXT SENTENCE .)
    ADD             reduce using rule 99 (ifelse -> ELSE NEXT SENTENCE .)
    DIVIDE          reduce using rule 99 (ifelse -> ELSE NEXT SENTENCE .)
    MULTIPLY        reduce using rule 99 (ifelse -> ELSE NEXT SENTENCE .)
    SUBTRACT        reduce using rule 99 (ifelse -> ELSE NEXT SENTENCE .)
    IF              reduce using rule 99 (ifelse -> ELSE NEXT SENTENCE .)
    ELSE            reduce using rule 99 (ifelse -> ELSE NEXT SENTENCE .)


state 253

    (17) nested_cobol_source_program -> IDENTIFICATION DIVISION PUNTO program_id_nested_cobol_source_program identification_division_content ENVIRONMENT DIVISION PUNTO enviroment_division_content . DATA DIVISION PUNTO data_division_content procedure_division nested_cobol_source_program END PROGRAM VARIABLE PUNTO

    DATA            shift and go to state 269


state 254

    (35) special_names_paragraph -> SPECIAL_NAMES PUNTO . VARIABLE PUNTO

    VARIABLE        shift and go to state 270


state 255

    (33) object_computer_paragraph -> OBJECT_COMPUTER PUNTO VARIABLE . PUNTO

    PUNTO           shift and go to state 271


state 256

    (31) source_computer_paragraph -> SOURCE_COMPUTER PUNTO VARIABLE PUNTO .

    OBJECT_COMPUTER reduce using rule 31 (source_computer_paragraph -> SOURCE_COMPUTER PUNTO VARIABLE PUNTO .)
    SPECIAL_NAMES   reduce using rule 31 (source_computer_paragraph -> SOURCE_COMPUTER PUNTO VARIABLE PUNTO .)
    IDENTIFICATION  reduce using rule 31 (source_computer_paragraph -> SOURCE_COMPUTER PUNTO VARIABLE PUNTO .)
    ID              reduce using rule 31 (source_computer_paragraph -> SOURCE_COMPUTER PUNTO VARIABLE PUNTO .)
    END             reduce using rule 31 (source_computer_paragraph -> SOURCE_COMPUTER PUNTO VARIABLE PUNTO .)
    ENVIRONMENT     reduce using rule 31 (source_computer_paragraph -> SOURCE_COMPUTER PUNTO VARIABLE PUNTO .)
    DATA            reduce using rule 31 (source_computer_paragraph -> SOURCE_COMPUTER PUNTO VARIABLE PUNTO .)
    PROCEDURE       reduce using rule 31 (source_computer_paragraph -> SOURCE_COMPUTER PUNTO VARIABLE PUNTO .)
    $end            reduce using rule 31 (source_computer_paragraph -> SOURCE_COMPUTER PUNTO VARIABLE PUNTO .)


state 257

    (45) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC . NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO
    (46) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC . VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (48) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC . VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING
    (49) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC . VARIABLE PUNTO
    (50) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC . NUMERO PUNTO

    NUMERO          shift and go to state 272
    VARIABLE        shift and go to state 273


state 258

    (47) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PICTURE . VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO

    VARIABLE        shift and go to state 274


state 259

    (51) stament_declaration_var -> NUMERO VARIABLE PIC NUMERO . PARENT_IZQ NUMERO PARENT_DER PUNTO
    (56) stament_declaration_var -> NUMERO VARIABLE PIC NUMERO . PUNTO

    PARENT_IZQ      shift and go to state 275
    PUNTO           shift and go to state 276


state 260

    (52) stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE . PARENT_IZQ NUMERO PARENT_DER PUNTO
    (54) stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE . PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING
    (55) stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE . PUNTO

    PARENT_IZQ      shift and go to state 277
    PUNTO           shift and go to state 278


state 261

    (53) stament_declaration_var -> NUMERO VARIABLE PICTURE VARIABLE . PARENT_IZQ NUMERO PARENT_DER PUNTO

    PARENT_IZQ      shift and go to state 279


state 262

    (39) data_division_content -> FILE SECTION PUNTO WORKING_STORAGE SECTION PUNTO data_item_entry .
    (42) data_item_entry -> data_item_entry . stament_declaration_var
    (45) stament_declaration_var -> . stament_declaration_var NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO
    (46) stament_declaration_var -> . stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (47) stament_declaration_var -> . stament_declaration_var NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (48) stament_declaration_var -> . stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING
    (49) stament_declaration_var -> . stament_declaration_var NUMERO VARIABLE PIC VARIABLE PUNTO
    (50) stament_declaration_var -> . stament_declaration_var NUMERO VARIABLE PIC NUMERO PUNTO
    (51) stament_declaration_var -> . NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO
    (52) stament_declaration_var -> . NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (53) stament_declaration_var -> . NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO
    (54) stament_declaration_var -> . NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING
    (55) stament_declaration_var -> . NUMERO VARIABLE PIC VARIABLE PUNTO
    (56) stament_declaration_var -> . NUMERO VARIABLE PIC NUMERO PUNTO

    IDENTIFICATION  reduce using rule 39 (data_division_content -> FILE SECTION PUNTO WORKING_STORAGE SECTION PUNTO data_item_entry .)
    ID              reduce using rule 39 (data_division_content -> FILE SECTION PUNTO WORKING_STORAGE SECTION PUNTO data_item_entry .)
    END             reduce using rule 39 (data_division_content -> FILE SECTION PUNTO WORKING_STORAGE SECTION PUNTO data_item_entry .)
    ENVIRONMENT     reduce using rule 39 (data_division_content -> FILE SECTION PUNTO WORKING_STORAGE SECTION PUNTO data_item_entry .)
    DATA            reduce using rule 39 (data_division_content -> FILE SECTION PUNTO WORKING_STORAGE SECTION PUNTO data_item_entry .)
    PROCEDURE       reduce using rule 39 (data_division_content -> FILE SECTION PUNTO WORKING_STORAGE SECTION PUNTO data_item_entry .)
    $end            reduce using rule 39 (data_division_content -> FILE SECTION PUNTO WORKING_STORAGE SECTION PUNTO data_item_entry .)
    NUMERO          shift and go to state 154

    stament_declaration_var        shift and go to state 209

state 263

    (77) stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO stm_display .

    IDENTIFICATION  reduce using rule 77 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO stm_display .)
    ID              reduce using rule 77 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO stm_display .)
    END             reduce using rule 77 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO stm_display .)
    ENVIRONMENT     reduce using rule 77 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO stm_display .)
    DATA            reduce using rule 77 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO stm_display .)
    PROCEDURE       reduce using rule 77 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO stm_display .)
    $end            reduce using rule 77 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO stm_display .)
    STOP            reduce using rule 77 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO stm_display .)
    DISPLAY         reduce using rule 77 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO stm_display .)
    ACCEPT          reduce using rule 77 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO stm_display .)
    ADD             reduce using rule 77 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO stm_display .)
    DIVIDE          reduce using rule 77 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO stm_display .)
    MULTIPLY        reduce using rule 77 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO stm_display .)
    SUBTRACT        reduce using rule 77 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO stm_display .)
    IF              reduce using rule 77 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO stm_display .)
    ELSE            reduce using rule 77 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO stm_display .)
    END_IF          reduce using rule 77 (stm_display -> DISPLAY STRING WITH NO ADVANCING PUNTO stm_display .)


state 264

    (75) stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER . PUNTO
    (80) stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER . PUNTO stm_display

    PUNTO           shift and go to state 280


state 265

    (83) stm_add -> ADD VARIABLE TO VARIABLE GIVING VARIABLE PUNTO .

    IDENTIFICATION  reduce using rule 83 (stm_add -> ADD VARIABLE TO VARIABLE GIVING VARIABLE PUNTO .)
    ID              reduce using rule 83 (stm_add -> ADD VARIABLE TO VARIABLE GIVING VARIABLE PUNTO .)
    END             reduce using rule 83 (stm_add -> ADD VARIABLE TO VARIABLE GIVING VARIABLE PUNTO .)
    ENVIRONMENT     reduce using rule 83 (stm_add -> ADD VARIABLE TO VARIABLE GIVING VARIABLE PUNTO .)
    DATA            reduce using rule 83 (stm_add -> ADD VARIABLE TO VARIABLE GIVING VARIABLE PUNTO .)
    PROCEDURE       reduce using rule 83 (stm_add -> ADD VARIABLE TO VARIABLE GIVING VARIABLE PUNTO .)
    $end            reduce using rule 83 (stm_add -> ADD VARIABLE TO VARIABLE GIVING VARIABLE PUNTO .)
    STOP            reduce using rule 83 (stm_add -> ADD VARIABLE TO VARIABLE GIVING VARIABLE PUNTO .)
    DISPLAY         reduce using rule 83 (stm_add -> ADD VARIABLE TO VARIABLE GIVING VARIABLE PUNTO .)
    ACCEPT          reduce using rule 83 (stm_add -> ADD VARIABLE TO VARIABLE GIVING VARIABLE PUNTO .)
    ADD             reduce using rule 83 (stm_add -> ADD VARIABLE TO VARIABLE GIVING VARIABLE PUNTO .)
    DIVIDE          reduce using rule 83 (stm_add -> ADD VARIABLE TO VARIABLE GIVING VARIABLE PUNTO .)
    MULTIPLY        reduce using rule 83 (stm_add -> ADD VARIABLE TO VARIABLE GIVING VARIABLE PUNTO .)
    SUBTRACT        reduce using rule 83 (stm_add -> ADD VARIABLE TO VARIABLE GIVING VARIABLE PUNTO .)
    IF              reduce using rule 83 (stm_add -> ADD VARIABLE TO VARIABLE GIVING VARIABLE PUNTO .)
    ELSE            reduce using rule 83 (stm_add -> ADD VARIABLE TO VARIABLE GIVING VARIABLE PUNTO .)
    END_IF          reduce using rule 83 (stm_add -> ADD VARIABLE TO VARIABLE GIVING VARIABLE PUNTO .)


state 266

    (85) stm_divide -> DIVIDE VARIABLE INTO VARIABLE GIVING VARIABLE PUNTO .

    IDENTIFICATION  reduce using rule 85 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE GIVING VARIABLE PUNTO .)
    ID              reduce using rule 85 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE GIVING VARIABLE PUNTO .)
    END             reduce using rule 85 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE GIVING VARIABLE PUNTO .)
    ENVIRONMENT     reduce using rule 85 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE GIVING VARIABLE PUNTO .)
    DATA            reduce using rule 85 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE GIVING VARIABLE PUNTO .)
    PROCEDURE       reduce using rule 85 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE GIVING VARIABLE PUNTO .)
    $end            reduce using rule 85 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE GIVING VARIABLE PUNTO .)
    STOP            reduce using rule 85 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE GIVING VARIABLE PUNTO .)
    DISPLAY         reduce using rule 85 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE GIVING VARIABLE PUNTO .)
    ACCEPT          reduce using rule 85 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE GIVING VARIABLE PUNTO .)
    ADD             reduce using rule 85 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE GIVING VARIABLE PUNTO .)
    DIVIDE          reduce using rule 85 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE GIVING VARIABLE PUNTO .)
    MULTIPLY        reduce using rule 85 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE GIVING VARIABLE PUNTO .)
    SUBTRACT        reduce using rule 85 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE GIVING VARIABLE PUNTO .)
    IF              reduce using rule 85 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE GIVING VARIABLE PUNTO .)
    ELSE            reduce using rule 85 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE GIVING VARIABLE PUNTO .)
    END_IF          reduce using rule 85 (stm_divide -> DIVIDE VARIABLE INTO VARIABLE GIVING VARIABLE PUNTO .)


state 267

    (87) stm_multiply -> MULTIPLY VARIABLE BY VARIABLE GIVING VARIABLE PUNTO .

    IDENTIFICATION  reduce using rule 87 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE GIVING VARIABLE PUNTO .)
    ID              reduce using rule 87 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE GIVING VARIABLE PUNTO .)
    END             reduce using rule 87 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE GIVING VARIABLE PUNTO .)
    ENVIRONMENT     reduce using rule 87 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE GIVING VARIABLE PUNTO .)
    DATA            reduce using rule 87 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE GIVING VARIABLE PUNTO .)
    PROCEDURE       reduce using rule 87 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE GIVING VARIABLE PUNTO .)
    $end            reduce using rule 87 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE GIVING VARIABLE PUNTO .)
    STOP            reduce using rule 87 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE GIVING VARIABLE PUNTO .)
    DISPLAY         reduce using rule 87 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE GIVING VARIABLE PUNTO .)
    ACCEPT          reduce using rule 87 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE GIVING VARIABLE PUNTO .)
    ADD             reduce using rule 87 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE GIVING VARIABLE PUNTO .)
    DIVIDE          reduce using rule 87 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE GIVING VARIABLE PUNTO .)
    MULTIPLY        reduce using rule 87 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE GIVING VARIABLE PUNTO .)
    SUBTRACT        reduce using rule 87 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE GIVING VARIABLE PUNTO .)
    IF              reduce using rule 87 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE GIVING VARIABLE PUNTO .)
    ELSE            reduce using rule 87 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE GIVING VARIABLE PUNTO .)
    END_IF          reduce using rule 87 (stm_multiply -> MULTIPLY VARIABLE BY VARIABLE GIVING VARIABLE PUNTO .)


state 268

    (89) stm_minus -> SUBTRACT VARIABLE FROM VARIABLE GIVING VARIABLE PUNTO .

    IDENTIFICATION  reduce using rule 89 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE GIVING VARIABLE PUNTO .)
    ID              reduce using rule 89 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE GIVING VARIABLE PUNTO .)
    END             reduce using rule 89 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE GIVING VARIABLE PUNTO .)
    ENVIRONMENT     reduce using rule 89 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE GIVING VARIABLE PUNTO .)
    DATA            reduce using rule 89 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE GIVING VARIABLE PUNTO .)
    PROCEDURE       reduce using rule 89 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE GIVING VARIABLE PUNTO .)
    $end            reduce using rule 89 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE GIVING VARIABLE PUNTO .)
    STOP            reduce using rule 89 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE GIVING VARIABLE PUNTO .)
    DISPLAY         reduce using rule 89 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE GIVING VARIABLE PUNTO .)
    ACCEPT          reduce using rule 89 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE GIVING VARIABLE PUNTO .)
    ADD             reduce using rule 89 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE GIVING VARIABLE PUNTO .)
    DIVIDE          reduce using rule 89 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE GIVING VARIABLE PUNTO .)
    MULTIPLY        reduce using rule 89 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE GIVING VARIABLE PUNTO .)
    SUBTRACT        reduce using rule 89 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE GIVING VARIABLE PUNTO .)
    IF              reduce using rule 89 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE GIVING VARIABLE PUNTO .)
    ELSE            reduce using rule 89 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE GIVING VARIABLE PUNTO .)
    END_IF          reduce using rule 89 (stm_minus -> SUBTRACT VARIABLE FROM VARIABLE GIVING VARIABLE PUNTO .)


state 269

    (17) nested_cobol_source_program -> IDENTIFICATION DIVISION PUNTO program_id_nested_cobol_source_program identification_division_content ENVIRONMENT DIVISION PUNTO enviroment_division_content DATA . DIVISION PUNTO data_division_content procedure_division nested_cobol_source_program END PROGRAM VARIABLE PUNTO

    DIVISION        shift and go to state 281


state 270

    (35) special_names_paragraph -> SPECIAL_NAMES PUNTO VARIABLE . PUNTO

    PUNTO           shift and go to state 282


state 271

    (33) object_computer_paragraph -> OBJECT_COMPUTER PUNTO VARIABLE PUNTO .

    SPECIAL_NAMES   reduce using rule 33 (object_computer_paragraph -> OBJECT_COMPUTER PUNTO VARIABLE PUNTO .)
    IDENTIFICATION  reduce using rule 33 (object_computer_paragraph -> OBJECT_COMPUTER PUNTO VARIABLE PUNTO .)
    ID              reduce using rule 33 (object_computer_paragraph -> OBJECT_COMPUTER PUNTO VARIABLE PUNTO .)
    END             reduce using rule 33 (object_computer_paragraph -> OBJECT_COMPUTER PUNTO VARIABLE PUNTO .)
    ENVIRONMENT     reduce using rule 33 (object_computer_paragraph -> OBJECT_COMPUTER PUNTO VARIABLE PUNTO .)
    DATA            reduce using rule 33 (object_computer_paragraph -> OBJECT_COMPUTER PUNTO VARIABLE PUNTO .)
    PROCEDURE       reduce using rule 33 (object_computer_paragraph -> OBJECT_COMPUTER PUNTO VARIABLE PUNTO .)
    $end            reduce using rule 33 (object_computer_paragraph -> OBJECT_COMPUTER PUNTO VARIABLE PUNTO .)


state 272

    (45) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC NUMERO . PARENT_IZQ NUMERO PARENT_DER PUNTO
    (50) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC NUMERO . PUNTO

    PARENT_IZQ      shift and go to state 283
    PUNTO           shift and go to state 284


state 273

    (46) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE . PARENT_IZQ NUMERO PARENT_DER PUNTO
    (48) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE . PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING
    (49) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE . PUNTO

    PARENT_IZQ      shift and go to state 285
    PUNTO           shift and go to state 286


state 274

    (47) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PICTURE VARIABLE . PARENT_IZQ NUMERO PARENT_DER PUNTO

    PARENT_IZQ      shift and go to state 287


state 275

    (51) stament_declaration_var -> NUMERO VARIABLE PIC NUMERO PARENT_IZQ . NUMERO PARENT_DER PUNTO

    NUMERO          shift and go to state 288


state 276

    (56) stament_declaration_var -> NUMERO VARIABLE PIC NUMERO PUNTO .

    IDENTIFICATION  reduce using rule 56 (stament_declaration_var -> NUMERO VARIABLE PIC NUMERO PUNTO .)
    ID              reduce using rule 56 (stament_declaration_var -> NUMERO VARIABLE PIC NUMERO PUNTO .)
    END             reduce using rule 56 (stament_declaration_var -> NUMERO VARIABLE PIC NUMERO PUNTO .)
    ENVIRONMENT     reduce using rule 56 (stament_declaration_var -> NUMERO VARIABLE PIC NUMERO PUNTO .)
    DATA            reduce using rule 56 (stament_declaration_var -> NUMERO VARIABLE PIC NUMERO PUNTO .)
    PROCEDURE       reduce using rule 56 (stament_declaration_var -> NUMERO VARIABLE PIC NUMERO PUNTO .)
    $end            reduce using rule 56 (stament_declaration_var -> NUMERO VARIABLE PIC NUMERO PUNTO .)
    NUMERO          reduce using rule 56 (stament_declaration_var -> NUMERO VARIABLE PIC NUMERO PUNTO .)


state 277

    (52) stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ . NUMERO PARENT_DER PUNTO
    (54) stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ . NUMERO PARENT_DER PUNTO VALUE STRING

    NUMERO          shift and go to state 289


state 278

    (55) stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PUNTO .

    IDENTIFICATION  reduce using rule 55 (stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PUNTO .)
    ID              reduce using rule 55 (stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PUNTO .)
    END             reduce using rule 55 (stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PUNTO .)
    ENVIRONMENT     reduce using rule 55 (stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PUNTO .)
    DATA            reduce using rule 55 (stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PUNTO .)
    PROCEDURE       reduce using rule 55 (stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PUNTO .)
    $end            reduce using rule 55 (stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PUNTO .)
    NUMERO          reduce using rule 55 (stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PUNTO .)


state 279

    (53) stament_declaration_var -> NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ . NUMERO PARENT_DER PUNTO

    NUMERO          shift and go to state 290


state 280

    (75) stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO .
    (80) stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO . stm_display
    (71) stm_display -> . DISPLAY STRING PUNTO
    (72) stm_display -> . DISPLAY STRING VARIABLE PUNTO
    (73) stm_display -> . DISPLAY STRING WITH NO ADVANCING PUNTO
    (74) stm_display -> . DISPLAY VARIABLE STRING PUNTO
    (75) stm_display -> . DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO
    (76) stm_display -> . DISPLAY STRING PUNTO stm_display
    (77) stm_display -> . DISPLAY STRING WITH NO ADVANCING PUNTO stm_display
    (78) stm_display -> . DISPLAY STRING VARIABLE PUNTO stm_display
    (79) stm_display -> . DISPLAY VARIABLE STRING PUNTO stm_display
    (80) stm_display -> . DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display

  ! shift/reduce conflict for DISPLAY resolved as shift
    IDENTIFICATION  reduce using rule 75 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO .)
    ID              reduce using rule 75 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO .)
    END             reduce using rule 75 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO .)
    ENVIRONMENT     reduce using rule 75 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO .)
    DATA            reduce using rule 75 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO .)
    PROCEDURE       reduce using rule 75 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO .)
    $end            reduce using rule 75 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO .)
    STOP            reduce using rule 75 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO .)
    ACCEPT          reduce using rule 75 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO .)
    ADD             reduce using rule 75 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO .)
    DIVIDE          reduce using rule 75 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO .)
    MULTIPLY        reduce using rule 75 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO .)
    SUBTRACT        reduce using rule 75 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO .)
    IF              reduce using rule 75 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO .)
    ELSE            reduce using rule 75 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO .)
    END_IF          reduce using rule 75 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO .)
    DISPLAY         shift and go to state 61

  ! DISPLAY         [ reduce using rule 75 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO .) ]

    stm_display                    shift and go to state 291

state 281

    (17) nested_cobol_source_program -> IDENTIFICATION DIVISION PUNTO program_id_nested_cobol_source_program identification_division_content ENVIRONMENT DIVISION PUNTO enviroment_division_content DATA DIVISION . PUNTO data_division_content procedure_division nested_cobol_source_program END PROGRAM VARIABLE PUNTO

    PUNTO           shift and go to state 292


state 282

    (35) special_names_paragraph -> SPECIAL_NAMES PUNTO VARIABLE PUNTO .

    IDENTIFICATION  reduce using rule 35 (special_names_paragraph -> SPECIAL_NAMES PUNTO VARIABLE PUNTO .)
    ID              reduce using rule 35 (special_names_paragraph -> SPECIAL_NAMES PUNTO VARIABLE PUNTO .)
    END             reduce using rule 35 (special_names_paragraph -> SPECIAL_NAMES PUNTO VARIABLE PUNTO .)
    ENVIRONMENT     reduce using rule 35 (special_names_paragraph -> SPECIAL_NAMES PUNTO VARIABLE PUNTO .)
    DATA            reduce using rule 35 (special_names_paragraph -> SPECIAL_NAMES PUNTO VARIABLE PUNTO .)
    PROCEDURE       reduce using rule 35 (special_names_paragraph -> SPECIAL_NAMES PUNTO VARIABLE PUNTO .)
    $end            reduce using rule 35 (special_names_paragraph -> SPECIAL_NAMES PUNTO VARIABLE PUNTO .)


state 283

    (45) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC NUMERO PARENT_IZQ . NUMERO PARENT_DER PUNTO

    NUMERO          shift and go to state 293


state 284

    (50) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC NUMERO PUNTO .

    IDENTIFICATION  reduce using rule 50 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC NUMERO PUNTO .)
    ID              reduce using rule 50 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC NUMERO PUNTO .)
    END             reduce using rule 50 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC NUMERO PUNTO .)
    ENVIRONMENT     reduce using rule 50 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC NUMERO PUNTO .)
    DATA            reduce using rule 50 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC NUMERO PUNTO .)
    PROCEDURE       reduce using rule 50 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC NUMERO PUNTO .)
    $end            reduce using rule 50 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC NUMERO PUNTO .)
    NUMERO          reduce using rule 50 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC NUMERO PUNTO .)


state 285

    (46) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ . NUMERO PARENT_DER PUNTO
    (48) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ . NUMERO PARENT_DER PUNTO VALUE STRING

    NUMERO          shift and go to state 294


state 286

    (49) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PUNTO .

    IDENTIFICATION  reduce using rule 49 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PUNTO .)
    ID              reduce using rule 49 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PUNTO .)
    END             reduce using rule 49 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PUNTO .)
    ENVIRONMENT     reduce using rule 49 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PUNTO .)
    DATA            reduce using rule 49 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PUNTO .)
    PROCEDURE       reduce using rule 49 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PUNTO .)
    $end            reduce using rule 49 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PUNTO .)
    NUMERO          reduce using rule 49 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PUNTO .)


state 287

    (47) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ . NUMERO PARENT_DER PUNTO

    NUMERO          shift and go to state 295


state 288

    (51) stament_declaration_var -> NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO . PARENT_DER PUNTO

    PARENT_DER      shift and go to state 296


state 289

    (52) stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO . PARENT_DER PUNTO
    (54) stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO . PARENT_DER PUNTO VALUE STRING

    PARENT_DER      shift and go to state 297


state 290

    (53) stament_declaration_var -> NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO . PARENT_DER PUNTO

    PARENT_DER      shift and go to state 298


state 291

    (80) stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display .

    IDENTIFICATION  reduce using rule 80 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display .)
    ID              reduce using rule 80 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display .)
    END             reduce using rule 80 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display .)
    ENVIRONMENT     reduce using rule 80 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display .)
    DATA            reduce using rule 80 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display .)
    PROCEDURE       reduce using rule 80 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display .)
    $end            reduce using rule 80 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display .)
    STOP            reduce using rule 80 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display .)
    DISPLAY         reduce using rule 80 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display .)
    ACCEPT          reduce using rule 80 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display .)
    ADD             reduce using rule 80 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display .)
    DIVIDE          reduce using rule 80 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display .)
    MULTIPLY        reduce using rule 80 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display .)
    SUBTRACT        reduce using rule 80 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display .)
    IF              reduce using rule 80 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display .)
    ELSE            reduce using rule 80 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display .)
    END_IF          reduce using rule 80 (stm_display -> DISPLAY STRING FUNCTION LENGTH PARENT_IZQ VARIABLE PARENT_DER PUNTO stm_display .)


state 292

    (17) nested_cobol_source_program -> IDENTIFICATION DIVISION PUNTO program_id_nested_cobol_source_program identification_division_content ENVIRONMENT DIVISION PUNTO enviroment_division_content DATA DIVISION PUNTO . data_division_content procedure_division nested_cobol_source_program END PROGRAM VARIABLE PUNTO
    (37) data_division_content -> . WORKING_STORAGE SECTION PUNTO data_item_entry
    (38) data_division_content -> . FILE SECTION PUNTO data_file_entry
    (39) data_division_content -> . FILE SECTION PUNTO WORKING_STORAGE SECTION PUNTO data_item_entry
    (40) data_division_content -> . empty
    (125) empty -> .

    WORKING_STORAGE shift and go to state 47
    FILE            shift and go to state 48
    IDENTIFICATION  reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    END             reduce using rule 125 (empty -> .)
    ENVIRONMENT     reduce using rule 125 (empty -> .)
    DATA            reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    $end            reduce using rule 125 (empty -> .)
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    OBJECT_COMPUTER reduce using rule 125 (empty -> .)
    SPECIAL_NAMES   reduce using rule 125 (empty -> .)
    NUMERO          reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         reduce using rule 125 (empty -> .)
    ACCEPT          reduce using rule 125 (empty -> .)
    ADD             reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    MULTIPLY        reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)

    data_division_content          shift and go to state 299
    empty                          shift and go to state 49

state 293

    (45) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO . PARENT_DER PUNTO

    PARENT_DER      shift and go to state 300


state 294

    (46) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO . PARENT_DER PUNTO
    (48) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO . PARENT_DER PUNTO VALUE STRING

    PARENT_DER      shift and go to state 301


state 295

    (47) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO . PARENT_DER PUNTO

    PARENT_DER      shift and go to state 302


state 296

    (51) stament_declaration_var -> NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER . PUNTO

    PUNTO           shift and go to state 303


state 297

    (52) stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER . PUNTO
    (54) stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER . PUNTO VALUE STRING

    PUNTO           shift and go to state 304


state 298

    (53) stament_declaration_var -> NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER . PUNTO

    PUNTO           shift and go to state 305


state 299

    (17) nested_cobol_source_program -> IDENTIFICATION DIVISION PUNTO program_id_nested_cobol_source_program identification_division_content ENVIRONMENT DIVISION PUNTO enviroment_division_content DATA DIVISION PUNTO data_division_content . procedure_division nested_cobol_source_program END PROGRAM VARIABLE PUNTO
    (57) procedure_division -> . PROCEDURE DIVISION PUNTO paragrahps
    (58) procedure_division -> . PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps
    (59) procedure_division -> . PROCEDURE DIVISION PUNTO paragrahps STOP RUN PUNTO
    (60) procedure_division -> . PROCEDURE DIVISION PUNTO MAIN_PROCEDURE PUNTO paragrahps STOP RUN PUNTO

    PROCEDURE       shift and go to state 16

    procedure_division             shift and go to state 306

state 300

    (45) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER . PUNTO

    PUNTO           shift and go to state 307


state 301

    (46) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER . PUNTO
    (48) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER . PUNTO VALUE STRING

    PUNTO           shift and go to state 308


state 302

    (47) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER . PUNTO

    PUNTO           shift and go to state 309


state 303

    (51) stament_declaration_var -> NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO .

    IDENTIFICATION  reduce using rule 51 (stament_declaration_var -> NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    ID              reduce using rule 51 (stament_declaration_var -> NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    END             reduce using rule 51 (stament_declaration_var -> NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    ENVIRONMENT     reduce using rule 51 (stament_declaration_var -> NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    DATA            reduce using rule 51 (stament_declaration_var -> NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    PROCEDURE       reduce using rule 51 (stament_declaration_var -> NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    $end            reduce using rule 51 (stament_declaration_var -> NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    NUMERO          reduce using rule 51 (stament_declaration_var -> NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO .)


state 304

    (52) stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .
    (54) stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO . VALUE STRING

    IDENTIFICATION  reduce using rule 52 (stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    ID              reduce using rule 52 (stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    END             reduce using rule 52 (stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    ENVIRONMENT     reduce using rule 52 (stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    DATA            reduce using rule 52 (stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    PROCEDURE       reduce using rule 52 (stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    $end            reduce using rule 52 (stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    NUMERO          reduce using rule 52 (stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    VALUE           shift and go to state 310


state 305

    (53) stament_declaration_var -> NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .

    IDENTIFICATION  reduce using rule 53 (stament_declaration_var -> NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    ID              reduce using rule 53 (stament_declaration_var -> NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    END             reduce using rule 53 (stament_declaration_var -> NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    ENVIRONMENT     reduce using rule 53 (stament_declaration_var -> NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    DATA            reduce using rule 53 (stament_declaration_var -> NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    PROCEDURE       reduce using rule 53 (stament_declaration_var -> NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    $end            reduce using rule 53 (stament_declaration_var -> NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    NUMERO          reduce using rule 53 (stament_declaration_var -> NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)


state 306

    (17) nested_cobol_source_program -> IDENTIFICATION DIVISION PUNTO program_id_nested_cobol_source_program identification_division_content ENVIRONMENT DIVISION PUNTO enviroment_division_content DATA DIVISION PUNTO data_division_content procedure_division . nested_cobol_source_program END PROGRAM VARIABLE PUNTO
    (17) nested_cobol_source_program -> . IDENTIFICATION DIVISION PUNTO program_id_nested_cobol_source_program identification_division_content ENVIRONMENT DIVISION PUNTO enviroment_division_content DATA DIVISION PUNTO data_division_content procedure_division nested_cobol_source_program END PROGRAM VARIABLE PUNTO
    (18) nested_cobol_source_program -> . empty
    (125) empty -> .

  ! shift/reduce conflict for IDENTIFICATION resolved as shift
    IDENTIFICATION  shift and go to state 24
    ID              reduce using rule 125 (empty -> .)
    END             reduce using rule 125 (empty -> .)
    ENVIRONMENT     reduce using rule 125 (empty -> .)
    DATA            reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    $end            reduce using rule 125 (empty -> .)
    INSTALLATION    reduce using rule 125 (empty -> .)
    DATE_WRITTEN    reduce using rule 125 (empty -> .)
    DATE_COMPILED   reduce using rule 125 (empty -> .)
    SECURITY        reduce using rule 125 (empty -> .)
    OBJECT_COMPUTER reduce using rule 125 (empty -> .)
    SPECIAL_NAMES   reduce using rule 125 (empty -> .)
    NUMERO          reduce using rule 125 (empty -> .)
    STOP            reduce using rule 125 (empty -> .)
    DISPLAY         reduce using rule 125 (empty -> .)
    ACCEPT          reduce using rule 125 (empty -> .)
    ADD             reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    MULTIPLY        reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)

  ! IDENTIFICATION  [ reduce using rule 125 (empty -> .) ]

    nested_cobol_source_program    shift and go to state 311
    empty                          shift and go to state 25

state 307

    (45) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO .

    IDENTIFICATION  reduce using rule 45 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    ID              reduce using rule 45 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    END             reduce using rule 45 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    ENVIRONMENT     reduce using rule 45 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    DATA            reduce using rule 45 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    PROCEDURE       reduce using rule 45 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    $end            reduce using rule 45 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    NUMERO          reduce using rule 45 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC NUMERO PARENT_IZQ NUMERO PARENT_DER PUNTO .)


state 308

    (46) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .
    (48) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO . VALUE STRING

    IDENTIFICATION  reduce using rule 46 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    ID              reduce using rule 46 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    END             reduce using rule 46 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    ENVIRONMENT     reduce using rule 46 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    DATA            reduce using rule 46 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    PROCEDURE       reduce using rule 46 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    $end            reduce using rule 46 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    NUMERO          reduce using rule 46 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    VALUE           shift and go to state 312


state 309

    (47) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .

    IDENTIFICATION  reduce using rule 47 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    ID              reduce using rule 47 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    END             reduce using rule 47 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    ENVIRONMENT     reduce using rule 47 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    DATA            reduce using rule 47 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    PROCEDURE       reduce using rule 47 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    $end            reduce using rule 47 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)
    NUMERO          reduce using rule 47 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PICTURE VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO .)


state 310

    (54) stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE . STRING

    STRING          shift and go to state 313


state 311

    (17) nested_cobol_source_program -> IDENTIFICATION DIVISION PUNTO program_id_nested_cobol_source_program identification_division_content ENVIRONMENT DIVISION PUNTO enviroment_division_content DATA DIVISION PUNTO data_division_content procedure_division nested_cobol_source_program . END PROGRAM VARIABLE PUNTO

    END             shift and go to state 314


state 312

    (48) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE . STRING

    STRING          shift and go to state 315


state 313

    (54) stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING .

    IDENTIFICATION  reduce using rule 54 (stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING .)
    ID              reduce using rule 54 (stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING .)
    END             reduce using rule 54 (stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING .)
    ENVIRONMENT     reduce using rule 54 (stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING .)
    DATA            reduce using rule 54 (stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING .)
    PROCEDURE       reduce using rule 54 (stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING .)
    $end            reduce using rule 54 (stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING .)
    NUMERO          reduce using rule 54 (stament_declaration_var -> NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING .)


state 314

    (17) nested_cobol_source_program -> IDENTIFICATION DIVISION PUNTO program_id_nested_cobol_source_program identification_division_content ENVIRONMENT DIVISION PUNTO enviroment_division_content DATA DIVISION PUNTO data_division_content procedure_division nested_cobol_source_program END . PROGRAM VARIABLE PUNTO

    PROGRAM         shift and go to state 316


state 315

    (48) stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING .

    IDENTIFICATION  reduce using rule 48 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING .)
    ID              reduce using rule 48 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING .)
    END             reduce using rule 48 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING .)
    ENVIRONMENT     reduce using rule 48 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING .)
    DATA            reduce using rule 48 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING .)
    PROCEDURE       reduce using rule 48 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING .)
    $end            reduce using rule 48 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING .)
    NUMERO          reduce using rule 48 (stament_declaration_var -> stament_declaration_var NUMERO VARIABLE PIC VARIABLE PARENT_IZQ NUMERO PARENT_DER PUNTO VALUE STRING .)


state 316

    (17) nested_cobol_source_program -> IDENTIFICATION DIVISION PUNTO program_id_nested_cobol_source_program identification_division_content ENVIRONMENT DIVISION PUNTO enviroment_division_content DATA DIVISION PUNTO data_division_content procedure_division nested_cobol_source_program END PROGRAM . VARIABLE PUNTO

    VARIABLE        shift and go to state 317


state 317

    (17) nested_cobol_source_program -> IDENTIFICATION DIVISION PUNTO program_id_nested_cobol_source_program identification_division_content ENVIRONMENT DIVISION PUNTO enviroment_division_content DATA DIVISION PUNTO data_division_content procedure_division nested_cobol_source_program END PROGRAM VARIABLE . PUNTO

    PUNTO           shift and go to state 318


state 318

    (17) nested_cobol_source_program -> IDENTIFICATION DIVISION PUNTO program_id_nested_cobol_source_program identification_division_content ENVIRONMENT DIVISION PUNTO enviroment_division_content DATA DIVISION PUNTO data_division_content procedure_division nested_cobol_source_program END PROGRAM VARIABLE PUNTO .

    IDENTIFICATION  reduce using rule 17 (nested_cobol_source_program -> IDENTIFICATION DIVISION PUNTO program_id_nested_cobol_source_program identification_division_content ENVIRONMENT DIVISION PUNTO enviroment_division_content DATA DIVISION PUNTO data_division_content procedure_division nested_cobol_source_program END PROGRAM VARIABLE PUNTO .)
    ID              reduce using rule 17 (nested_cobol_source_program -> IDENTIFICATION DIVISION PUNTO program_id_nested_cobol_source_program identification_division_content ENVIRONMENT DIVISION PUNTO enviroment_division_content DATA DIVISION PUNTO data_division_content procedure_division nested_cobol_source_program END PROGRAM VARIABLE PUNTO .)
    END             reduce using rule 17 (nested_cobol_source_program -> IDENTIFICATION DIVISION PUNTO program_id_nested_cobol_source_program identification_division_content ENVIRONMENT DIVISION PUNTO enviroment_division_content DATA DIVISION PUNTO data_division_content procedure_division nested_cobol_source_program END PROGRAM VARIABLE PUNTO .)
    ENVIRONMENT     reduce using rule 17 (nested_cobol_source_program -> IDENTIFICATION DIVISION PUNTO program_id_nested_cobol_source_program identification_division_content ENVIRONMENT DIVISION PUNTO enviroment_division_content DATA DIVISION PUNTO data_division_content procedure_division nested_cobol_source_program END PROGRAM VARIABLE PUNTO .)
    DATA            reduce using rule 17 (nested_cobol_source_program -> IDENTIFICATION DIVISION PUNTO program_id_nested_cobol_source_program identification_division_content ENVIRONMENT DIVISION PUNTO enviroment_division_content DATA DIVISION PUNTO data_division_content procedure_division nested_cobol_source_program END PROGRAM VARIABLE PUNTO .)
    PROCEDURE       reduce using rule 17 (nested_cobol_source_program -> IDENTIFICATION DIVISION PUNTO program_id_nested_cobol_source_program identification_division_content ENVIRONMENT DIVISION PUNTO enviroment_division_content DATA DIVISION PUNTO data_division_content procedure_division nested_cobol_source_program END PROGRAM VARIABLE PUNTO .)
    $end            reduce using rule 17 (nested_cobol_source_program -> IDENTIFICATION DIVISION PUNTO program_id_nested_cobol_source_program identification_division_content ENVIRONMENT DIVISION PUNTO enviroment_division_content DATA DIVISION PUNTO data_division_content procedure_division nested_cobol_source_program END PROGRAM VARIABLE PUNTO .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IDENTIFICATION in state 0 resolved as shift
WARNING: shift/reduce conflict for ID in state 0 resolved as shift
WARNING: shift/reduce conflict for END in state 0 resolved as shift
WARNING: shift/reduce conflict for ENVIRONMENT in state 2 resolved as shift
WARNING: shift/reduce conflict for DATA in state 2 resolved as shift
WARNING: shift/reduce conflict for PROCEDURE in state 2 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICATION in state 3 resolved as shift
WARNING: shift/reduce conflict for ID in state 3 resolved as shift
WARNING: shift/reduce conflict for END in state 3 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICATION in state 9 resolved as shift
WARNING: shift/reduce conflict for ID in state 9 resolved as shift
WARNING: shift/reduce conflict for END in state 9 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICATION in state 10 resolved as shift
WARNING: shift/reduce conflict for ID in state 10 resolved as shift
WARNING: shift/reduce conflict for END in state 10 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICATION in state 11 resolved as shift
WARNING: shift/reduce conflict for ENVIRONMENT in state 17 resolved as shift
WARNING: shift/reduce conflict for DATA in state 17 resolved as shift
WARNING: shift/reduce conflict for ENVIRONMENT in state 17 resolved as shift
WARNING: shift/reduce conflict for DATA in state 17 resolved as shift
WARNING: shift/reduce conflict for PROCEDURE in state 17 resolved as shift
WARNING: shift/reduce conflict for ENVIRONMENT in state 21 resolved as shift
WARNING: shift/reduce conflict for DATA in state 21 resolved as shift
WARNING: shift/reduce conflict for ENVIRONMENT in state 21 resolved as shift
WARNING: shift/reduce conflict for DATA in state 21 resolved as shift
WARNING: shift/reduce conflict for PROCEDURE in state 21 resolved as shift
WARNING: shift/reduce conflict for ENVIRONMENT in state 22 resolved as shift
WARNING: shift/reduce conflict for DATA in state 22 resolved as shift
WARNING: shift/reduce conflict for ENVIRONMENT in state 22 resolved as shift
WARNING: shift/reduce conflict for DATA in state 22 resolved as shift
WARNING: shift/reduce conflict for PROCEDURE in state 22 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICATION in state 23 resolved as shift
WARNING: shift/reduce conflict for ID in state 23 resolved as shift
WARNING: shift/reduce conflict for END in state 23 resolved as shift
WARNING: shift/reduce conflict for ENVIRONMENT in state 32 resolved as shift
WARNING: shift/reduce conflict for DATA in state 32 resolved as shift
WARNING: shift/reduce conflict for ENVIRONMENT in state 32 resolved as shift
WARNING: shift/reduce conflict for DATA in state 32 resolved as shift
WARNING: shift/reduce conflict for PROCEDURE in state 32 resolved as shift
WARNING: shift/reduce conflict for DISPLAY in state 36 resolved as shift
WARNING: shift/reduce conflict for ACCEPT in state 36 resolved as shift
WARNING: shift/reduce conflict for ADD in state 36 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 36 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 36 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 36 resolved as shift
WARNING: shift/reduce conflict for IF in state 36 resolved as shift
WARNING: shift/reduce conflict for DISPLAY in state 80 resolved as shift
WARNING: shift/reduce conflict for ACCEPT in state 80 resolved as shift
WARNING: shift/reduce conflict for ADD in state 80 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 80 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 80 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 80 resolved as shift
WARNING: shift/reduce conflict for IF in state 80 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 104 resolved as shift
WARNING: shift/reduce conflict for DISPLAY in state 108 resolved as shift
WARNING: shift/reduce conflict for ACCEPT in state 113 resolved as shift
WARNING: shift/reduce conflict for END_IF in state 118 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 118 resolved as shift
WARNING: shift/reduce conflict for OBJECT_COMPUTER in state 148 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 152 resolved as shift
WARNING: shift/reduce conflict for DISPLAY in state 161 resolved as shift
WARNING: shift/reduce conflict for DISPLAY in state 164 resolved as shift
WARNING: shift/reduce conflict for END_IF in state 170 resolved as shift
WARNING: shift/reduce conflict for OR in state 180 resolved as shift
WARNING: shift/reduce conflict for AND in state 180 resolved as shift
WARNING: shift/reduce conflict for OR in state 182 resolved as shift
WARNING: shift/reduce conflict for AND in state 182 resolved as shift
WARNING: shift/reduce conflict for SPECIAL_NAMES in state 205 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 209 resolved as shift
WARNING: shift/reduce conflict for INSTALLATION in state 234 resolved as shift
WARNING: shift/reduce conflict for DATE_WRITTEN in state 234 resolved as shift
WARNING: shift/reduce conflict for DATE_COMPILED in state 234 resolved as shift
WARNING: shift/reduce conflict for SECURITY in state 234 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 244 resolved as shift
WARNING: shift/reduce conflict for DISPLAY in state 246 resolved as shift
WARNING: shift/reduce conflict for DISPLAY in state 280 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICATION in state 306 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (program -> cobol_source_program)
WARNING: rejected rule (empty -> <empty>) in state 2
WARNING: reduce/reduce conflict in state 13 resolved using rule (cobol_enviroment_division -> empty)
WARNING: rejected rule (cobol_data_division -> empty) in state 13
WARNING: reduce/reduce conflict in state 17 resolved using rule (cobol_source_program -> cobol_identification_division cobol_source_program)
WARNING: rejected rule (empty -> <empty>) in state 17
WARNING: reduce/reduce conflict in state 21 resolved using rule (cobol_source_program -> cobol_source_program cobol_enviroment_division cobol_source_program)
WARNING: rejected rule (empty -> <empty>) in state 21
WARNING: reduce/reduce conflict in state 22 resolved using rule (cobol_source_program -> cobol_source_program cobol_data_division cobol_source_program)
WARNING: rejected rule (empty -> <empty>) in state 22
WARNING: reduce/reduce conflict in state 32 resolved using rule (cobol_source_program -> cobol_source_program cobol_procedure_division nested_cobol_source_program cobol_source_program)
WARNING: rejected rule (empty -> <empty>) in state 32
WARNING: reduce/reduce conflict in state 103 resolved using rule (configuration_section -> CONFIGURATION SECTION PUNTO)
WARNING: rejected rule (empty -> <empty>) in state 103
WARNING: Rule (cobol_data_division -> empty) is never reduced
